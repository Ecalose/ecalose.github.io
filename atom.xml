<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Icarus&#39;s Blog</title>
  
  
  <link href="http://ecalose.github.io/atom.xml" rel="self"/>
  
  <link href="http://ecalose.github.io/"/>
  <updated>2020-08-25T08:50:13.355Z</updated>
  <id>http://ecalose.github.io/</id>
  
  <author>
    <name>Icarus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cloudflare 免费CDN配置教程</title>
    <link href="http://ecalose.github.io/posts/cef0265a.html"/>
    <id>http://ecalose.github.io/posts/cef0265a.html</id>
    <published>2020-07-13T05:53:56.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CloudFlare-免费CDN配置教程"><a href="#CloudFlare-免费CDN配置教程" class="headerlink" title="CloudFlare 免费CDN配置教程"></a>CloudFlare 免费CDN配置教程</h1><h3 id="一、几个简单问题"><a href="#一、几个简单问题" class="headerlink" title="一、几个简单问题"></a>一、几个简单问题</h3><ol><li>免费版CloudFlare 自定义ip需要使用第三方版本cfp（就是CloudFlare partener）后文使用cfp代替。这里推荐奔牛。 </li><li>很明显自定义ip要使用非dns接入方式。但是官方版只支持dns接入，所以要使用第三方版本。</li><li><a href="http://cdn.bnxb.com/">http://cdn.bnxb.com/</a> 本次教程使用的网站<br><a href="https://cf.tlo.xyz/">https://cf.tlo.xyz/</a> 稳定存在了很长时间，值得使用<br><a href="http://cf.github.ci/">http://cf.github.ci/</a> freenom免费域名套CF的救星</li></ol><h4 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h4><p>Cloudflare默认不支持自选节点,访问时的速度基本看脸。而我们的思路就是使用一个第三方服务来选择各地最优秀的节点。<br>举个例子,当浏览器访问接入默认CF的域名时,是先去不知道在什么地方的某个CF节点,之后再去访问真实服务器。<br>访问第三方接入的域名时,是先去第三方接入的域名获取访问最快的CF节点,再去访问这个CF节点。这样可以避免国内用户访问到美国西海岸节点之类的惨剧发生。</p><h3 id="二、详细教程"><a href="#二、详细教程" class="headerlink" title="二、详细教程"></a>二、详细教程</h3><h4 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h4><p><video src="https://dl.linik.ml/E5/%E6%96%87%E6%A1%A3/Documents/%E5%A4%96%E9%93%BE/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2CFP%E8%87%AA%E9%80%89%E8%8A%82%E7%82%B9%E7%9E%8E%E6%89%AF%E7%89%88.mp4" controls="controls" width="500" height="300">您的浏览器不支持播放该视频！</video></p><p><a href="https://dl.linik.ml/E5/%E6%96%87%E6%A1%A3/Documents/%E5%A4%96%E9%93%BE/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2CFP%E8%87%AA%E9%80%89%E8%8A%82%E7%82%B9%E7%9E%8E%E6%89%AF%E7%89%88.mp4?preview">在线播放/下载地址</a></p><h4 id="1-注册CloudFlare和奔牛"><a href="#1-注册CloudFlare和奔牛" class="headerlink" title="1.注册CloudFlare和奔牛"></a>1.注册CloudFlare和<a href="http://cdn.bnxb.com/">奔牛</a></h4><p>这个应该不用详细解释了吧，大家都会。<br>注意奔牛注册时需要填写你的CloudFlare账户和密码</p><h4 id="2-添加网站"><a href="#2-添加网站" class="headerlink" title="2.添加网站"></a>2.添加网站</h4><p>本站使用宝塔面板搭建了一个网站。<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201133414.png-2"><br>这里代指你自己的服务器</p><h4 id="3-使用奔牛接入域名。"><a href="#3-使用奔牛接入域名。" class="headerlink" title="3.使用奔牛接入域名。"></a>3.使用奔牛接入域名。</h4><p>如果已经接入了CF,请备份解析记录之后在CF删除域名,把DNS地址换到任何一家国内可靠的DNS解析商。<br>之后再去奔牛网使用CNAME方式接入你的域名。</p><p><a href="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201131338-1.png-2"></a><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201133221.png-2">这里会员地址填写你网站ip<img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201143927-1024x649.png-2">这是添加完成后的解析页面</p><h4 id="4-在DNS解析服务商添加A记录或者cname记录，接入cf。"><a href="#4-在DNS解析服务商添加A记录或者cname记录，接入cf。" class="headerlink" title="4.在DNS解析服务商添加A记录或者cname记录，接入cf。"></a>4.在DNS解析服务商添加A记录或者cname记录，接入cf。</h4><p>在这里选择使用CNAME接入，记录值为cdn.linil.ml<br><img src="https://s1.ax1x.com/2020/07/13/UJUMp4.png"></p><p>设置之后每次想要添加解析时,请先去DNS解析服务商处添加CNAME解析,值为cdn.linil.ml,再去奔牛网添加同样子域名的解析,解析到你的目标地址。<br>可以使用<a href="https://www.ce8.com/">测速网站</a>检测一下解析出的IP地址,大于2且域名可以正常访问则说明接入成功。<br>cf免费版确实只提供两个节点，若是想更多只能自己添加了。</p><h4 id="5-使用https"><a href="#5-使用https" class="headerlink" title="5.使用https"></a>5.使用https</h4><p>默认免费cf提供免费的ssl证书，源站一般要求也是加密的，也使用https回源，具体是否支持http回源，我没仔细验证。这样的情况下，有两种方法，</p><p>1.源站配置可信ssl证书，比如宝塔面板自带的免费证书，包括亚洲诚信和lets’encrypt证书。这里涉及到宝塔面板的设置吗，不在赘述，自行申请使用即可。如不清楚可以在下方评论。<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201145735.png-2"></p><p>2.使用cf自签发证书，可以使用15年</p><p>需要进入cf官方后台了，后台访问最近有点慢，不知道什么原因。进入后台找到你的域名，创建证书。记住最好保存，因为，貌似key只显示一次。<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201150417-1024x602.png-2"><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201150507.png-2"></p><p>添加到网站<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201150902.png-2"></p><p>然后返回奔牛验证ssl状态，需要耐心等一会，可能比较慢。<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201152033.png-2"></p><p>点击ssl验证查看验证状态<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201152109-1024x171.png-2"></p><p>然后返回设置为全程加密<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201152513.png-2"></p><p>这时候在访问网站，看看<br><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201152442.png-2"></p><p>到此https开启成功，到现在cf就可以正常使用了。</p><p>3.源站不配置证书使用CF免费证书</p><p><img src="https://img.shanyemangfu.com/wp-content/uploads/2020/02/TIM20200201152033.png-2"></p><p>点击SSL验证</p><p><img src="https://s1.ax1x.com/2020/07/16/UBBYZV.png"></p><p>把验证方式改成txt就好然后添加对应txt解析 我这里已经添加好了就不再演示了</p><p><strong>文末福利</strong></p><p><a href="http://cf.github.ci/">http://cf.github.ci/</a> freenom免费域名套CF的救星的简单教程</p><p>1.登录<a href="http://cf.github.ci/">http://cf.github.ci/</a></p><p>2.添加域名</p><p><img src="https://s1.ax1x.com/2020/07/13/UJUX34.png"></p><p>3.添加解析</p><p><img src="https://s1.ax1x.com/2020/07/13/UJar24.png"></p><p>4.修改解析</p><p>简单暴力删除域名重写添加即可</p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="Cloudflare" scheme="http://ecalose.github.io/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>P3372 【模板】线段树 2</title>
    <link href="http://ecalose.github.io/posts/SegmentTree2.html"/>
    <id>http://ecalose.github.io/posts/SegmentTree2.html</id>
    <published>2020-07-11T13:21:33.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>[^1]</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如题，已知一个数列，你需要进行下面三种操作：</p><ul><li>将某区间每一个数乘上 $x$</li><li>将某区间每一个数加上 $x$</li><li>求出某区间每一个数的和</li></ul><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含三个整数 n,m,p，分别表示该数列数字的个数、操作的总个数和模数。</p><p>第二行包含 n 个用空格分隔的整数，其中第 i 个数字表示数列第 i 项的初始值。</p><p>接下来 m 行每行包含若干个整数，表示一个操作，具体如下：</p><p>操作 $1$： 格式：<code>1 x y k</code> 含义：将区间 $[x,y]$ 内每个数乘上 $k$</p><p>操作 $2$： 格式：<code>2 x y k</code> 含义：将区间 $[x,y]$ 内每个数加上 $k$</p><p>操作 $3$： 格式：<code>3 x y</code> 含义：输出区间 $[x,y]$ 内每个数的和对 $p$ 取模所得的结果</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出包含若干行整数，即为所有操作 $3$ 的结果。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p><strong>输入 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 5 38</span><br><span class="line">1 5 4 2 3</span><br><span class="line">2 1 4 1</span><br><span class="line">3 2 5</span><br><span class="line">1 2 4 2</span><br><span class="line">2 3 5 5</span><br><span class="line">3 1 4</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">17</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h2><p>【数据范围】</p><p>对于 $30%$ 的数据：$n \le 8$，$m \le 10$<br>对于 $70%$ 的数据：$n \le 10^3$，$m \le 10^4$<br>对于 $100%$ 的数据：$n \le 10^5$，$m \le 10^5$</p><p>除样例外，$p = 571373$</p><p>（数据已经过加强^_^）</p><p>样例说明：</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/SegmentTree2/01.jpg?fmt=webp" alt="img"></p><p>故输出应为 $17$、$22（ 40 \bmod 38 = 2 ）$</p><h2 id="所以"><a href="#所以" class="headerlink" title="所以"></a>所以</h2><p>真的有那么亿点点难理解，也还不怎么会，学的时候主要是看 <a href="https://oi-wiki.org/ds/seg/#luogu-p3373-2">线段树 - OI Wiki</a> 的代码 和 <a href="https://www.luogu.com.cn/blog/lhr/solution-p3373">题解 P3373 【【模板】线段树 2】 - lqhsr 的博客</a> 的思路</p><p>一个讲的挺明白的，一个代码看着挺明白的 :trophy:</p><h3 id="结构体函数"><a href="#结构体函数" class="headerlink" title="结构体函数"></a>结构体函数</h3><p>之前学结构体的时候知道里面可以定义函数，也只是知道，从来没用过。<br>这题因为经常要 <code>mod</code>，配合结构体函数还是挺方便的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Test</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> test1, test2, test3;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        test1 %= p;</span><br><span class="line">        test2 %= p;</span><br><span class="line">        test3 %= p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;test[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">test[k].mod();</span><br></pre></td></tr></table></figure><h3 id="懒标记下传"><a href="#懒标记下传" class="headerlink" title="懒标记下传"></a>懒标记下传</h3><p>和线段树 1 比，多了一个乘法，所以多了乘法懒标记，<strong>初值为 1</strong>。<br>乘法懒标记下传时需要对 <code>加法懒标记</code>、<code>乘法懒标记</code>和<code>值</code> 进行乘法。<br>区间乘法也同样的需要对这三个值进行乘法。<br>其他的基本和线段树 1 一样。</p><p>懒标记下传的代码确实挺长的，但理清思路发现还是比较好理解的。</p><ol><li>乘法懒标记不为 1，则需要下传。<br>分左右儿子，每边先把所有的乘法做好，再 <code>.mod()</code></li></ol><p><strong>最后父亲乘法懒标记赋值为 1</strong></p><ol start="2"><li>加法懒标记不为 0，则需要下传。也分左右儿子<br>儿子懒标记加上父亲懒标记<br>儿子值加上 （父亲懒标记 * 儿子所办含的节点数）<br>再 <code>.mod()</code></li></ol><p><strong>最后父亲懒标记归零</strong></p><h3 id="区间修改"><a href="#区间修改" class="headerlink" title="区间修改"></a>区间修改</h3><p>整体思路和线段树 1 的一样，乘法的区间修改唯一的区别就在最后一步</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">    tree[k].m *= c;</span><br><span class="line">    tree[k].f *= c;</span><br><span class="line">    tree[k].w *= c;</span><br><span class="line">    tree[k].mod();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n, m, d, x, y, at, c, p;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l, r, w, f, m;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        w %= p;</span><br><span class="line">        f %= p;</span><br><span class="line">        m %= p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;tree[<span class="number">400010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>; <span class="keyword">long</span> <span class="keyword">long</span> x = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>; x += ch - <span class="string">&#x27;0&#x27;</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> flag ? - x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r, <span class="keyword">long</span> <span class="keyword">long</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    tree[k].l = l, tree[k].r = r, tree[k].m = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        tree[k].w = read();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    build(l, mid, <span class="number">2</span>*k);</span><br><span class="line">    build(mid+<span class="number">1</span>, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">    tree[k].mod();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> lson = <span class="number">2</span> * k, rson = <span class="number">2</span> * k + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> m = tree[k].m, f = tree[k].f;</span><br><span class="line">    <span class="keyword">if</span> (tree[k].m != <span class="number">1</span>) &#123;</span><br><span class="line">        tree[lson].w *= m;</span><br><span class="line">        tree[lson].f *= m;</span><br><span class="line">        tree[lson].m *= m;</span><br><span class="line">        tree[lson].mod();</span><br><span class="line"></span><br><span class="line">        tree[rson].w *= m;</span><br><span class="line">        tree[rson].f *= m;</span><br><span class="line">        tree[rson].m *= m;</span><br><span class="line">        tree[rson].mod();</span><br><span class="line"></span><br><span class="line">        tree[k].m = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (f) &#123;</span><br><span class="line">        tree[lson].f += f;</span><br><span class="line">        tree[lson].w += f * (tree[lson].r - tree[lson].l + <span class="number">1</span>);</span><br><span class="line">        tree[lson].mod();</span><br><span class="line"></span><br><span class="line">        tree[rson].f += f;</span><br><span class="line">        tree[rson].w += f * (tree[rson].r - tree[rson].l + <span class="number">1</span>);</span><br><span class="line">        tree[rson].mod();</span><br><span class="line"></span><br><span class="line">        tree[k].f = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cheng</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r, <span class="keyword">long</span> <span class="keyword">long</span> k, <span class="keyword">long</span> <span class="keyword">long</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s = tree[k].l, t = tree[k].r;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> mid = (s + t) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">        tree[k].m *= c;</span><br><span class="line">        tree[k].f *= c;</span><br><span class="line">        tree[k].w *= c;</span><br><span class="line">        tree[k].mod();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    down(k);</span><br><span class="line">    <span class="keyword">if</span> (l &lt;= mid) cheng(l, r, <span class="number">2</span>*k, c);</span><br><span class="line">    <span class="keyword">if</span> (r &gt;= mid + <span class="number">1</span>) cheng(l, r, <span class="number">2</span>*k+<span class="number">1</span>, c);</span><br><span class="line"></span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">    tree[k].w %= p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r, <span class="keyword">long</span> <span class="keyword">long</span> k, <span class="keyword">long</span> <span class="keyword">long</span> at)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s = tree[k].l, t = tree[k].r;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> mid = (s + t) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">        tree[k].f += at;</span><br><span class="line">        tree[k].w += at * (t - s + <span class="number">1</span>);</span><br><span class="line">        tree[k].mod();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    down(k);</span><br><span class="line">    <span class="keyword">if</span> (l &lt;= mid) add(l, r, <span class="number">2</span>*k, at);</span><br><span class="line">    <span class="keyword">if</span> (r &gt;= mid + <span class="number">1</span>) add(l, r, <span class="number">2</span>*k+<span class="number">1</span>, at);</span><br><span class="line"></span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">    tree[k].mod();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">get</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r, <span class="keyword">long</span> <span class="keyword">long</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s = tree[k].l, t = tree[k].r, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> mid = (s + t) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[k].w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    down(k);</span><br><span class="line">    <span class="keyword">if</span> (l &lt;= mid) sum += get(l, r, <span class="number">2</span>*k);</span><br><span class="line">    sum %= p;</span><br><span class="line">    <span class="keyword">if</span> (r &gt;= mid + <span class="number">1</span>) sum += get(l, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> sum % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), m = read(), p = read();</span><br><span class="line">    build(<span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        d = read(), x = read(), y = read();</span><br><span class="line">        <span class="keyword">if</span> (d == <span class="number">1</span>) &#123;</span><br><span class="line">            c = read();</span><br><span class="line">            cheng(x, y, <span class="number">1</span>, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (d == <span class="number">2</span>) &#123;</span><br><span class="line">            at = read();</span><br><span class="line">            add(x, y, <span class="number">1</span>, at);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, get(x, y, <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__warning"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></div>🚨 注意</div><div class="blockquote-note__content"><p>mod 别忘了</p><p>add 要 return<br>cheng 要 return<br>build 要 return</p><p>get 要 down(k)<br>add 要 down(k)<br>cheng 要 down(k)</p><p>要不然就会这样，一个月了才过（虽然前面有 AC 一次）</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/SegmentTree2/02.png?fmt=webp" alt="warnning"></p></div></blockquote><p>[^0]: Banner from <a href="https://icons8.com/">Icons8</a><br>[^1]: 题目来源 <a href="https://www.luogu.com.cn/problem/P3373">【模板】线段树 2 - 洛谷</a></p>]]></content>
    
    
    <summary type="html">洛谷 P3372，历时一个月，终于 AC 了</summary>
    
    
    
    
    <category term="算法" scheme="http://ecalose.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>利用 GitHub Action 实现自动化</title>
    <link href="http://ecalose.github.io/posts/use-github-action.html"/>
    <id>http://ecalose.github.io/posts/use-github-action.html</id>
    <published>2020-07-05T02:22:30.000Z</published>
    <updated>2020-08-25T08:50:13.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，为什么选择静态网站？没后台，没数据库，但是方便折腾，可以完全自定义，这是我选择静态博客最大的原因之一。 <del>（其实没钱买服务器才是最大原因）</del></p><p>部署静态网站的方法很多，GitHub Page, Coding Page, Gitee Page, Vercel 都是免费的，各有各的优势，先说说这几个免费的。</p><h3 id="GitHub-Page"><a href="#GitHub-Page" class="headerlink" title="GitHub Page"></a>GitHub Page</h3><p>Github Page 巨硬家的东西，除非不可抗力，要不然出问题的概率很小。但国内部分地区无法访问，部分地区访问速度慢。能利用 Github Action 实现自动化部署。速度问题或许可以通过 CloudFlare 的 CDN 来解决，但速度还是不怎么样。当然，如果你域名备案了，用国内的 CDN 也是没问题的。</p><h3 id="Coding-Page"><a href="#Coding-Page" class="headerlink" title="Coding Page"></a>Coding Page</h3><p>Coding Page 表明是 Coding 的，但 Coding 现在算是腾讯的了，出问题的概率也很小。但用的节点全是境外的，一般是香港和新加坡…..，而且日常宕机，动不动就崩了。同样能利用 集成CI 进行自动部署。</p><h3 id="Gitee-Page"><a href="#Gitee-Page" class="headerlink" title="Gitee Page"></a>Gitee Page</h3><p>Gitee Page 码云家的，国内节点，速度没得说，快就完事了。自定义域名和自动更新（也就是说每次更新博客，推送到码云之后还要手动点击部署）需要购买 Pro 版，99 元/年。但因为是国内节点的原因，绑定的域名需要备案。码云还有个比较好的功能，能自动判断博客类型，支持 Jekyll、Hugo、Hexo，能自动进行编译，并部署生成的文件，也就是说你可以直接将整个博客文件夹推上去，每次更新只需要使用 git 推送下就行了，它会帮你生成。</p><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p>Vercel 可以直接从 GitHub 导入博客仓库，且能识别静态博客类型，和码云一样自动生成。顺便看了下 Vercel 分配的节点，美国的，但是国内访问速度还是不错的，Ping 了一下，平均 62.0ms，速度也还不错（至少我这是这样）。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><p>不要求自定义域名，无脑上码云</p></li><li><p>要自定义域名上 GitHub Page or Vercel</p></li><li><p>Coding 不推荐</p></li></ul><p>那么本博客目前并没有采用上述方式进行部署，但全部体验过。因为域名进行了备案，就直接采用了腾讯的<strong>静态网站托管</strong>。</p><p>有一说一，国内各家的 CDN 计费规则是真的复杂，第一次看完基本都一头雾水，这时候腾讯的云开发出现了。云开发中包含了静态网站托管，专为静态网站而生。计费规则很简单，<code>流量费用</code> + <code>空间费用</code>，而且自动部署到 CDN 上，速度超快。</p><p>至于怎么使用云开发部署静态博客，官方已经给出了详细教程 <a href="https://cloud.tencent.com/document/product/1210/43365">静态网站托管 搭建 Hexo - 最佳实践 - 文档中心 - 腾讯云</a>。</p><p>当然，这是收费的，不过挺便宜的，正常小站一个月不超过一元，而且还可以申请腾讯的 <a href="https://cloud.tencent.com/act/pro/wh99">云开发网站托管「9.9包年」赞助计划</a>。</p><h2 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h2><p>接下来进入重点，利用 GitHub Action 实现自动化部署，如果你还不知道 GitHub Action 是什么，可以看看 <a href="https://github.com/features/actions">官方介绍</a>，简单来说，以你的仓库为根目录，给你一台电脑，帮你完成一些事情。如果想进一步了解，可以看看 <a href="https://zkqiang.cn/posts/e8ed6836/">编写自己的 GitHub Action，体验自动化部署</a></p><h3 id="连接-GitHub"><a href="#连接-GitHub" class="headerlink" title="连接 GitHub"></a>连接 GitHub</h3><p>保证你的整个博客文件夹已 <code>push</code> 到了GitHub 上。如果没有，新建一个仓库 <code>Public</code> or <code>Private</code>  均可，然后将本地本地与仓库连接。</p><p><code>username</code> 替换成用户名，<code>repo</code> 替换成仓库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin https://github.com/username/repo.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__warning"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></div>🚨 注意</div><div class="blockquote-note__content"><p>如果仓库为 <code>Public</code> 请不要将隐私内容直接写在文件中，暂时用一些单词替换，后续编写自动部署文件时有方法解决</p></div></blockquote><h3 id="编写-GitHub-Action"><a href="#编写-GitHub-Action" class="headerlink" title="编写 GitHub Action"></a>编写 GitHub Action</h3><p>从这里开始，默认你已经看完之前提到的『编写自己的 GitHub Action，体验自动化部署』，或者对 GitHub Action 有初步的了解，知道大致操作。</p><p>以我的<a href="https://jalenchuh.cn/">个人主页</a>为例，是由 Vue.js 构建的，部署在腾讯云静态网站托管。GitHub 仓库地址：<a href="https://github.com/jalenchuh/homepage">homepage</a></p><p>共分为 <code>Setup</code> <code>Build</code> <code>Lint</code> <code>Deploy</code> 四个步骤</p><ul><li><p>Setup: 安装 node 环境</p></li><li><p>Build: 构建</p></li><li><p>Lint: Lint 代码</p></li><li><p>Deploy: 推送到腾讯静态网站托管</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;10.x&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Lint</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">lint</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">deployStatic</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">TencentCloudBase/cloudbase-action@v1.1.1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">secretId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">secretKey:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">envId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ENV_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">staticSrcPath:</span> <span class="string">dist</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div>对于隐私数据须在 secrets 中设置</div><div class="blockquote-note__content"><p>文件中出现的 <code>secrets.xxx</code> 须在仓库的 <code>settings &gt; secrets</code> 中设置</p><p>新建 <code>secrests</code> 时，<code>name</code> 为 <code>xxx</code> ，<code>Value</code> 为内容</p></div></blockquote><h3 id="部署到-GitHub-Page"><a href="#部署到-GitHub-Page" class="headerlink" title="部署到 GitHub Page"></a>部署到 GitHub Page</h3><p>[^1]</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span>                      <span class="comment"># Actions 显示的名字，随意设置</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]                        <span class="comment"># 监听到 push 事件后触发</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span>              <span class="comment"># 拉取当前执行 Actions 仓库的指定分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Update</span> <span class="string">Submodule</span>      <span class="comment"># 如果仓库有 submodule，在这里更新，没有则删掉此步骤</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">git</span> <span class="string">submodule</span> <span class="string">init</span></span><br><span class="line">        <span class="string">git</span> <span class="string">submodule</span> <span class="string">update</span> <span class="string">--remote</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span>            <span class="comment"># 安装 Node 环境</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;10.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Generate</span>         <span class="comment"># 安装 Hexo 依赖并且生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">rm</span> <span class="string">-f</span> <span class="string">.yarnclean</span></span><br><span class="line">        <span class="string">yarn</span> <span class="string">--frozen-lockfile</span> <span class="string">--ignore-engines</span> <span class="string">--ignore-optional</span> <span class="string">--non-interactive</span> <span class="string">--silent</span> <span class="string">--ignore-scripts</span> <span class="string">--production=false</span></span><br><span class="line">        <span class="string">rm</span> <span class="string">-rf</span> <span class="string">./public</span></span><br><span class="line">        <span class="string">yarn</span> <span class="string">run</span> <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="string">yarn</span> <span class="string">run</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span>           <span class="comment"># 部署步骤，这里以 hexo deploy 为例</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">SSH_PRIVATE:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SSH_PRIVATE</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">GIT_NAME:</span> <span class="string">yourname</span></span><br><span class="line">        <span class="attr">GIT_EMAIL:</span> <span class="string">your@email.com</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;$SSH_PRIVATE&quot;</span> <span class="string">|</span> <span class="string">tr</span> <span class="string">-d</span> <span class="string">&#x27;\r&#x27;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;$GIT_NAME&quot;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;$GIT_EMAIL&quot;</span></span><br><span class="line">        <span class="string">yarn</span> <span class="string">run</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h3 id="部署到腾讯静态托管"><a href="#部署到腾讯静态托管" class="headerlink" title="部署到腾讯静态托管"></a>部署到腾讯静态托管</h3><p>建议使用<a href="https://github.com/TencentCloudBase/cloudbase-action">官方 Action</a></p><p>示例代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;10.x&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">deployStatic</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">TencentCloudBase/cloudbase-action@v1.1.1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">secretId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">secretKey:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SECRET_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">envId:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ENV_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">staticSrcPath:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure><p>部署 Hexo 的过程中，<code>Deploy</code> 之前的都是差不多，所有之后只需要修改 <code>Deploy</code> 之后的内容就行。</p><h3 id="部署到-腾讯COS"><a href="#部署到-腾讯COS" class="headerlink" title="部署到 腾讯COS"></a>部署到 腾讯COS</h3><p>建议使用<a href="https://github.com/zkqiang/tencent-cos-action">zkqiang/tencent-cos-action</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>大部分都是有官方 Action 的，即使没有也会有其他人编写的，或参考官方文档。</p><h2 id="隐私问题"><a href="#隐私问题" class="headerlink" title="隐私问题"></a>隐私问题</h2><p>可以直接使用 Private 仓库解决。</p><p>对于 Publlic 仓库，可以使用 <code>sed</code> 命令。</p><p>比如我在博客配置 <code>_config.yml</code> 文件中有百度推送的代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">200</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">blog.JalenChuh.cn</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">baiduToken</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span></span><br></pre></td></tr></table></figure><p>其中 <code>token</code> 属于隐私内容，不能公开，那么我们可以使用 <code>baiduToken</code> 将 <code>token</code> 代替</p><p>而之后在编写的 Action 的时候将 <code>token</code> 存入 <code>secrets</code> ，利用 <code>sed</code> 命令对 <code>baiduToken</code> 进行替换即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/baiduToken/<span class="variable">$&#123;baiduToken&#125;</span>/&quot;</span> _config.yml</span><br></pre></td></tr></table></figure><p><code>sed -i</code> 用法为 <code>sed -i &#39;s/原字符串/新字符串/&#39; 文件路径</code></p><p>结合 <code>secrets</code> 使用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">env</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">baiduToken:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.baiduToken</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">run:</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">&quot;s/baiduToken/$&#123;baiduToken&#125;/&quot;</span> <span class="string">_config.yml</span></span><br></pre></td></tr></table></figure><h2 id="自动提交百度收录"><a href="#自动提交百度收录" class="headerlink" title="自动提交百度收录"></a>自动提交百度收录</h2><p>解决了这个问题我们就可以进行一些更好玩的了，比如百度自动推送</p><p>首先确保安装了 <code>hexo-baidu-url-submit</code>，并且 <code>package.json</code> 的 <code>dependencies</code> 中含有该插件。</p><blockquote class="blockquote-note blockquote-note__tip"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></div>注意</div><div class="blockquote-note__content"><p><code>package.json</code> 中如果没有，必须使用 <code>npm i hexo-baidu-url-submit --save</code> 安装</p></div></blockquote><p>然后还是该文件，修改 <code>scripts</code> 部分</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  .......</span><br><span class="line">  &quot;xx&quot;: &quot;xxxx&quot;,</span><br><span class="line"><span class="addition">+  &quot;baidupush&quot;: &quot;hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy &amp;&amp; hexo deploy --config _baiduPush.yml&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__warning"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></div>必须遵循 json 规范</div><div class="blockquote-note__content"><p>最后一行，也就是 <code>baidupush</code> 这行结尾没有逗号，而倒数第二行必须有逗号</p></div></blockquote><p>如你所见，该命令执行了非常多次 <code>hexo deploy</code>，每次 <code>hexo deploy</code> 只会推送一次，而百度给了几千条的限额，那为什么不把全部额度用完呢？</p><p>但是还有一个问题，如果你使用的是 GitHub Page 之类的，每次推送的同时都会把博客也推送一遍，没这必要，那么我们可以新建一个配置文件 <code>_baidupush.yml</code> ，将 <code>_config.yml</code> 中我内容复制进去，再修改末尾 <code>deploy</code> 部分，仅保留百度推送。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - type: baidu_url_submitter</span><br><span class="line"><span class="deletion">-  - type: git</span></span><br><span class="line"><span class="deletion">-    repo: git@github.com:jalenchuh/test.git</span></span><br><span class="line"><span class="deletion">-    branch: master</span></span><br></pre></td></tr></table></figure><p>那么之前命令中的所有 <code>hexo deploy</code> 就需要相应的替换成 <code>hexo deploy --config _baidupush.yml</code></p><p>然后在 <code>secrets</code>  中存入 <code>baiduToken</code></p><p>并编写 Action，每天北京时间 0 点自动执行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">baiduPush</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 16 * * *&#x27;</span> <span class="comment"># Github Action 使用的是 UTC 时间</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;10.x&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">BAIDU</span> <span class="string">env</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">baiduToken:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.baiduToken</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">run:</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">&quot;s/baiduToken/$&#123;baiduToken&#125;/&quot;</span> <span class="string">_baidupush.yml</span> <span class="comment"># 替换 baiduToken</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">generate</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">push</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">baidupush</span> <span class="comment"># 执行前面写好的命令</span></span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>著名的 CI 工具还有 Travis CI，相比之下我觉得 GitHub Action 更加容易上手，而且和 GitHub 直接集成算是它的一大优势吧。</p><p>不过还是有一些缺点的，比如没办法本地调试，第一次使用 Action 列表中总是一片 :x:。还有就是出错之后 <code>re run</code> 只能全部重来，没办法指定从某一个 steps 开始</p><p>当然了，已经做的非常不错了。同时，期待下即将推出的 Codespaces。</p><p>[^1]: GitHub Page 部署代码来自 <a href="https://hexo.fluid-dev.com/posts/actions-deploy/">https://hexo.fluid-dev.com/posts/actions-deploy/</a></p>]]></content>
    
    
    <summary type="html">博客部署？我用 GitHub Action 自动部署&lt;br&gt;百度收录推送？我也用 GitHub Action 自动推送</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="GitHub Action" scheme="http://ecalose.github.io/tags/GitHub-Action/"/>
    
    <category term="自动化" scheme="http://ecalose.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>P3372 【模板】线段树 1</title>
    <link href="http://ecalose.github.io/posts/2024.html"/>
    <id>http://ecalose.github.io/posts/2024.html</id>
    <published>2020-06-04T16:01:54.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[^1]</p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>如题，已知一个数列，你需要进行下面两种操作：</p><ol><li>将某区间每一个数加上 $k$。</li><li>求出某区间每一个数的和。</li></ol><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数 $n, m$，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $n$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $m$ 行每行包含 $3$ 或 $4$ 个整数，表示一个操作，具体如下：</p><ol><li><code>1 x y k</code>：将区间 $[x, y]$ 内每个数加上 $k$。</li><li><code>2 x y</code>：输出区间 $[x,y]$ 内每个数的和。</li></ol><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出包含若干行整数，即为所有操作 2 的结果。</p><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p><strong>输入 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 5 4 2 3</span><br><span class="line">2 2 4</span><br><span class="line">1 2 3 2</span><br><span class="line">2 3 4</span><br><span class="line">1 1 5 1</span><br><span class="line">2 1 4</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">8</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h3><p>对于 $30%$ 的数据：$n \le 8$，$m \le 10$。<br>对于 $70%$ 的数据：$n \le {10}^3$，$m \le {10}^4$。<br>对于 $100%$ 的数据：$1 \le n, m \le {10}^5$。</p><p>保证任意时刻数列中任意元素的和在 $[-2^{63}, 2^{63})$ 内。</p><p><strong>【样例解释】</strong></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/2024/01.png?fmt=webp" alt="样例解释"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__content"><p>想认真学推荐看看这篇两篇</p><p><a href="https://www.cnblogs.com/TheRoadToTheGold/p/6254255.html">浅谈线段树 - TRTTG - 博客园</a><br><a href="https://oi-wiki.org/ds/seg/">线段树 - OI Wiki</a></p></div></blockquote><h3 id="建树"><a href="#建树" class="headerlink" title="建树"></a>建树</h3><p>一直二分，直到 到了叶子节点，输入数据，==记住 return==</p><p>非叶子节点的值为 左儿子+右儿子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 建树，k 当前节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(LL l, LL r, LL k)</span> </span>&#123;</span><br><span class="line">    LL mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    tree[k].l = l, tree[k].r = r;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123; <span class="comment">// 判断叶子节点</span></span><br><span class="line">        tree[k].w = read();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    build(l, mid, <span class="number">2</span>*k);</span><br><span class="line">    build(mid+<span class="number">1</span>, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒标记"><a href="#懒标记" class="headerlink" title="懒标记"></a>懒标记</h3><blockquote><p>A 有两个儿子，一个是 B，一个是 C。</p><p>有一天 A 要建一个新房子，没钱。刚好过年嘛，有人要给 B 和 C 红包，两个红包的钱数相同都是 $1$ 元，然而因为 A 是父亲所以红包肯定是先塞给 A 咯~</p><p>理论上来讲 A 应该把两个红包分别给 B 和 C，但是……缺钱嘛，A 就把红包偷偷收到自己口袋里了。</p><p>A 高兴地说：「我现在有 $2$ 份红包了！我又多了 $2 \times 1 = 2$ 元了！哈哈哈~」</p><p>但是 A 知道，如果他不把红包给 B 和 C，那 B 和 C 肯定会不爽然后导致家庭矛盾最后崩溃，所以 A 对儿子 B 和 C 说：「我欠你们每人 $1$ 份 $1$ 元的红包，下次有新红包给过来的时候再给你们！这里我先做下记录……嗯……我欠你们各 $1$ 元……」</p><p>儿子 B、C 有点恼怒：「可是如果有同学问起我们我们收到了多少红包咋办？你把我们的红包都收了，我们还怎么装？」</p><p>父亲 A 赶忙说：「有同学问起来我就会给你们的！我欠条都写好了不会不算话的！」</p><p>这样 B、C 才放了心。[^2]</p></blockquote><p>举个例子：</p><p>要求 $4 \backsim 5$ 的数都加上 $2$</p><p>那么我们现在只需要将其父亲节点 $2$ 的懒标记 $+2$</p><p>需要用到的时候将懒标记下传给子节点</p><p>下传操作：</p><ol><li><p>两个子节点的懒标记分别加上父亲节点的懒标记的值</p></li><li><p>子节点的值分别加上 $(r-l+1) \times 父亲节点的懒标记值$。$(r-l+1)$ 表示该节点之下还有多少节点，这里必须乘父亲节的懒标记的值，而不是自己的懒标记，因为自身的懒标记可能还包含上一次下传的值</p></li><li><p>父亲节点懒标记归零</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 懒标记下传，k 当前节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(LL k)</span> </span>&#123;</span><br><span class="line">    tree[k * <span class="number">2</span>].f += tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span> + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line"></span><br><span class="line">    tree[k * <span class="number">2</span>].w += tree[k].f * (tree[k*<span class="number">2</span>].r - tree[k*<span class="number">2</span>].l + <span class="number">1</span>);</span><br><span class="line">    tree[k*<span class="number">2</span> + <span class="number">1</span>].w += tree[k].f * (tree[k*<span class="number">2</span>+<span class="number">1</span>].r - tree[k*<span class="number">2</span>+<span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间修改"><a href="#区间修改" class="headerlink" title="区间修改"></a>区间修改</h3><p>$n = [l, r]$ 需要修改的区间，$m = [s, t]$ 当前区间</p><p>$n, m$ 只满足以下三种关系的一种</p><ol><li>$m \subseteq n$</li><li>$m \cap n$ 不为空</li><li>$n \subseteq m$</li></ol><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>第一种情况 $m \subseteq n$，直接返回当前区间 $m$ 的值就行了</p><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>第二种情况 $m \cap n$ 不为空</p><p>令 $mid= \frac{s+t}{2}$</p><ol><li>$l \le mid$ 则说明待修改区间（一部分）在当前节点的左孩子</li><li>$r &gt; mid$ 则说明待修改区间（一部分）在当前节点的右孩子</li></ol><p>重复多次后就得到了情况 1<br>（画个图模拟下就明白了）</p><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>第三种情况 $n \subseteq m$</p><p>解决方法和情况 2 相同</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 区间修改 [l, r] 修改区间，[s, t]当前区间，k 当前节点，addition 修改的值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(LL l, LL r, LL k, LL addition)</span> </span>&#123;</span><br><span class="line">    LL s = tree[k].l, t = tree[k].r;</span><br><span class="line">    LL mid = (s + t) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">        tree[k].f += addition;</span><br><span class="line">        tree[k].w += addition * (t - s + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">if</span>(l &lt;= mid) update(l, r, k*<span class="number">2</span>, addition);</span><br><span class="line">    <span class="keyword">if</span>(r &gt; mid) update(l, r, <span class="number">2</span>*k+<span class="number">1</span>, addition);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间查询"><a href="#区间查询" class="headerlink" title="区间查询"></a>区间查询</h3><p>与区间修改基本一样</p><p>$n = [l, r]$ 需要查询的区间，$m = [s, t]$ 当前区间</p><p>$n, m$ 只满足以下三种关系的一种</p><ol><li>$m \subseteq n$</li><li>$m \cap n$ 不为空</li><li>$n \subseteq m$</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 区间查询，[l, r] 查询区间，[s, t]当前区间，k 当前节点</span></span><br><span class="line"><span class="function">LL <span class="title">getsum</span><span class="params">(LL l, LL r, LL k)</span> </span>&#123;</span><br><span class="line">    LL s = tree[k].l, t = tree[k].r;</span><br><span class="line">    LL mid = (s + t) / <span class="number">2</span>, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s &amp;&amp; t&lt;=r) <span class="keyword">return</span> tree[k].w;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">if</span>(l &lt;= mid) sum += getsum(l, r, k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(r &gt; mid) sum += getsum(l, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line">LL n, m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    LL l, r, w, f; <span class="comment">// w 值，f 懒标记</span></span><br><span class="line">&#125;tree[<span class="number">400001</span>]; <span class="comment">// 大小 4 * n</span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>; LL x = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>; x += ch - <span class="string">&#x27;0&#x27;</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> flag ? - x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建树，k 当前节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(LL l, LL r, LL k)</span> </span>&#123;</span><br><span class="line">    LL mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    tree[k].l = l, tree[k].r = r;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123; <span class="comment">// 判断叶子节点</span></span><br><span class="line">        tree[k].w = read();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    build(l, mid, <span class="number">2</span>*k);</span><br><span class="line">    build(mid+<span class="number">1</span>, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 懒标记下传，k 当前节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(LL k)</span> </span>&#123;</span><br><span class="line">    tree[k * <span class="number">2</span>].f += tree[k].f;</span><br><span class="line">    tree[k * <span class="number">2</span>].w += tree[k].f * (tree[k*<span class="number">2</span>].r - tree[k*<span class="number">2</span>].l + <span class="number">1</span>);</span><br><span class="line">    tree[k*<span class="number">2</span> + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span> + <span class="number">1</span>].w += tree[k].f * (tree[k*<span class="number">2</span>+<span class="number">1</span>].r - tree[k*<span class="number">2</span>+<span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line">    tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单点修改，k 当前节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL k, LL addition)</span> </span>&#123;</span><br><span class="line">    LL l = tree[k].l, r = tree[k].r;</span><br><span class="line">    LL mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        tree[k].w += addition;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span> (tree[k].f) down(k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) add(<span class="number">2</span> * k);</span><br><span class="line">    <span class="keyword">else</span> add(<span class="number">2</span>*k + <span class="number">1</span>);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单点查询，k 当前节点</span></span><br><span class="line"><span class="function">LL <span class="title">ask</span><span class="params">(LL k)</span> </span>&#123;</span><br><span class="line">    LL l = tree[k].l, r = tree[k].r;</span><br><span class="line">    LL mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> tree[k].w;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) ask[<span class="number">2</span> * k];</span><br><span class="line">    <span class="keyword">else</span> ask(<span class="number">2</span>*k + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间修改 [l, r] 修改区间，[s, t]当前区间，k 当前节点，addition 修改的值</span></span><br><span class="line"><span class="keyword">void</span> update(LL l, LL r, LL k, LL addition) &#123;</span><br><span class="line">    LL s = tree[k].l, t = tree[k].r;</span><br><span class="line">    LL mid = (s + t) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s &amp;&amp; t&lt;=r) &#123;</span><br><span class="line">        tree[k].f += addition;</span><br><span class="line">        tree[k].w += addition * (t - s + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">if</span>(l &lt;= mid) update(l, r, k*<span class="number">2</span>, addition);</span><br><span class="line">    <span class="keyword">if</span>(r &gt; mid) update(l, r, <span class="number">2</span>*k+<span class="number">1</span>, addition);</span><br><span class="line">    tree[k].w = tree[<span class="number">2</span>*k].w + tree[<span class="number">2</span>*k+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间查询，[l, r] 查询区间，[s, t]当前区间，k 当前节点</span></span><br><span class="line"><span class="function">LL <span class="title">getsum</span><span class="params">(LL l, LL r, LL k)</span> </span>&#123;</span><br><span class="line">    LL s = tree[k].l, t = tree[k].r;</span><br><span class="line">    LL mid = (s + t) / <span class="number">2</span>, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足上面的 if，所以需要修改子节点，所以需要下传懒标记</span></span><br><span class="line">    <span class="keyword">if</span>(l&lt;=s &amp;&amp; t&lt;=r) <span class="keyword">return</span> tree[k].w;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">if</span>(l &lt;= mid) sum += getsum(l, r, k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(r &gt; mid) sum += getsum(l, r, <span class="number">2</span>*k+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    build(<span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        LL t = read(), x = read(), y = read();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, getsum(x, y, <span class="number">1</span>, n, <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            LL k = read();</span><br><span class="line">            update(x, y, <span class="number">1</span>, n, <span class="number">1</span>, k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>学完可以做做 <a href="https://www.luogu.com.cn/problem/P2068">P2068 统计和</a></p><p>[^1]: 题目来源 <a href="https://www.luogu.com.cn/problem/P3372">【模板】线段树 1 - 洛谷</a><br>[^2]: 来自 <a href="https://oi-wiki.org/ds/seg/#_4">线段树 - OI Wiki</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>HandShaker 好看实用的手机管理工具</title>
    <link href="http://ecalose.github.io/posts/17291.html"/>
    <id>http://ecalose.github.io/posts/17291.html</id>
    <published>2020-04-26T12:56:01.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>经常为了手机电脑间传文件烦恼，想着什么时候在 Windows 和 Android 之间能有 iCloud 的体验 <del>（我知道我在想:peach:）</del>。或许 OneDrive 能实现类似体验，但是我这同步文件的速度并不是很理想，手机端传一个文件上去，电脑端要过一段时间才能同步出来，那我还不如用 QQ 传文件</p><p>在网上:surfer:时，看到了别人推荐这款软件，就下下来试了试，没报太大希望，但是用了一段时间，真的超 nice 啊</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>HandShaker[^1] 是一款轻便易用的 Android 手机管理工具，融合了 Mac 系统和 Smartisan OS 的界面风格和操作逻辑，可直观、简洁的帮助用户管理 Android 手机中的照片、视频、音乐等文件。[^2]</p><p>HandShaker，<strong>握手</strong>？那咱<strong>交个朋友</strong>？还是熟悉的锤子风格啊</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>支持<strong>无线</strong>链接</li><li>可同步全部文件（双端完全同步）</li><li><strong>支持拖拽操作</strong></li><li>支持文件预览</li><li>闪念胶囊</li></ul><p>不夸张的说，我认为这或许是最好的<strong>非系统的</strong>安卓手机管理工具，全平台通用，不限制机型（就我目前发现的软件而言）</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/01.png?w=1280&fmt=webp" alt="HandShaker"></p><p>UI 还是锤子的一贯风格<br>看惯了 Material Design，再看看锤子的扁平感觉也挺不错的:laughing:</p><p>虽然:hammer:现在一言难尽，但是它出的软件可以说大部分都是精品，甚至你可以看到许多非数码圈的人在用锤子便签</p><h4 id="无线链接"><a href="#无线链接" class="headerlink" title="无线链接"></a>无线链接</h4><p>连接速度还不错的，也非常方便，第一次连接好像要在手机上同意<br><del>我第一次连的时候狂点连接，半点反应都没有，都想卸载了，然后发现是自己 zz 了</del></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/02.gif?w=1280" alt="无线链接"></p><p>还可通过二维码和 USB 数据线连接</p><h4 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h4><p>不仅能同步全部文件，还能将相册、音乐、视频和下载进行单独分类</p><p>相册页面还能按照手机上的不同相册来显示</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/03.png?w=1280&fmt=webp" alt="文件同步"></p><p>同时，如果开启完全同步，还可将相册保存在本地，即使与手机断开连接，也能操作</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/04.png?w=1280&fmt=webp" alt="完全同步"></p><p>但这里的相册有个小问题，<strong>相机相册</strong>中的照片并不是系统相机而是<strong>谷歌相机</strong>，这就有的迷了，不知道是不是只有 Flyme 这样</p><p>其他页面也感觉非常 nice</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/05.png?w=1280&fmt=webp" alt="音乐界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/06.png?w=1280&fmt=webp" alt="视频界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/07.png?w=1280&fmt=webp" alt="下载界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/08.png?w=1280&fmt=webp" alt="文件页面"></p><p>文件页面的图标能看得出非常用心</p><h4 id="拖拽操作"><a href="#拖拽操作" class="headerlink" title="拖拽操作"></a>拖拽操作</h4><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/09.gif?w=1280" alt="拖拽操作"></p><p>支持全类型文件双向拖拽，速度非常快，比传文件的那些软件方便多了</p><p>挑了个视频文件测试，文件过大时提示 ”当前传输文件过大，建议通过 USB 数据线传输“，还是非常细心啊，并且你也可以不接受建议 :joy:</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/10.png?w=1280&fmt=webp" alt="提示"></p><p>但是无线传输的速度还是同不错的，能达到将近 10MB/S</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/11.png?w=1280&fmt=webp" alt="无线传输"></p><p>而 USB 传输的速度能达到将近 20MB/S</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/12.png?w=1280&fmt=webp" alt="USB 传输"></p><p>基本满足了传输需求，比 OneDrive 的玄学速度好太多了</p><h4 id="文件预览"><a href="#文件预览" class="headerlink" title="文件预览"></a>文件预览</h4><p>文件预览在我这有点玄学，是我的食用方法不对？和拖拽一样传文件到本地，但是速度只有 2MB/s 左右，偶尔能跑的和之前一样的 8MB/s</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/13.png?w=1280&fmt=webp" alt="文件预览"></p><p>所以用来预览大文件不太方便，不过图片什么的还是非常方便的，图片的预览会先跳出略缩图，再加载清楚</p><p>还内置了音乐播放器，可以直接播放音乐，不过功能比较简陋</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/14.png?w=1280&fmt=webp" alt="音乐播放器"></p><h4 id="闪念胶囊"><a href="#闪念胶囊" class="headerlink" title="闪念胶囊"></a>闪念胶囊</h4><p>真的超级超级 nice 啊，非常好用，之前一直在用微软的 ToDo，手机上可以同步，UI 也做的挺不错的</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/15.png?w=1280&fmt=webp" alt="闪念胶囊"></p><p>不过最近已经开始用闪念胶囊了，至于原因，<del>我自己可能也说不出来</del>，总之，感觉用着更舒服一点吧，虽然这是锤子手机内置的功能，其他手机用不了。但是认真想想，在手机上记录的 ToDo 可能更多是一些零碎的小事情，需要马上去做，记下来只是怕忘了，用负一屏自带的备忘录就可以了，而在电脑上记录的可能则是一些任务规划。</p><p>一开始我并不觉得 ToDo 这种东西有用，但是用了一段时间发现还真有用 :joy_cat:，看到那一项一项就贼想把它打勾</p><p>虽然说不出什么原因让我换到了闪念胶囊，但是可能就是体验和 UI 吧，还是开头那句话，看惯了现有的设计，再看看锤子的扁平感觉也挺不错的 :laughing:</p><p>同样的，也支持一些拖拽，操作很方便</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/16.gif?w=1280" alt="闪念胶囊拖拽"></p><p>还能对每个胶囊添加附件，同样可以拖拽<br>但是对于附件有一些小限制，一个胶囊最多添加 14 个附件</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/17.gif?w=1280" alt="闪念胶囊附件"></p><p>当然了，ToDo 必备的日期肯定也是有的</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/18.png?w=1280&fmt=webp" alt="闪念胶囊日期"></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>知乎上一篇写的挺好的文章，某人在评论区撒野，最后真相：没用过，<strong>纯</strong>云体验，但想到前段时间发布的网民收入数据，害，只要自己用着开心就好:stuck_out_tongue_winking_eye:</p><p>那么，关于 HandShaker，还有些没提到的地方，就自己探索啦<br>虽然已经停更了，但还是感谢锤科:smiley_cat:</p><p><del>OK 各位，这就是这篇文章的全部内容了，非常感谢你能看到这里，如果你觉得这篇文章写的还不错的话，求赞求收藏求硬币求转发，最重要的是点一个大大的关注</del></p><p>[^1]: 下载地址 <a href="https://www.smartisan.com/apps/#/handshaker">Smartisan 应用下载-锤子商城</a><br>[^2]: 参考 <a href="http://www.cnmo.com/news/551241.html">体验至上 SmartFinder 更名为 HandShaker</a></p>]]></content>
    
    
    <summary type="html">不夸张的说，我认为这或许是最好的非系统的安卓手机管理工具，好看的 UI、舒适的体验，至少我目前还没有找到一个既免费又有与之相同体验的软件</summary>
    
    
    
    
    <category term="Windows" scheme="http://ecalose.github.io/tags/Windows/"/>
    
    <category term="软件" scheme="http://ecalose.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>加速网页加载？我选择对图片下手</title>
    <link href="http://ecalose.github.io/posts/12013.html"/>
    <id>http://ecalose.github.io/posts/12013.html</id>
    <published>2020-04-20T07:00:51.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>WebP 是一种现代图像格式，可为 Web 上的图像提供出色的无损和有损压缩。使用 WebP ，网站管理员和 Web 开发人员可以创建更小，更丰富的图像，从而使 Web 更快。<br>与 PNG 相比，WebP 无损图像的尺寸要小 26％。 在同等的 SSIM 质量指数下，WebP 有损图像比同类 JPEG 图像小 25-34％。<br>无损 WebP 支持透明性（也称为 Alpha 通道），而仅增加 22％ 的字节数。 对于可以接受有损 RGB 压缩的情况，有损 WebP 还支持透明性，与 PNG 相比，文件大小通常小 3 倍。</p><h2 id="WebP"><a href="#WebP" class="headerlink" title="WebP"></a>WebP</h2><p>新型图像格式，由 Google 开发[^1]</p><h3 id="WebP-是如何工作的"><a href="#WebP-是如何工作的" class="headerlink" title="WebP 是如何工作的"></a>WebP 是如何工作的</h3><blockquote><p>有损 WebP 压缩使用预测编码对图像进行编码，这与 VP8 视频编解码器用于压缩视频中的关键帧的方法相同。预测编码使用相邻像素块中的值来预测块中的值，然后仅对差异进行编码。</p><p>无损 WebP 压缩使用已经看到的图像片段来精确地重建新像素。如果找不到有趣的匹配项，它也可以使用本地调色板。</p><p>WebP 文件由 VP8 或 VP8L 图像数据以及基于 RIFF 的容器组成。</p></blockquote><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>这种东西就贼烦了:hear_no_evil:</p><p>Google Chrome，Firefox，Edge，Opera 等都支持 WebP</p><p>[^2]<img src="https://cos.royce2003.top/12013/01.webp-default" alt="支持列表"></p><p><del>万恶的</del> Safari 居然还不支持，但当看到下方的 <code>Safari is experimenting with supporting WebP images.</code>[^3] 时，还兴奋了一小会，但点进去之后…</p><p><img src="https://cos.royce2003.top/12013/02.webp-default" alt="Safari 支持情况"></p><p>2016 年 7 月 19 日 … wd*md:anger::anger:<br>而且 2016 年就内测过，居然给删了…<br>和 Google 竞争？没有技术做好？我肯定相信前者</p><h3 id="使用情况"><a href="#使用情况" class="headerlink" title="使用情况"></a>使用情况</h3><p>随便找了几个网站测下</p><h4 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h4><p>淘宝官网中大部分图片均采用了 WebP 格式</p><p><img src="https://cos.royce2003.top/12013/03.webp-default" alt="淘宝"></p><p>对于部分较小的图片仍采用 JPG or PNG 格式</p><p><img src="https://cos.royce2003.top/12013/04.webp-default" alt="淘宝"></p><h4 id="京东"><a href="#京东" class="headerlink" title="京东"></a>京东</h4><p>京东官网中大部分图片均采用了 WebP 格式</p><p><img src="https://cos.royce2003.top/12013/05.webp-default" alt="京东"></p><p>对于极少的图片仍采用 JPG or PNG 格式，如 Logo 等</p><p><img src="https://cos.royce2003.top/12013/06.webp-default" alt="京东"></p><h4 id="腾讯、阿里云"><a href="#腾讯、阿里云" class="headerlink" title="腾讯、阿里云"></a>腾讯、阿里云</h4><p>两者均无 WebP 格式图片:-1:</p><h3 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h3><p>[^4]<br><img src="https://cos.royce2003.top/12013/07.webp-default" alt="PNG WebP 对比1"><br><img src="https://cos.royce2003.top/12013/08.webp-default" alt="PNG WebP 对比2"></p><p>这些都是较小图片的对比，感觉没差太多，于是乎自己找了几张大图测了下<br>图片名字为 分辨率 + 大小</p><p><img src="https://cos.royce2003.top/12013/09.webp-default" alt="大图"></p><p>好像图片有点大诶，由于采用本地软件<a href="https://zhitu.isux.us/">智图</a>转换，CPU 直接拉满了 qaq:sob:</p><p><img src="https://cos.royce2003.top/12013/10.webp-default" alt="CPU"></p><p>而且两张图图还出错了 qaq，就成功了两张:sob:</p><p><img src="https://cos.royce2003.top/12013/11.webp-default" alt="出错"></p><p>这数据吓到我了<br>5.7 MB 直接被干到了 74.2 KB<br>11.6 MB 直接被干到了 266 KB</p><p>再来看看网络上一个<a href="https://renzhezhilu.gitee.io/webp2jpg-online/">工具</a>的转换情况</p><p><img src="https://cos.royce2003.top/12013/12.webp-default" alt="webp2jpg-online"></p><p>也是很吓人，不过前两张和智图比一下就效果不怎么样了，但是智图有对图片进行适当压缩，所以…</p><p>原本四张图总大小 87.5 MB，现在 15.7 MB<br>反正都 NB 就是了</p><p>再说下智图的压缩，和网络上处理的对比了下，除非放大看细节，要不然没差</p><p>三张对比图放在蓝奏云上了 <a href="https://jalen.lanzous.com/ibnfvza">https://jalen.lanzous.com/ibnfvza</a></p><p>顺便再说下，WebP 是支持动图的，也就是说 GIF 也可以转成 WebP，不过目前我找到的大部分工具都不支持转换，<a href="https://www.upyun.com/webp">又拍云</a>支持</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>图片体积小，支持透明、动画，不过少数浏览器不支持<br><del>万恶的</del> Safari 以后应该也是会支持的吧</p><p>能有效缓解网页加载过慢的情况 <del>（不配图加载最快了）</del><br>还能有效缓解流量太大导致的费用过高（针对对象存储）</p><p>WebP 支持 Alpha 透明和 24-bit 颜色数，例如 PNG8 中的毛边问题是不会出现的</p><p>在大幅缩小体积的情况下保证了图片质量，所以还是非常推荐使用的</p><p>但是有的时候就很玄学了，我曾试过在 JPG 图片通过压缩工具压缩到体积很小的情况下，再去转成 WebP，体积反而变大了，这说明 JPG 比 WebP 体积更小吗？我觉得应该没有。<br>本身 JPG 的体积已经很小了，图片质量也非常差，但是大部分情况 WebP 在差不多相同大小的情况下，图片质量能明显高出很多，不排除个例</p><p>真是因为这些优势，本站已将所有的图片换成了 WebP 格式（图标 icon 和个别特例除外）<br>那对于<del>万恶的</del> Safari 怎么办呢？<br>加几行代码不就好了，<del>简单高效（bushi）</del></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((sessionStorage.getItem(<span class="string">&#x27;confirm&#x27;</span>) !== <span class="string">&#x27;1&#x27;</span>) &amp;&amp; (<span class="regexp">/Safari/</span>.test(navigator.userAgent) &amp;&amp; !<span class="regexp">/Chrome/</span>.test(navigator.userAgent))) &#123;</span><br><span class="line">    confirm(<span class="string">&#x27;抱歉，本博客在 Safari 中大部分图片无法显示&#x27;</span>);</span><br><span class="line">    sessionStorage.setItem(<span class="string">&#x27;confirm&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然了，也可以通过一些 JS 代码来进行转换，但是效率不怎么高</p><p>还有就是又拍云支持 WebP 自适应，根据浏览器对 WebP 的支持情况，自动返回对应格式图片</p><p>希望 cos 等也能尽快出个这种功能</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>最后来推荐些转换工具，当然了，可以自己写代码转换，但是我菜啊，只好找现成的</p><h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><p><a href="https://www.upyun.com/webp">转换工具地址</a><br>这东西事实上是个 Demo，给用户体验用的，所以下载时需要手动右键另存为，不过它没限制上传数量啊</p><p><img src="https://cos.royce2003.top/12013/13.webp-default" alt="又拍云"></p><p>下面这张图片为 GIF to WebP</p><p><img src="https://cos.royce2003.top/12013/14.webp-default" alt="又拍云"></p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol><li>智能压缩</li><li>转换速度较快</li><li>支持 GIF 转 WebP</li></ol><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ol><li>不支持较大图片</li><li>只能一张一张转换（可以开多个网页同时进行）</li><li>不可自己调节质量</li></ol><p>如果使用又拍云 CDN，可以开启 WebP 自适应<br>智能判断浏览器是否支持 WebP，来决定返回 WebP 格式图片还是原图，从而减少网络传输消耗</p><p><img src="https://cos.royce2003.top/12013/15.webp-default" alt="智能 WebP"></p><h3 id="智图"><a href="#智图" class="headerlink" title="智图"></a>智图</h3><p>腾讯的东西，为数不多的一个良心产品，<a href="https://zhitu.isux.us/">官网</a><br>这东西不仅可以转成 WebP，还能优化图片</p><p>软件中需要在右上角的菜单中打开生成 WebP</p><p><img src="https://cos.royce2003.top/12013/16.webp-default" alt="智图"></p><p>会在图片相同位置新建一个文件夹，里面包含了智能处理后的图片和一个 WebP 文件夹</p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ol><li>智能压缩</li><li>支持多张图一起转换</li></ol><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ol><li>不支持较大图片</li><li>不支持 GIF 转 WebP</li><li>不可自己调节质量</li><li>偶尔出现转换失败或提示文件格式错误</li></ol><blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__content"><p>软件中的质量调节对生成 WebP 图片无效</p></div></blockquote><h3 id="WebP-Converter"><a href="#WebP-Converter" class="headerlink" title="WebP Converter"></a>WebP Converter</h3><p><a href="https://webp-converter.com/">官网</a></p><p><img src="https://cos.royce2003.top/12013/17.webp-default" alt="WebP Converter"></p><p>options 可调节质量</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ol><li>支持多张图一起转换</li><li>可自行调节质量</li><li>转换速度较快</li></ol><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ol><li>限制 8MB 以下</li><li>不支持 GIF 转 WebP</li></ol><h3 id="webp2jpg-online"><a href="#webp2jpg-online" class="headerlink" title="webp2jpg-online"></a>webp2jpg-online</h3><p><a href="https://renzhezhilu.gitee.io/webp2jpg-online/">官网</a></p><p><img src="https://cos.royce2003.top/12013/18.webp-default" alt="webp2jpg-online"></p><p>options 可调节质量</p><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><ol><li>转换速度非常快</li><li>支持多张图一起转换</li><li>可自行调节质量</li><li><strong>可自行裁剪</strong></li><li><strong>支持大图片</strong></li><li><strong>支持 jpeg, jpg, png, gif, svg, ico, bmp 转 WebP</strong></li></ol><p>还可以转换成 JPEG PNG ICO</p><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><p>好像没找到缺点，还是托管在 gitee 的，访问速度非常快:laughing:</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>上面推荐的工具用着都还不错，各有各的优势</p><p>我在转换时的优先级排序</p><p>单张图片：又拍云 &gt; webp2jpg-online &gt; 智图 &gt; WebP Converter</p><p>大量图片：智图 &gt; webp2jpg-online &gt; WebP Converter &gt; 又拍云</p><p>单张图片最优选又拍云是因为会智能压缩而且比较快，比较方便<br>多图主要还是因为智图有客户端，方便一点，webp2jpg-online 如果出客户端我肯定毫不犹豫选它</p><p>这篇文章在此之前一共 18 张图片，PNG 格式大小为 25.1 MB，Snipaste 直接100质量输出，智图转 WebP 之后仅 645 KB，直接就省了 24 MB 啊:+1:</p><p><img src="https://cos.royce2003.top/12013/19.webp-default" alt="总结"></p><p>[^1]: 参考 <a href="https://developers.google.com/speed/webp">A new image format for the Web</a><br>[^2]: 图片来源 <a href="https://caniuse.com/#feat=webp">Can I use…</a><br>[^3]: 来源 <a href="https://www.cnet.com/news/apple-ios-macos-tests-googles-webp-graphics-to-speed-up-web/">Apple tests Google graphics format to speed up websites</a><br>[^4]: 图片来源 <a href="https://isparta.github.io/compare-webp/index.html#12345">WebP 示例 (PNG 转 WebP)</a></p>]]></content>
    
    
    <summary type="html">WebP，由 Google 开发的新型图像格式，从名字就可以看出是专门为了 Web 而设计。采用 WebP 格式能对网站速度提升起到很大帮助。</summary>
    
    
    
    
    <category term="横向评测" scheme="http://ecalose.github.io/tags/%E6%A8%AA%E5%90%91%E8%AF%84%E6%B5%8B/"/>
    
    <category term="WebP" scheme="http://ecalose.github.io/tags/WebP/"/>
    
  </entry>
  
  <entry>
    <title>坦克大战</title>
    <link href="http://ecalose.github.io/posts/51049.html"/>
    <id>http://ecalose.github.io/posts/51049.html</id>
    <published>2020-04-16T09:57:54.000Z</published>
    <updated>2020-08-25T08:50:13.359Z</updated>
    
    <content type="html"><![CDATA[<p>终于，Kotlin 的基础语法学的差不多了，本来打算跟着继续往下学 Gradle 的<br>但教程里用的版本和现在的有一定区别，不太方便学，就先跳到下面的实战了</p><p><img src="https://calm-silence-7593.lioil.workers.dev/51049/01.webp-default"></p><p>这个是跟着教程<a href="%5B%E6%95%99%E7%A8%8B%E5%9C%B0%E5%9D%80%5D(https://www.bilibili.com/video/BV1WW411z7PA)">^1</a>里写的<br>u1s1，不知道是学 OI 的原因还是什么，感觉自己的思路跟他差好多啊 ┭┮﹏┭┮</p><h3 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h3><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>游戏窗口</p>          </div><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>我方坦克</p>          </div><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>障碍阻挡</p>          </div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>子弹发射</p>                      <input type="checkbox" class=" green" disabled checked="checked">            <p>元素回收</p>          <br>            <input type="checkbox" class=" green" disabled checked="checked">            <p>攻受分析</p>                      <input type="checkbox" class=" green" disabled checked="checked">            <p>爆炸</p>          <br>            <input type="checkbox" class=" green" disabled checked="checked">            <p>敌方坦克</p>                      <input type="checkbox" class=" green" disabled checked="checked">            <p>自动移动</p>                      <input type="checkbox" class=" red" disabled >            <p>自动发射子弹</p>          <br><div>            <input type="checkbox" class=" red" disabled >            <p>伤害</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>大本营</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>游戏结束</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>打包</p>          </div><br><a class="btn" href="https://github.com/royce003/TankWar"  title="源码地址" target="_blank">源码地址</a>]]></content>
    
    
    <summary type="html">人生第一次写游戏，虽然是跟着教程走，但收获还是非常多，还在开发中</summary>
    
    
    
    
    <category term="Kotlin" scheme="http://ecalose.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Github Emoji 速查</title>
    <link href="http://ecalose.github.io/posts/emoji.html"/>
    <id>http://ecalose.github.io/posts/emoji.html</id>
    <published>2020-04-15T10:57:21.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>commit 的时候喜欢前面加个 emoji，每次上 Github 找这个仓库[^1]很不方便，就复制了一份放博客上，正好博客的渲染器支持:satisfied:</p><h3 id="People"><a href="#People" class="headerlink" title="People"></a>People</h3><table><thead><tr><th>:bowtie: <code>:bowtie:</code></th><th>:smile: <code>:smile:</code></th><th>:laughing: <code>:laughing:</code></th></tr></thead><tbody><tr><td>:blush: <code>:blush:</code></td><td>:smiley: <code>:smiley:</code></td><td>:relaxed: <code>:relaxed:</code></td></tr><tr><td>:smirk: <code>:smirk:</code></td><td>:heart_eyes: <code>:heart_eyes:</code></td><td>:kissing_heart: <code>:kissing_heart:</code></td></tr><tr><td>:kissing_closed_eyes: <code>:kissing_closed_eyes:</code></td><td>:flushed: <code>:flushed:</code></td><td>:relieved: <code>:relieved:</code></td></tr><tr><td>:satisfied: <code>:satisfied:</code></td><td>:grin: <code>:grin:</code></td><td>:wink: <code>:wink:</code></td></tr><tr><td>:stuck_out_tongue_winking_eye: <code>:stuck_out_tongue_winking_eye:</code></td><td>:stuck_out_tongue_closed_eyes: <code>:stuck_out_tongue_closed_eyes:</code></td><td>:grinning: <code>:grinning:</code></td></tr><tr><td>:kissing: <code>:kissing:</code></td><td>:kissing_smiling_eyes: <code>:kissing_smiling_eyes:</code></td><td>:stuck_out_tongue: <code>:stuck_out_tongue:</code></td></tr><tr><td>:sleeping: <code>:sleeping:</code></td><td>:worried: <code>:worried:</code></td><td>:frowning: <code>:frowning:</code></td></tr><tr><td>:anguished: <code>:anguished:</code></td><td>:open_mouth: <code>:open_mouth:</code></td><td>:grimacing: <code>:grimacing:</code></td></tr><tr><td>:confused: <code>:confused:</code></td><td>:hushed: <code>:hushed:</code></td><td>:expressionless: <code>:expressionless:</code></td></tr><tr><td>:unamused: <code>:unamused:</code></td><td>:sweat_smile: <code>:sweat_smile:</code></td><td>:sweat: <code>:sweat:</code></td></tr><tr><td>:disappointed_relieved: <code>:disappointed_relieved:</code></td><td>:weary: <code>:weary:</code></td><td>:pensive: <code>:pensive:</code></td></tr><tr><td>:disappointed: <code>:disappointed:</code></td><td>:confounded: <code>:confounded:</code></td><td>:fearful: <code>:fearful:</code></td></tr><tr><td>:cold_sweat: <code>:cold_sweat:</code></td><td>:persevere: <code>:persevere:</code></td><td>:cry: <code>:cry:</code></td></tr><tr><td>:sob: <code>:sob:</code></td><td>:joy: <code>:joy:</code></td><td>:astonished: <code>:astonished:</code></td></tr><tr><td>:scream: <code>:scream:</code></td><td>:neckbeard: <code>:neckbeard:</code></td><td>:tired_face: <code>:tired_face:</code></td></tr><tr><td>:angry: <code>:angry:</code></td><td>:rage: <code>:rage:</code></td><td>:triumph: <code>:triumph:</code></td></tr><tr><td>:sleepy: <code>:sleepy:</code></td><td>:yum: <code>:yum:</code></td><td>:mask: <code>:mask:</code></td></tr><tr><td>:sunglasses: <code>:sunglasses:</code></td><td>:dizzy_face: <code>:dizzy_face:</code></td><td>:imp: <code>:imp:</code></td></tr><tr><td>:smiling_imp: <code>:smiling_imp:</code></td><td>:neutral_face: <code>:neutral_face:</code></td><td>:no_mouth: <code>:no_mouth:</code></td></tr><tr><td>:innocent: <code>:innocent:</code></td><td>:alien: <code>:alien:</code></td><td>:yellow_heart: <code>:yellow_heart:</code></td></tr><tr><td>:blue_heart: <code>:blue_heart:</code></td><td>:purple_heart: <code>:purple_heart:</code></td><td>:heart: <code>:heart:</code></td></tr><tr><td>:green_heart: <code>:green_heart:</code></td><td>:broken_heart: <code>:broken_heart:</code></td><td>:heartbeat: <code>:heartbeat:</code></td></tr><tr><td>:heartpulse: <code>:heartpulse:</code></td><td>:two_hearts: <code>:two_hearts:</code></td><td>:revolving_hearts: <code>:revolving_hearts:</code></td></tr><tr><td>:cupid: <code>:cupid:</code></td><td>:sparkling_heart: <code>:sparkling_heart:</code></td><td>:sparkles: <code>:sparkles:</code></td></tr><tr><td>:star: <code>:star:</code></td><td>:star2: <code>:star2:</code></td><td>:dizzy: <code>:dizzy:</code></td></tr><tr><td>:boom: <code>:boom:</code></td><td>:collision: <code>:collision:</code></td><td>:anger: <code>:anger:</code></td></tr><tr><td>:exclamation: <code>:exclamation:</code></td><td>:question: <code>:question:</code></td><td>:grey_exclamation: <code>:grey_exclamation:</code></td></tr><tr><td>:grey_question: <code>:grey_question:</code></td><td>:zzz: <code>:zzz:</code></td><td>:dash: <code>:dash:</code></td></tr><tr><td>:sweat_drops: <code>:sweat_drops:</code></td><td>:notes: <code>:notes:</code></td><td>:musical_note: <code>:musical_note:</code></td></tr><tr><td>:fire: <code>:fire:</code></td><td>:hankey: <code>:hankey:</code></td><td>:poop: <code>:poop:</code></td></tr><tr><td>:shit: <code>:shit:</code></td><td>:+1: <code>:+1:</code></td><td>:thumbsup: <code>:thumbsup:</code></td></tr><tr><td>:-1: <code>:-1:</code></td><td>:thumbsdown: <code>:thumbsdown:</code></td><td>:ok_hand: <code>:ok_hand:</code></td></tr><tr><td>:punch: <code>:punch:</code></td><td>:facepunch: <code>:facepunch:</code></td><td>:fist: <code>:fist:</code></td></tr><tr><td>:v: <code>:v:</code></td><td>:wave: <code>:wave:</code></td><td>:hand: <code>:hand:</code></td></tr><tr><td>:raised_hand: <code>:raised_hand:</code></td><td>:open_hands: <code>:open_hands:</code></td><td>:point_up: <code>:point_up:</code></td></tr><tr><td>:point_down: <code>:point_down:</code></td><td>:point_left: <code>:point_left:</code></td><td>:point_right: <code>:point_right:</code></td></tr><tr><td>:raised_hands: <code>:raised_hands:</code></td><td>:pray: <code>:pray:</code></td><td>:point_up_2: <code>:point_up_2:</code></td></tr><tr><td>:clap: <code>:clap:</code></td><td>:muscle: <code>:muscle:</code></td><td>:metal: <code>:metal:</code></td></tr><tr><td>:fu: <code>:fu:</code></td><td>:walking: <code>:walking:</code></td><td>:runner: <code>:runner:</code></td></tr><tr><td>:running: <code>:running:</code></td><td>:couple: <code>:couple:</code></td><td>:family: <code>:family:</code></td></tr><tr><td>:two_men_holding_hands: <code>:two_men_holding_hands:</code></td><td>:two_women_holding_hands: <code>:two_women_holding_hands:</code></td><td>:dancer: <code>:dancer:</code></td></tr><tr><td>:dancers: <code>:dancers:</code></td><td>:ok_woman: <code>:ok_woman:</code></td><td>:no_good: <code>:no_good:</code></td></tr><tr><td>:information_desk_person: <code>:information_desk_person:</code></td><td>:raising_hand: <code>:raising_hand:</code></td><td>:bride_with_veil: <code>:bride_with_veil:</code></td></tr><tr><td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td><td>:person_frowning: <code>:person_frowning:</code></td><td>:bow: <code>:bow:</code></td></tr><tr><td>:couplekiss: <code>:couplekiss:</code></td><td>:couple_with_heart: <code>:couple_with_heart:</code></td><td>:massage: <code>:massage:</code></td></tr><tr><td>:haircut: <code>:haircut:</code></td><td>:nail_care: <code>:nail_care:</code></td><td>:boy: <code>:boy:</code></td></tr><tr><td>:girl: <code>:girl:</code></td><td>:woman: <code>:woman:</code></td><td>:man: <code>:man:</code></td></tr><tr><td>:baby: <code>:baby:</code></td><td>:older_woman: <code>:older_woman:</code></td><td>:older_man: <code>:older_man:</code></td></tr><tr><td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td><td>:man_with_gua_pi_mao: <code>:man_with_gua_pi_mao:</code></td><td>:man_with_turban: <code>:man_with_turban:</code></td></tr><tr><td>:construction_worker: <code>:construction_worker:</code></td><td>:cop: <code>:cop:</code></td><td>:angel: <code>:angel:</code></td></tr><tr><td>:princess: <code>:princess:</code></td><td>:smiley_cat: <code>:smiley_cat:</code></td><td>:smile_cat: <code>:smile_cat:</code></td></tr><tr><td>:heart_eyes_cat: <code>:heart_eyes_cat:</code></td><td>:kissing_cat: <code>:kissing_cat:</code></td><td>:smirk_cat: <code>:smirk_cat:</code></td></tr><tr><td>:scream_cat: <code>:scream_cat:</code></td><td>:crying_cat_face: <code>:crying_cat_face:</code></td><td>:joy_cat: <code>:joy_cat:</code></td></tr><tr><td>:pouting_cat: <code>:pouting_cat:</code></td><td>:japanese_ogre: <code>:japanese_ogre:</code></td><td>:japanese_goblin: <code>:japanese_goblin:</code></td></tr><tr><td>:see_no_evil: <code>:see_no_evil:</code></td><td>:hear_no_evil: <code>:hear_no_evil:</code></td><td>:speak_no_evil: <code>:speak_no_evil:</code></td></tr><tr><td>:guardsman: <code>:guardsman:</code></td><td>:skull: <code>:skull:</code></td><td>:feet: <code>:feet:</code></td></tr><tr><td>:lips: <code>:lips:</code></td><td>:kiss: <code>:kiss:</code></td><td>:droplet: <code>:droplet:</code></td></tr><tr><td>:ear: <code>:ear:</code></td><td>:eyes: <code>:eyes:</code></td><td>:nose: <code>:nose:</code></td></tr><tr><td>:tongue: <code>:tongue:</code></td><td>:love_letter: <code>:love_letter:</code></td><td>:bust_in_silhouette: <code>:bust_in_silhouette:</code></td></tr><tr><td>:busts_in_silhouette: <code>:busts_in_silhouette:</code></td><td>:speech_balloon: <code>:speech_balloon:</code></td><td>:thought_balloon: <code>:thought_balloon:</code></td></tr><tr><td>:feelsgood: <code>:feelsgood:</code></td><td>:finnadie: <code>:finnadie:</code></td><td>:goberserk: <code>:goberserk:</code></td></tr><tr><td>:godmode: <code>:godmode:</code></td><td>:hurtrealbad: <code>:hurtrealbad:</code></td><td>:rage1: <code>:rage1:</code></td></tr><tr><td>:rage2: <code>:rage2:</code></td><td>:rage3: <code>:rage3:</code></td><td>:rage4: <code>:rage4:</code></td></tr><tr><td>:suspect: <code>:suspect:</code></td><td>:trollface: <code>:trollface:</code></td><td></td></tr></tbody></table><h3 id="Nature"><a href="#Nature" class="headerlink" title="Nature"></a>Nature</h3><table><thead><tr><th>:sunny: <code>:sunny:</code></th><th>:umbrella: <code>:umbrella:</code></th><th>:cloud: <code>:cloud:</code></th></tr></thead><tbody><tr><td>:snowflake: <code>:snowflake:</code></td><td>:snowman: <code>:snowman:</code></td><td>:zap: <code>:zap:</code></td></tr><tr><td>:cyclone: <code>:cyclone:</code></td><td>:foggy: <code>:foggy:</code></td><td>:ocean: <code>:ocean:</code></td></tr><tr><td>:cat: <code>:cat:</code></td><td>:dog: <code>:dog:</code></td><td>:mouse: <code>:mouse:</code></td></tr><tr><td>:hamster: <code>:hamster:</code></td><td>:rabbit: <code>:rabbit:</code></td><td>:wolf: <code>:wolf:</code></td></tr><tr><td>:frog: <code>:frog:</code></td><td>:tiger: <code>:tiger:</code></td><td>:koala: <code>:koala:</code></td></tr><tr><td>:bear: <code>:bear:</code></td><td>:pig: <code>:pig:</code></td><td>:pig_nose: <code>:pig_nose:</code></td></tr><tr><td>:cow: <code>:cow:</code></td><td>:boar: <code>:boar:</code></td><td>:monkey_face: <code>:monkey_face:</code></td></tr><tr><td>:monkey: <code>:monkey:</code></td><td>:horse: <code>:horse:</code></td><td>:racehorse: <code>:racehorse:</code></td></tr><tr><td>:camel: <code>:camel:</code></td><td>:sheep: <code>:sheep:</code></td><td>:elephant: <code>:elephant:</code></td></tr><tr><td>:panda_face: <code>:panda_face:</code></td><td>:snake: <code>:snake:</code></td><td>:bird: <code>:bird:</code></td></tr><tr><td>:baby_chick: <code>:baby_chick:</code></td><td>:hatched_chick: <code>:hatched_chick:</code></td><td>:hatching_chick: <code>:hatching_chick:</code></td></tr><tr><td>:chicken: <code>:chicken:</code></td><td>:penguin: <code>:penguin:</code></td><td>:turtle: <code>:turtle:</code></td></tr><tr><td>:bug: <code>:bug:</code></td><td>:honeybee: <code>:honeybee:</code></td><td>:ant: <code>:ant:</code></td></tr><tr><td>:beetle: <code>:beetle:</code></td><td>:snail: <code>:snail:</code></td><td>:octopus: <code>:octopus:</code></td></tr><tr><td>:tropical_fish: <code>:tropical_fish:</code></td><td>:fish: <code>:fish:</code></td><td>:whale: <code>:whale:</code></td></tr><tr><td>:whale2: <code>:whale2:</code></td><td>:dolphin: <code>:dolphin:</code></td><td>:cow2: <code>:cow2:</code></td></tr><tr><td>:ram: <code>:ram:</code></td><td>:rat: <code>:rat:</code></td><td>:water_buffalo: <code>:water_buffalo:</code></td></tr><tr><td>:tiger2: <code>:tiger2:</code></td><td>:rabbit2: <code>:rabbit2:</code></td><td>:dragon: <code>:dragon:</code></td></tr><tr><td>:goat: <code>:goat:</code></td><td>:rooster: <code>:rooster:</code></td><td>:dog2: <code>:dog2:</code></td></tr><tr><td>:pig2: <code>:pig2:</code></td><td>:mouse2: <code>:mouse2:</code></td><td>:ox: <code>:ox:</code></td></tr><tr><td>:dragon_face: <code>:dragon_face:</code></td><td>:blowfish: <code>:blowfish:</code></td><td>:crocodile: <code>:crocodile:</code></td></tr><tr><td>:dromedary_camel: <code>:dromedary_camel:</code></td><td>:leopard: <code>:leopard:</code></td><td>:cat2: <code>:cat2:</code></td></tr><tr><td>:poodle: <code>:poodle:</code></td><td>:paw_prints: <code>:paw_prints:</code></td><td>:bouquet: <code>:bouquet:</code></td></tr><tr><td>:cherry_blossom: <code>:cherry_blossom:</code></td><td>:tulip: <code>:tulip:</code></td><td>:four_leaf_clover: <code>:four_leaf_clover:</code></td></tr><tr><td>:rose: <code>:rose:</code></td><td>:sunflower: <code>:sunflower:</code></td><td>:hibiscus: <code>:hibiscus:</code></td></tr><tr><td>:maple_leaf: <code>:maple_leaf:</code></td><td>:leaves: <code>:leaves:</code></td><td>:fallen_leaf: <code>:fallen_leaf:</code></td></tr><tr><td>:herb: <code>:herb:</code></td><td>:mushroom: <code>:mushroom:</code></td><td>:cactus: <code>:cactus:</code></td></tr><tr><td>:palm_tree: <code>:palm_tree:</code></td><td>:evergreen_tree: <code>:evergreen_tree:</code></td><td>:deciduous_tree: <code>:deciduous_tree:</code></td></tr><tr><td>:chestnut: <code>:chestnut:</code></td><td>:seedling: <code>:seedling:</code></td><td>:blossom: <code>:blossom:</code></td></tr><tr><td>:ear_of_rice: <code>:ear_of_rice:</code></td><td>:shell: <code>:shell:</code></td><td>:globe_with_meridians: <code>:globe_with_meridians:</code></td></tr><tr><td>:sun_with_face: <code>:sun_with_face:</code></td><td>:full_moon_with_face: <code>:full_moon_with_face:</code></td><td>:new_moon_with_face: <code>:new_moon_with_face:</code></td></tr><tr><td>:new_moon: <code>:new_moon:</code></td><td>:waxing_crescent_moon: <code>:waxing_crescent_moon:</code></td><td>:first_quarter_moon: <code>:first_quarter_moon:</code></td></tr><tr><td>:waxing_gibbous_moon: <code>:waxing_gibbous_moon:</code></td><td>:full_moon: <code>:full_moon:</code></td><td>:waning_gibbous_moon: <code>:waning_gibbous_moon:</code></td></tr><tr><td>:last_quarter_moon: <code>:last_quarter_moon:</code></td><td>:waning_crescent_moon: <code>:waning_crescent_moon:</code></td><td>:last_quarter_moon_with_face: <code>:last_quarter_moon_with_face:</code></td></tr><tr><td>:first_quarter_moon_with_face: <code>:first_quarter_moon_with_face:</code></td><td>:moon: <code>:moon:</code></td><td>:earth_africa: <code>:earth_africa:</code></td></tr><tr><td>:earth_americas: <code>:earth_americas:</code></td><td>:earth_asia: <code>:earth_asia:</code></td><td>:volcano: <code>:volcano:</code></td></tr><tr><td>:milky_way: <code>:milky_way:</code></td><td>:partly_sunny: <code>:partly_sunny:</code></td><td>:octocat: <code>:octocat:</code></td></tr><tr><td>:squirrel: <code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><table><thead><tr><th>:bamboo: <code>:bamboo:</code></th><th>:gift_heart: <code>:gift_heart:</code></th><th>:dolls: <code>:dolls:</code></th></tr></thead><tbody><tr><td>:school_satchel: <code>:school_satchel:</code></td><td>:mortar_board: <code>:mortar_board:</code></td><td>:flags: <code>:flags:</code></td></tr><tr><td>:fireworks: <code>:fireworks:</code></td><td>:sparkler: <code>:sparkler:</code></td><td>:wind_chime: <code>:wind_chime:</code></td></tr><tr><td>:rice_scene: <code>:rice_scene:</code></td><td>:jack_o_lantern: <code>:jack_o_lantern:</code></td><td>:ghost: <code>:ghost:</code></td></tr><tr><td>:santa: <code>:santa:</code></td><td>:christmas_tree: <code>:christmas_tree:</code></td><td>:gift: <code>:gift:</code></td></tr><tr><td>:bell: <code>:bell:</code></td><td>:no_bell: <code>:no_bell:</code></td><td>:tanabata_tree: <code>:tanabata_tree:</code></td></tr><tr><td>:tada: <code>:tada:</code></td><td>:confetti_ball: <code>:confetti_ball:</code></td><td>:balloon: <code>:balloon:</code></td></tr><tr><td>:crystal_ball: <code>:crystal_ball:</code></td><td>:cd: <code>:cd:</code></td><td>:dvd: <code>:dvd:</code></td></tr><tr><td>:floppy_disk: <code>:floppy_disk:</code></td><td>:camera: <code>:camera:</code></td><td>:video_camera: <code>:video_camera:</code></td></tr><tr><td>:movie_camera: <code>:movie_camera:</code></td><td>:computer: <code>:computer:</code></td><td>:tv: <code>:tv:</code></td></tr><tr><td>:iphone: <code>:iphone:</code></td><td>:phone: <code>:phone:</code></td><td>:telephone: <code>:telephone:</code></td></tr><tr><td>:telephone_receiver: <code>:telephone_receiver:</code></td><td>:pager: <code>:pager:</code></td><td>:fax: <code>:fax:</code></td></tr><tr><td>:minidisc: <code>:minidisc:</code></td><td>:vhs: <code>:vhs:</code></td><td>:sound: <code>:sound:</code></td></tr><tr><td>:speaker: <code>:speaker:</code></td><td>:mute: <code>:mute:</code></td><td>:loudspeaker: <code>:loudspeaker:</code></td></tr><tr><td>:mega: <code>:mega:</code></td><td>:hourglass: <code>:hourglass:</code></td><td>:hourglass_flowing_sand: <code>:hourglass_flowing_sand:</code></td></tr><tr><td>:alarm_clock: <code>:alarm_clock:</code></td><td>:watch: <code>:watch:</code></td><td>:radio: <code>:radio:</code></td></tr><tr><td>:satellite: <code>:satellite:</code></td><td>:loop: <code>:loop:</code></td><td>:mag: <code>:mag:</code></td></tr><tr><td>:mag_right: <code>:mag_right:</code></td><td>:unlock: <code>:unlock:</code></td><td>:lock: <code>:lock:</code></td></tr><tr><td>:lock_with_ink_pen: <code>:lock_with_ink_pen:</code></td><td>:closed_lock_with_key: <code>:closed_lock_with_key:</code></td><td>:key: <code>:key:</code></td></tr><tr><td>:bulb: <code>:bulb:</code></td><td>:flashlight: <code>:flashlight:</code></td><td>:high_brightness: <code>:high_brightness:</code></td></tr><tr><td>:low_brightness: <code>:low_brightness:</code></td><td>:electric_plug: <code>:electric_plug:</code></td><td>:battery: <code>:battery:</code></td></tr><tr><td>:calling: <code>:calling:</code></td><td>:email: <code>:email:</code></td><td>:mailbox: <code>:mailbox:</code></td></tr><tr><td>:postbox: <code>:postbox:</code></td><td>:bath: <code>:bath:</code></td><td>:bathtub: <code>:bathtub:</code></td></tr><tr><td>:shower: <code>:shower:</code></td><td>:toilet: <code>:toilet:</code></td><td>:wrench: <code>:wrench:</code></td></tr><tr><td>:nut_and_bolt: <code>:nut_and_bolt:</code></td><td>:hammer: <code>:hammer:</code></td><td>:seat: <code>:seat:</code></td></tr><tr><td>:moneybag: <code>:moneybag:</code></td><td>:yen: <code>:yen:</code></td><td>:dollar: <code>:dollar:</code></td></tr><tr><td>:pound: <code>:pound:</code></td><td>:euro: <code>:euro:</code></td><td>:credit_card: <code>:credit_card:</code></td></tr><tr><td>:money_with_wings: <code>:money_with_wings:</code></td><td>:e-mail: <code>:e-mail:</code></td><td>:inbox_tray: <code>:inbox_tray:</code></td></tr><tr><td>:outbox_tray: <code>:outbox_tray:</code></td><td>:envelope: <code>:envelope:</code></td><td>:incoming_envelope: <code>:incoming_envelope:</code></td></tr><tr><td>:postal_horn: <code>:postal_horn:</code></td><td>:mailbox_closed: <code>:mailbox_closed:</code></td><td>:mailbox_with_mail: <code>:mailbox_with_mail:</code></td></tr><tr><td>:mailbox_with_no_mail: <code>:mailbox_with_no_mail:</code></td><td>:door: <code>:door:</code></td><td>:smoking: <code>:smoking:</code></td></tr><tr><td>:bomb: <code>:bomb:</code></td><td>:gun: <code>:gun:</code></td><td>:hocho: <code>:hocho:</code></td></tr><tr><td>:pill: <code>:pill:</code></td><td>:syringe: <code>:syringe:</code></td><td>:page_facing_up: <code>:page_facing_up:</code></td></tr><tr><td>:page_with_curl: <code>:page_with_curl:</code></td><td>:bookmark_tabs: <code>:bookmark_tabs:</code></td><td>:bar_chart: <code>:bar_chart:</code></td></tr><tr><td>:chart_with_upwards_trend: <code>:chart_with_upwards_trend:</code></td><td>:chart_with_downwards_trend: <code>:chart_with_downwards_trend:</code></td><td>:scroll: <code>:scroll:</code></td></tr><tr><td>:clipboard: <code>:clipboard:</code></td><td>:calendar: <code>:calendar:</code></td><td>:date: <code>:date:</code></td></tr><tr><td>:card_index: <code>:card_index:</code></td><td>:file_folder: <code>:file_folder:</code></td><td>:open_file_folder: <code>:open_file_folder:</code></td></tr><tr><td>:scissors: <code>:scissors:</code></td><td>:pushpin: <code>:pushpin:</code></td><td>:paperclip: <code>:paperclip:</code></td></tr><tr><td>:black_nib: <code>:black_nib:</code></td><td>:pencil2: <code>:pencil2:</code></td><td>:straight_ruler: <code>:straight_ruler:</code></td></tr><tr><td>:triangular_ruler: <code>:triangular_ruler:</code></td><td>:closed_book: <code>:closed_book:</code></td><td>:green_book: <code>:green_book:</code></td></tr><tr><td>:blue_book: <code>:blue_book:</code></td><td>:orange_book: <code>:orange_book:</code></td><td>:notebook: <code>:notebook:</code></td></tr><tr><td>:notebook_with_decorative_cover: <code>:notebook_with_decorative_cover:</code></td><td>:ledger: <code>:ledger:</code></td><td>:books: <code>:books:</code></td></tr><tr><td>:bookmark: <code>:bookmark:</code></td><td>:name_badge: <code>:name_badge:</code></td><td>:microscope: <code>:microscope:</code></td></tr><tr><td>:telescope: <code>:telescope:</code></td><td>:newspaper: <code>:newspaper:</code></td><td>:football: <code>:football:</code></td></tr><tr><td>:basketball: <code>:basketball:</code></td><td>:soccer: <code>:soccer:</code></td><td>:baseball: <code>:baseball:</code></td></tr><tr><td>:tennis: <code>:tennis:</code></td><td>:8ball: <code>:8ball:</code></td><td>:rugby_football: <code>:rugby_football:</code></td></tr><tr><td>:bowling: <code>:bowling:</code></td><td>:golf: <code>:golf:</code></td><td>:mountain_bicyclist: <code>:mountain_bicyclist:</code></td></tr><tr><td>:bicyclist: <code>:bicyclist:</code></td><td>:horse_racing: <code>:horse_racing:</code></td><td>:snowboarder: <code>:snowboarder:</code></td></tr><tr><td>:swimmer: <code>:swimmer:</code></td><td>:surfer: <code>:surfer:</code></td><td>:ski: <code>:ski:</code></td></tr><tr><td>:spades: <code>:spades:</code></td><td>:hearts: <code>:hearts:</code></td><td>:clubs: <code>:clubs:</code></td></tr><tr><td>:diamonds: <code>:diamonds:</code></td><td>:gem: <code>:gem:</code></td><td>:ring: <code>:ring:</code></td></tr><tr><td>:trophy: <code>:trophy:</code></td><td>:musical_score: <code>:musical_score:</code></td><td>:musical_keyboard: <code>:musical_keyboard:</code></td></tr><tr><td>:violin: <code>:violin:</code></td><td>:space_invader: <code>:space_invader:</code></td><td>:video_game: <code>:video_game:</code></td></tr><tr><td>:black_joker: <code>:black_joker:</code></td><td>:flower_playing_cards: <code>:flower_playing_cards:</code></td><td>:game_die: <code>:game_die:</code></td></tr><tr><td>:dart: <code>:dart:</code></td><td>:mahjong: <code>:mahjong:</code></td><td>:clapper: <code>:clapper:</code></td></tr><tr><td>:memo: <code>:memo:</code></td><td>:pencil: <code>:pencil:</code></td><td>:book: <code>:book:</code></td></tr><tr><td>:art: <code>:art:</code></td><td>:microphone: <code>:microphone:</code></td><td>:headphones: <code>:headphones:</code></td></tr><tr><td>:trumpet: <code>:trumpet:</code></td><td>:saxophone: <code>:saxophone:</code></td><td>:guitar: <code>:guitar:</code></td></tr><tr><td>:shoe: <code>:shoe:</code></td><td>:sandal: <code>:sandal:</code></td><td>:high_heel: <code>:high_heel:</code></td></tr><tr><td>:lipstick: <code>:lipstick:</code></td><td>:boot: <code>:boot:</code></td><td>:shirt: <code>:shirt:</code></td></tr><tr><td>:tshirt: <code>:tshirt:</code></td><td>:necktie: <code>:necktie:</code></td><td>:womans_clothes: <code>:womans_clothes:</code></td></tr><tr><td>:dress: <code>:dress:</code></td><td>:running_shirt_with_sash: <code>:running_shirt_with_sash:</code></td><td>:jeans: <code>:jeans:</code></td></tr><tr><td>:kimono: <code>:kimono:</code></td><td>:bikini: <code>:bikini:</code></td><td>:ribbon: <code>:ribbon:</code></td></tr><tr><td>:tophat: <code>:tophat:</code></td><td>:crown: <code>:crown:</code></td><td>:womans_hat: <code>:womans_hat:</code></td></tr><tr><td>:mans_shoe: <code>:mans_shoe:</code></td><td>:closed_umbrella: <code>:closed_umbrella:</code></td><td>:briefcase: <code>:briefcase:</code></td></tr><tr><td>:handbag: <code>:handbag:</code></td><td>:pouch: <code>:pouch:</code></td><td>:purse: <code>:purse:</code></td></tr><tr><td>:eyeglasses: <code>:eyeglasses:</code></td><td>:fishing_pole_and_fish: <code>:fishing_pole_and_fish:</code></td><td>:coffee: <code>:coffee:</code></td></tr><tr><td>:tea: <code>:tea:</code></td><td>:sake: <code>:sake:</code></td><td>:baby_bottle: <code>:baby_bottle:</code></td></tr><tr><td>:beer: <code>:beer:</code></td><td>:beers: <code>:beers:</code></td><td>:cocktail: <code>:cocktail:</code></td></tr><tr><td>:tropical_drink: <code>:tropical_drink:</code></td><td>:wine_glass: <code>:wine_glass:</code></td><td>:fork_and_knife: <code>:fork_and_knife:</code></td></tr><tr><td>:pizza: <code>:pizza:</code></td><td>:hamburger: <code>:hamburger:</code></td><td>:fries: <code>:fries:</code></td></tr><tr><td>:poultry_leg: <code>:poultry_leg:</code></td><td>:meat_on_bone: <code>:meat_on_bone:</code></td><td>:spaghetti: <code>:spaghetti:</code></td></tr><tr><td>:curry: <code>:curry:</code></td><td>:fried_shrimp: <code>:fried_shrimp:</code></td><td>:bento: <code>:bento:</code></td></tr><tr><td>:sushi: <code>:sushi:</code></td><td>:fish_cake: <code>:fish_cake:</code></td><td>:rice_ball: <code>:rice_ball:</code></td></tr><tr><td>:rice_cracker: <code>:rice_cracker:</code></td><td>:rice: <code>:rice:</code></td><td>:ramen: <code>:ramen:</code></td></tr><tr><td>:stew: <code>:stew:</code></td><td>:oden: <code>:oden:</code></td><td>:dango: <code>:dango:</code></td></tr><tr><td>:egg: <code>:egg:</code></td><td>:bread: <code>:bread:</code></td><td>:doughnut: <code>:doughnut:</code></td></tr><tr><td>:custard: <code>:custard:</code></td><td>:icecream: <code>:icecream:</code></td><td>:ice_cream: <code>:ice_cream:</code></td></tr><tr><td>:shaved_ice: <code>:shaved_ice:</code></td><td>:birthday: <code>:birthday:</code></td><td>:cake: <code>:cake:</code></td></tr><tr><td>:cookie: <code>:cookie:</code></td><td>:chocolate_bar: <code>:chocolate_bar:</code></td><td>:candy: <code>:candy:</code></td></tr><tr><td>:lollipop: <code>:lollipop:</code></td><td>:honey_pot: <code>:honey_pot:</code></td><td>:apple: <code>:apple:</code></td></tr><tr><td>:green_apple: <code>:green_apple:</code></td><td>:tangerine: <code>:tangerine:</code></td><td>:lemon: <code>:lemon:</code></td></tr><tr><td>:cherries: <code>:cherries:</code></td><td>:grapes: <code>:grapes:</code></td><td>:watermelon: <code>:watermelon:</code></td></tr><tr><td>:strawberry: <code>:strawberry:</code></td><td>:peach: <code>:peach:</code></td><td>:melon: <code>:melon:</code></td></tr><tr><td>:banana: <code>:banana:</code></td><td>:pear: <code>:pear:</code></td><td>:pineapple: <code>:pineapple:</code></td></tr><tr><td>:sweet_potato: <code>:sweet_potato:</code></td><td>:eggplant: <code>:eggplant:</code></td><td>:tomato: <code>:tomato:</code></td></tr><tr><td>:corn: <code>:corn:</code></td><td></td><td></td></tr></tbody></table><h3 id="Places"><a href="#Places" class="headerlink" title="Places"></a>Places</h3><table><thead><tr><th>:house: <code>:house:</code></th><th>:house_with_garden: <code>:house_with_garden:</code></th><th>:school: <code>:school:</code></th></tr></thead><tbody><tr><td>:office: <code>:office:</code></td><td>:post_office: <code>:post_office:</code></td><td>:hospital: <code>:hospital:</code></td></tr><tr><td>:bank: <code>:bank:</code></td><td>:convenience_store: <code>:convenience_store:</code></td><td>:love_hotel: <code>:love_hotel:</code></td></tr><tr><td>:hotel: <code>:hotel:</code></td><td>:wedding: <code>:wedding:</code></td><td>:church: <code>:church:</code></td></tr><tr><td>:department_store: <code>:department_store:</code></td><td>:european_post_office: <code>:european_post_office:</code></td><td>:city_sunrise: <code>:city_sunrise:</code></td></tr><tr><td>:city_sunset: <code>:city_sunset:</code></td><td>:japanese_castle: <code>:japanese_castle:</code></td><td>:european_castle: <code>:european_castle:</code></td></tr><tr><td>:tent: <code>:tent:</code></td><td>:factory: <code>:factory:</code></td><td>:tokyo_tower: <code>:tokyo_tower:</code></td></tr><tr><td>:japan: <code>:japan:</code></td><td>:mount_fuji: <code>:mount_fuji:</code></td><td>:sunrise_over_mountains: <code>:sunrise_over_mountains:</code></td></tr><tr><td>:sunrise: <code>:sunrise:</code></td><td>:stars: <code>:stars:</code></td><td>:statue_of_liberty: <code>:statue_of_liberty:</code></td></tr><tr><td>:bridge_at_night: <code>:bridge_at_night:</code></td><td>:carousel_horse: <code>:carousel_horse:</code></td><td>:rainbow: <code>:rainbow:</code></td></tr><tr><td>:ferris_wheel: <code>:ferris_wheel:</code></td><td>:fountain: <code>:fountain:</code></td><td>:roller_coaster: <code>:roller_coaster:</code></td></tr><tr><td>:ship: <code>:ship:</code></td><td>:speedboat: <code>:speedboat:</code></td><td>:boat: <code>:boat:</code></td></tr><tr><td>:sailboat: <code>:sailboat:</code></td><td>:rowboat: <code>:rowboat:</code></td><td>:anchor: <code>:anchor:</code></td></tr><tr><td>:rocket: <code>:rocket:</code></td><td>:airplane: <code>:airplane:</code></td><td>:helicopter: <code>:helicopter:</code></td></tr><tr><td>:steam_locomotive: <code>:steam_locomotive:</code></td><td>:tram: <code>:tram:</code></td><td>:mountain_railway: <code>:mountain_railway:</code></td></tr><tr><td>:bike: <code>:bike:</code></td><td>:aerial_tramway: <code>:aerial_tramway:</code></td><td>:suspension_railway: <code>:suspension_railway:</code></td></tr><tr><td>:mountain_cableway: <code>:mountain_cableway:</code></td><td>:tractor: <code>:tractor:</code></td><td>:blue_car: <code>:blue_car:</code></td></tr><tr><td>:oncoming_automobile: <code>:oncoming_automobile:</code></td><td>:car: <code>:car:</code></td><td>:red_car: <code>:red_car:</code></td></tr><tr><td>:taxi: <code>:taxi:</code></td><td>:oncoming_taxi: <code>:oncoming_taxi:</code></td><td>:articulated_lorry: <code>:articulated_lorry:</code></td></tr><tr><td>:bus: <code>:bus:</code></td><td>:oncoming_bus: <code>:oncoming_bus:</code></td><td>:rotating_light: <code>:rotating_light:</code></td></tr><tr><td>:police_car: <code>:police_car:</code></td><td>:oncoming_police_car: <code>:oncoming_police_car:</code></td><td>:fire_engine: <code>:fire_engine:</code></td></tr><tr><td>:ambulance: <code>:ambulance:</code></td><td>:minibus: <code>:minibus:</code></td><td>:truck: <code>:truck:</code></td></tr><tr><td>:train: <code>:train:</code></td><td>:station: <code>:station:</code></td><td>:train2: <code>:train2:</code></td></tr><tr><td>:bullettrain_front: <code>:bullettrain_front:</code></td><td>:bullettrain_side: <code>:bullettrain_side:</code></td><td>:light_rail: <code>:light_rail:</code></td></tr><tr><td>:monorail: <code>:monorail:</code></td><td>:railway_car: <code>:railway_car:</code></td><td>:trolleybus: <code>:trolleybus:</code></td></tr><tr><td>:ticket: <code>:ticket:</code></td><td>:fuelpump: <code>:fuelpump:</code></td><td>:vertical_traffic_light: <code>:vertical_traffic_light:</code></td></tr><tr><td>:traffic_light: <code>:traffic_light:</code></td><td>:warning: <code>:warning:</code></td><td>:construction: <code>:construction:</code></td></tr><tr><td>:beginner: <code>:beginner:</code></td><td>:atm: <code>:atm:</code></td><td>:slot_machine: <code>:slot_machine:</code></td></tr><tr><td>:busstop: <code>:busstop:</code></td><td>:barber: <code>:barber:</code></td><td>:hotsprings: <code>:hotsprings:</code></td></tr><tr><td>:checkered_flag: <code>:checkered_flag:</code></td><td>:crossed_flags: <code>:crossed_flags:</code></td><td>:izakaya_lantern: <code>:izakaya_lantern:</code></td></tr><tr><td>:moyai: <code>:moyai:</code></td><td>:circus_tent: <code>:circus_tent:</code></td><td>:performing_arts: <code>:performing_arts:</code></td></tr><tr><td>:round_pushpin: <code>:round_pushpin:</code></td><td>:triangular_flag_on_post: <code>:triangular_flag_on_post:</code></td><td>:jp: <code>:jp:</code></td></tr><tr><td>:kr: <code>:kr:</code></td><td>:cn: <code>:cn:</code></td><td>:us: <code>:us:</code></td></tr><tr><td>:fr: <code>:fr:</code></td><td>:es: <code>:es:</code></td><td>:it: <code>:it:</code></td></tr><tr><td>:ru: <code>:ru:</code></td><td>:gb: <code>:gb:</code></td><td>:uk: <code>:uk:</code></td></tr><tr><td>:de: <code>:de:</code></td><td></td><td></td></tr></tbody></table><h3 id="Symbols"><a href="#Symbols" class="headerlink" title="Symbols"></a>Symbols</h3><table><thead><tr><th>:one: <code>:one:</code></th><th>:two: <code>:two:</code></th><th>:three: <code>:three:</code></th></tr></thead><tbody><tr><td>:four: <code>:four:</code></td><td>:five: <code>:five:</code></td><td>:six: <code>:six:</code></td></tr><tr><td>:seven: <code>:seven:</code></td><td>:eight: <code>:eight:</code></td><td>:nine: <code>:nine:</code></td></tr><tr><td>:keycap_ten: <code>:keycap_ten:</code></td><td>:1234: <code>:1234:</code></td><td>:zero: <code>:zero:</code></td></tr><tr><td>:hash: <code>:hash:</code></td><td>:symbols: <code>:symbols:</code></td><td>:arrow_backward: <code>:arrow_backward:</code></td></tr><tr><td>:arrow_down: <code>:arrow_down:</code></td><td>:arrow_forward: <code>:arrow_forward:</code></td><td>:arrow_left: <code>:arrow_left:</code></td></tr><tr><td>:capital_abcd: <code>:capital_abcd:</code></td><td>:abcd: <code>:abcd:</code></td><td>:abc: <code>:abc:</code></td></tr><tr><td>:arrow_lower_left: <code>:arrow_lower_left:</code></td><td>:arrow_lower_right: <code>:arrow_lower_right:</code></td><td>:arrow_right: <code>:arrow_right:</code></td></tr><tr><td>:arrow_up: <code>:arrow_up:</code></td><td>:arrow_upper_left: <code>:arrow_upper_left:</code></td><td>:arrow_upper_right: <code>:arrow_upper_right:</code></td></tr><tr><td>:arrow_double_down: <code>:arrow_double_down:</code></td><td>:arrow_double_up: <code>:arrow_double_up:</code></td><td>:arrow_down_small: <code>:arrow_down_small:</code></td></tr><tr><td>:arrow_heading_down: <code>:arrow_heading_down:</code></td><td>:arrow_heading_up: <code>:arrow_heading_up:</code></td><td>:leftwards_arrow_with_hook: <code>:leftwards_arrow_with_hook:</code></td></tr><tr><td>:arrow_right_hook: <code>:arrow_right_hook:</code></td><td>:left_right_arrow: <code>:left_right_arrow:</code></td><td>:arrow_up_down: <code>:arrow_up_down:</code></td></tr><tr><td>:arrow_up_small: <code>:arrow_up_small:</code></td><td>:arrows_clockwise: <code>:arrows_clockwise:</code></td><td>:arrows_counterclockwise: <code>:arrows_counterclockwise:</code></td></tr><tr><td>:rewind: <code>:rewind:</code></td><td>:fast_forward: <code>:fast_forward:</code></td><td>:information_source: <code>:information_source:</code></td></tr><tr><td>:ok: <code>:ok:</code></td><td>:twisted_rightwards_arrows: <code>:twisted_rightwards_arrows:</code></td><td>:repeat: <code>:repeat:</code></td></tr><tr><td>:repeat_one: <code>:repeat_one:</code></td><td>:new: <code>:new:</code></td><td>:top: <code>:top:</code></td></tr><tr><td>:up: <code>:up:</code></td><td>:cool: <code>:cool:</code></td><td>:free: <code>:free:</code></td></tr><tr><td>:ng: <code>:ng:</code></td><td>:cinema: <code>:cinema:</code></td><td>:koko: <code>:koko:</code></td></tr><tr><td>:signal_strength: <code>:signal_strength:</code></td><td>:u5272: <code>:u5272:</code></td><td>:u5408: <code>:u5408:</code></td></tr><tr><td>:u55b6: <code>:u55b6:</code></td><td>:u6307: <code>:u6307:</code></td><td>:u6708: <code>:u6708:</code></td></tr><tr><td>:u6709: <code>:u6709:</code></td><td>:u6e80: <code>:u6e80:</code></td><td>:u7121: <code>:u7121:</code></td></tr><tr><td>:u7533: <code>:u7533:</code></td><td>:u7a7a: <code>:u7a7a:</code></td><td>:u7981: <code>:u7981:</code></td></tr><tr><td>:sa: <code>:sa:</code></td><td>:restroom: <code>:restroom:</code></td><td>:mens: <code>:mens:</code></td></tr><tr><td>:womens: <code>:womens:</code></td><td>:baby_symbol: <code>:baby_symbol:</code></td><td>:no_smoking: <code>:no_smoking:</code></td></tr><tr><td>:parking: <code>:parking:</code></td><td>:wheelchair: <code>:wheelchair:</code></td><td>:metro: <code>:metro:</code></td></tr><tr><td>:baggage_claim: <code>:baggage_claim:</code></td><td>:accept: <code>:accept:</code></td><td>:wc: <code>:wc:</code></td></tr><tr><td>:potable_water: <code>:potable_water:</code></td><td>:put_litter_in_its_place: <code>:put_litter_in_its_place:</code></td><td>:secret: <code>:secret:</code></td></tr><tr><td>:congratulations: <code>:congratulations:</code></td><td>:m: <code>:m:</code></td><td>:passport_control: <code>:passport_control:</code></td></tr><tr><td>:left_luggage: <code>:left_luggage:</code></td><td>:customs: <code>:customs:</code></td><td>:ideograph_advantage: <code>:ideograph_advantage:</code></td></tr><tr><td>:cl: <code>:cl:</code></td><td>:sos: <code>:sos:</code></td><td>:id: <code>:id:</code></td></tr><tr><td>:no_entry_sign: <code>:no_entry_sign:</code></td><td>:underage: <code>:underage:</code></td><td>:no_mobile_phones: <code>:no_mobile_phones:</code></td></tr><tr><td>:do_not_litter: <code>:do_not_litter:</code></td><td>:non-potable_water: <code>:non-potable_water:</code></td><td>:no_bicycles: <code>:no_bicycles:</code></td></tr><tr><td>:no_pedestrians: <code>:no_pedestrians:</code></td><td>:children_crossing: <code>:children_crossing:</code></td><td>:no_entry: <code>:no_entry:</code></td></tr><tr><td>:eight_spoked_asterisk: <code>:eight_spoked_asterisk:</code></td><td>:eight_pointed_black_star: <code>:eight_pointed_black_star:</code></td><td>:heart_decoration: <code>:heart_decoration:</code></td></tr><tr><td>:vs: <code>:vs:</code></td><td>:vibration_mode: <code>:vibration_mode:</code></td><td>:mobile_phone_off: <code>:mobile_phone_off:</code></td></tr><tr><td>:chart: <code>:chart:</code></td><td>:currency_exchange: <code>:currency_exchange:</code></td><td>:aries: <code>:aries:</code></td></tr><tr><td>:taurus: <code>:taurus:</code></td><td>:gemini: <code>:gemini:</code></td><td>:cancer: <code>:cancer:</code></td></tr><tr><td>:leo: <code>:leo:</code></td><td>:virgo: <code>:virgo:</code></td><td>:libra: <code>:libra:</code></td></tr><tr><td>:scorpius: <code>:scorpius:</code></td><td>:sagittarius: <code>:sagittarius:</code></td><td>:capricorn: <code>:capricorn:</code></td></tr><tr><td>:aquarius: <code>:aquarius:</code></td><td>:pisces: <code>:pisces:</code></td><td>:ophiuchus: <code>:ophiuchus:</code></td></tr><tr><td>:six_pointed_star: <code>:six_pointed_star:</code></td><td>:negative_squared_cross_mark: <code>:negative_squared_cross_mark:</code></td><td>:a: <code>:a:</code></td></tr><tr><td>:b: <code>:b:</code></td><td>:ab: <code>:ab:</code></td><td>:o2: <code>:o2:</code></td></tr><tr><td>:diamond_shape_with_a_dot_inside: <code>:diamond_shape_with_a_dot_inside:</code></td><td>:recycle: <code>:recycle:</code></td><td>:end: <code>:end:</code></td></tr><tr><td>:on: <code>:on:</code></td><td>:soon: <code>:soon:</code></td><td>:clock1: <code>:clock1:</code></td></tr><tr><td>:clock130: <code>:clock130:</code></td><td>:clock10: <code>:clock10:</code></td><td>:clock1030: <code>:clock1030:</code></td></tr><tr><td>:clock11: <code>:clock11:</code></td><td>:clock1130: <code>:clock1130:</code></td><td>:clock12: <code>:clock12:</code></td></tr><tr><td>:clock1230: <code>:clock1230:</code></td><td>:clock2: <code>:clock2:</code></td><td>:clock230: <code>:clock230:</code></td></tr><tr><td>:clock3: <code>:clock3:</code></td><td>:clock330: <code>:clock330:</code></td><td>:clock4: <code>:clock4:</code></td></tr><tr><td>:clock430: <code>:clock430:</code></td><td>:clock5: <code>:clock5:</code></td><td>:clock530: <code>:clock530:</code></td></tr><tr><td>:clock6: <code>:clock6:</code></td><td>:clock630: <code>:clock630:</code></td><td>:clock7: <code>:clock7:</code></td></tr><tr><td>:clock730: <code>:clock730:</code></td><td>:clock8: <code>:clock8:</code></td><td>:clock830: <code>:clock830:</code></td></tr><tr><td>:clock9: <code>:clock9:</code></td><td>:clock930: <code>:clock930:</code></td><td>:heavy_dollar_sign: <code>:heavy_dollar_sign:</code></td></tr><tr><td>:copyright: <code>:copyright:</code></td><td>:registered: <code>:registered:</code></td><td>:tm: <code>:tm:</code></td></tr><tr><td>:x: <code>:x:</code></td><td>:heavy_exclamation_mark: <code>:heavy_exclamation_mark:</code></td><td>:bangbang: <code>:bangbang:</code></td></tr><tr><td>:interrobang: <code>:interrobang:</code></td><td>:o: <code>:o:</code></td><td>:heavy_multiplication_x: <code>:heavy_multiplication_x:</code></td></tr><tr><td>:heavy_plus_sign: <code>:heavy_plus_sign:</code></td><td>:heavy_minus_sign: <code>:heavy_minus_sign:</code></td><td>:heavy_division_sign: <code>:heavy_division_sign:</code></td></tr><tr><td>:white_flower: <code>:white_flower:</code></td><td>:100: <code>:100:</code></td><td>:heavy_check_mark: <code>:heavy_check_mark:</code></td></tr><tr><td>:ballot_box_with_check: <code>:ballot_box_with_check:</code></td><td>:radio_button: <code>:radio_button:</code></td><td>:link: <code>:link:</code></td></tr><tr><td>:curly_loop: <code>:curly_loop:</code></td><td>:wavy_dash: <code>:wavy_dash:</code></td><td>:part_alternation_mark: <code>:part_alternation_mark:</code></td></tr><tr><td>:trident: <code>:trident:</code></td><td>:black_square: <code>:black_square:</code></td><td>:white_square: <code>:white_square:</code></td></tr><tr><td>:white_check_mark: <code>:white_check_mark:</code></td><td>:black_square_button: <code>:black_square_button:</code></td><td>:white_square_button: <code>:white_square_button:</code></td></tr><tr><td>:black_circle: <code>:black_circle:</code></td><td>:white_circle: <code>:white_circle:</code></td><td>:red_circle: <code>:red_circle:</code></td></tr><tr><td>:large_blue_circle: <code>:large_blue_circle:</code></td><td>:large_blue_diamond: <code>:large_blue_diamond:</code></td><td>:large_orange_diamond: <code>:large_orange_diamond:</code></td></tr><tr><td>:small_blue_diamond: <code>:small_blue_diamond:</code></td><td>:small_orange_diamond: <code>:small_orange_diamond:</code></td><td>:small_red_triangle: <code>:small_red_triangle:</code></td></tr><tr><td>:small_red_triangle_down: <code>:small_red_triangle_down:</code></td><td>:shipit: <code>:shipit:</code></td><td></td></tr></tbody></table><p>[^1]: 来源 <a href="https://github.com/caiyongji/emoji-list">emoji-list</a></p>]]></content>
    
    
    <summary type="html">GitHub 上的 emoji，commit 的时候喜欢前面加个 emoji 但又不怎么习惯用 Desktop 版，之后搬到博客上，方便查阅</summary>
    
    
    
    
    <category term="others" scheme="http://ecalose.github.io/tags/others/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://ecalose.github.io/posts/55323.html"/>
    <id>http://ecalose.github.io/posts/55323.html</id>
    <published>2020-04-15T04:24:36.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>这是一道 ST 表经典题——静态区间最大值</p><!--more--><p><strong>请注意最大数据时限只有 0.8s，数据强度不低，请务必保证你的每次查询复杂度为 $O(1)$。若使用更高时间复杂度算法不保证能通过。</strong></p><p>如果您认为您的代码时间复杂度正确但是 TLE，可以尝试使用快速读入：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个长度为 $N$ 的数列，和 $M$ 次询问，求出每一次询问的区间内数字的最大值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 $N, M$ ，分别表示数列的长度和询问的个数。</p><p>第二行包含 $N$ 个整数（记为 $a_i$），依次表示数列的第 $i$ 项。</p><p>接下来 $M$ 行，每行包含两个整数 $l_i, r_i$，表示查询的区间为 $[l_i, r_i]$</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含 $M$ 行，每行一个整数，依次表示每一次询问的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">8 8</span><br><span class="line">9 3 1 7 5 6 0 8</span><br><span class="line">1 6</span><br><span class="line">1 5</span><br><span class="line">2 7</span><br><span class="line">2 6</span><br><span class="line">1 8</span><br><span class="line">4 8</span><br><span class="line">3 7</span><br><span class="line">1 8</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">9</span><br><span class="line">7</span><br><span class="line">7</span><br><span class="line">9</span><br><span class="line">8</span><br><span class="line">7</span><br><span class="line">9</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于 $30%$ 的数据，满足：$1 \leq N, M \leq 10$</p><p>对于 $70%$ 的数据，满足：$1 \leq N, M \leq {10}^5$</p><p>对于 $100%$ 的数据，满足： $1 \leq N \leq {10}^5, 1 \leq M \leq 2 \times {10}^6, a_i \in [0, {10}^9], 1 \leq l_i \leq r_i \leq N$</p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>ST 表是用于解决 $RMQ$ 问题的数据结构<br>$RMQ$ ，英文 $Range Maximum/Minimum Query$ 的缩写，即区间最大（最小）值</p><p>解决 $RMQ$ 问题有很多种方法，比如：<del>线段树，笛卡尔树</del>，然鹅这些高级的树我都不会啊啊啊，只好用 ST 表了</p><p>ST 表基于==倍增==思想，可以做到 $O(n logn)$  的预处理，  $O(1)$ 的查询，但是不支持修改操作。</p><p>我们用 $MAX_{i,j}$ 表示从 $a_i$ 开始 $2^j$ 个数的最大值，比如 $MAX_{1,0}$ 表示 $a_1$，$MAX_{1,1}$ 表示 $max(a_1,a_2)$</p><p>可以看看图片的例子，竖着看，看完一列再看下一列，应该就能理解了（B 站上一个视频里的，个人感觉思想讲的挺好的，可以看完再去 luogu 上看看题解的代码）<a href="https://www.bilibili.com/video/BV1pE411u7Gq?t=762">视频链接</a></p><p><img src="https://cos.royce2003.top/55323/01.webp-default" alt="思路"></p><p>最后查询的时候将查询区间分成两段，比如查询 $1\sim7$ ，那就分成 $1\sim4$， $4\sim7$</p><p>$$<br>t = log_2(right - left + 1)\<br>4=r-2^t+1<br>$$</p><p>最后，$MAX[i][j]$ 中，$j = log_2n$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max std::max <span class="comment">//骚一下...</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, MAX[maxn][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>; <span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>; x += ch - <span class="string">&#x27;0&#x27;</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> flag ? - x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        MAX[i][<span class="number">0</span>] = read();</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> maxLog = (<span class="keyword">int</span>)log2(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=maxLog; j++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>; i++)</span><br><span class="line">            MAX[i][j] = max(MAX[i][j<span class="number">-1</span>],MAX[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = log2(r - l + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max(MAX[l][t], MAX[r-(<span class="number">1</span>&lt;&lt;t)+<span class="number">1</span>][t]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ST();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> l = read(), r = read();</span><br><span class="line">        Query(l, r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="P2251"><a href="#P2251" class="headerlink" title="P2251"></a>P2251</h3><p>然后再<del>水</del>一题 <a href="https://www.luogu.com.cn/problem/P2251">P2251 质量检测</a><br>题目大意基本相同，不过这里是求 $min$<br>查询区间依次是$1\sim m$, $2\sim m+1$, $3\sim m+2$ …</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> min std::min <span class="comment">//倔强</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, MIN[maxn][<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>; <span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>; x += ch - <span class="string">&#x27;0&#x27;</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> flag ? - x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> maxLog = (<span class="keyword">int</span>)log2(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        MIN[i][<span class="number">0</span>] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=maxLog; j++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>; i++)</span><br><span class="line">            MIN[i][j] = min(MIN[i][j<span class="number">-1</span>],MIN[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ST();</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> Log2 = log2(m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n-m+<span class="number">1</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, min(MIN[i][Log2], MIN[i+m-(<span class="number">1</span>&lt;&lt;Log2)][Log2]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3865">P3865 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">一道 ST 表经典题——静态区间最大值</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Fluid 暗黑模式</title>
    <link href="http://ecalose.github.io/posts/41212.html"/>
    <id>http://ecalose.github.io/posts/41212.html</id>
    <published>2020-04-02T10:04:57.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>大概花了一个晚上搞暗黑模式，之后几天陆续优化了下<br>目前博客已经基本上适配完成了<br>目前是三种方案（优先级递减）</p><ol><li>媒体查询</li><li>定时开启</li><li>localStorage/sessionStorage 查询<!--more--><code>媒体查询</code>，判断系统是否处于暗黑模式，支持大部分系统<br>Win10 需要浏览器开启深色模式<br>Android 同理，需要浏览器支持手机开启夜间模式的时候将自身切换到神色模式，目前 Chrome 支持，Edge 不支持，其他没测<br>iOS、MacOS 上的 Safari 也支持</li></ol><p><code>定时开启</code>，在规定时间自动开启，如果在该时间段内取消了暗黑模式，能一直保持</p><p><code>localStorage/sessionStorage 查询</code>，能一直保持某一个模式的依赖</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>在 <code>\themes\fluid\layout\layout.ejs</code> 中找到 <code>&lt;body&gt;</code>，在其之后加入如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dark&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switchDarkMode()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> isNight = <span class="keyword">new</span> <span class="built_in">Date</span>().getHours() &gt;= <span class="number">22</span> || <span class="keyword">new</span> <span class="built_in">Date</span>().getHours() &lt; <span class="number">7</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span>( matchMedia(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>).matches || isNight || <span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;dark&#x27;</span>) === <span class="string">&#x27;1&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(!(isNight&amp;&amp;<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;noDark&#x27;</span>) === <span class="string">&#x27;1&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.body.classList.add(<span class="string">&#x27;dark&#x27;</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;dark&#x27;</span>).innerHTML = <span class="built_in">document</span>.querySelector(<span class="string">&quot;body&quot;</span>).classList.contains(<span class="string">&quot;dark&quot;</span>)?<span class="string">&quot;🌙&quot;</span>:<span class="string">&quot;🌞&quot;</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__danger"><div class="blockquote-note__content"><p>注意！一定紧跟在 <code>body</code> 标签之后，否则会出现闪烁</p></div></blockquote><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>然后随便找个 JS 把下面代码加进去，直接加到 <code>&lt;/body&gt;</code> 之前也行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击事件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switchDarkMode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ($(<span class="string">&#x27;body&#x27;</span>).hasClass(<span class="string">&#x27;dark&#x27;</span>)) &#123;</span><br><span class="line">    $(<span class="string">&quot;#dark&quot;</span>).html(<span class="string">&quot;🌞&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.classList.remove(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;noDark&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;dark&#x27;</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $(<span class="string">&quot;#dark&quot;</span>).html(<span class="string">&quot;🌙&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.classList.add(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;dark&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;noDark&#x27;</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>在自定义 CSS 中加入代码</p><blockquote class="blockquote-note blockquote-note__primary"><div class="blockquote-note__content"><p>可以用 <code>stylus</code>，能少些写<br>但是引入时记得后缀还是 <code>.css</code> 不要变</p></div></blockquote><p>下面是我的样式代码，基本覆盖所有内容，根据自身情况修改</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 切换按钮 */</span></span><br><span class="line">#dark</span><br><span class="line">  <span class="attribute">cursor</span> pointer</span><br><span class="line">  <span class="attribute">position</span> fixed</span><br><span class="line">  <span class="attribute">right</span> <span class="number">40px</span></span><br><span class="line">  <span class="attribute">bottom</span> <span class="number">98px</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">16px</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">14px</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">100</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*暗黑模式*/</span></span><br><span class="line">.dark</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 主体 */</span></span><br><span class="line">  #board</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#282c34</span></span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line">  </span><br><span class="line">  <span class="selector-tag">img</span>  </span><br><span class="line">    <span class="attribute">filter</span> brightness(<span class="number">50%</span>)</span><br><span class="line"></span><br><span class="line">  p</span><br><span class="line">  <span class="selector-class">.index-info</span> <span class="selector-tag">a</span>  </span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span> !important</span><br><span class="line"></span><br><span class="line">  .markdown-body</span><br><span class="line">    <span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,s,<span class="selector-tag">li</span>  </span><br><span class="line">      <span class="attribute">color</span>:<span class="number">#a09c9c</span> !important</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 顶栏 */</span></span><br><span class="line">  .navbar-col-show</span><br><span class="line">  <span class="selector-class">.top-nav-collapse</span>  </span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#282c34</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.navbar</span> a</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span> !important</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.animated-icon</span> <span class="selector-tag">span</span>   <span class="comment">/* 手机端 */</span></span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#a09c9c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* page-number */</span></span><br><span class="line">  <span class="selector-class">.pagination</span> <span class="selector-tag">a</span>:hover</span><br><span class="line">  <span class="selector-class">.pagination</span> <span class="selector-class">.current</span>  </span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#6b6b6b</span>73;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 打字机 */</span></span><br><span class="line">  #subtitle</span><br><span class="line">  <span class="selector-class">.dark</span>.typed-<span class="attribute">cursor</span>--blink</span><br><span class="line">  .scroll-down-arrow</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#dfdfdf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* back to top */</span></span><br><span class="line">  #scroll-<span class="attribute">top</span>-button</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#282c34</span></span><br><span class="line"></span><br><span class="line">    i</span><br><span class="line">      <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Toc */</span></span><br><span class="line">  <span class="selector-class">.tocbot-list</span> a</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line"></span><br><span class="line">  .tocbot-active-link</span><br><span class="line">  <span class="selector-tag">footer</span> <span class="selector-tag">a</span>:hover</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#1abc9c</span> !important</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* footer */</span></span><br><span class="line">  footer</span><br><span class="line">  <span class="selector-tag">footer</span> a</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 归档页 */</span></span><br><span class="line">  .list-group-item</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#282c34</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.list-group-item</span>:hover</span><br><span class="line">  <span class="selector-class">.tagcloud</span> <span class="selector-tag">a</span>:hover</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#46484d</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 友链页 */</span></span><br><span class="line">  .links</span><br><span class="line">    <span class="selector-class">.card</span>  </span><br><span class="line">      <span class="attribute">background-color</span> <span class="number">#282c34</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.card-body</span>:hover  </span><br><span class="line">      <span class="attribute">background-color</span> <span class="number">#46484d</span></span><br><span class="line"></span><br><span class="line">    .link-title</span><br><span class="line">    <span class="selector-class">.link-intro</span>  </span><br><span class="line">      <span class="attribute">color</span> <span class="number">#a09c9c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* note标签 可能这配色有点丑 */</span></span><br><span class="line">  .note-info</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#3b5359</span></span><br><span class="line">    <span class="attribute">border-color</span> <span class="number">#006d80</span></span><br><span class="line"></span><br><span class="line">  .note-danger</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#783f42</span></span><br><span class="line">    <span class="attribute">border-color</span> <span class="number">#670009</span></span><br><span class="line"></span><br><span class="line">  .note-success</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#2a3e2e</span></span><br><span class="line">    <span class="attribute">border-color</span> <span class="number">#005915</span></span><br><span class="line"></span><br><span class="line">  .note-warning</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#5b543e</span></span><br><span class="line">    <span class="attribute">border-color</span> <span class="number">#846500</span></span><br><span class="line"></span><br><span class="line">  .note-primary</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#455a6f</span></span><br><span class="line">    <span class="attribute">border-color</span> <span class="number">#004188</span></span><br></pre></td></tr></table></figure><h3 id="localStorage-还是-sessionStorage"><a href="#localStorage-还是-sessionStorage" class="headerlink" title="localStorage 还是 sessionStorage"></a>localStorage 还是 sessionStorage</h3><p>仔细观察刚刚的 js 代码，在其中用的是 localStorage<br>除了 localStorage，你还可以用 sessionStorage<br>两者的区别也非常简单</p><blockquote><p>localStorage：除非被手动清除，否则将会永久保存。<br>sessionStorage： 仅在当前网页会话下有效，关闭页面或浏览器后就会被清除。</p></blockquote><p>举个简单例子，如果现在是白天（即没有触发夜间自动开启暗黑模式）<br>你手动点击切换成了暗黑模式，当你关闭当前网页再次进入时<br>如果你用的是 localStorage，那么此时就还是暗黑模式<br>而如果你用的是 sessionStorage，此时就不是暗黑模式了</p><p>两者的使用方法相同<br>直接替换就可以了</p><p>感谢 <span class="label label-success"> <a href=https://crosschannel.cc>@track13</a></span> 建议</p><blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__content"><p>sessionStorage 在手机浏览器上问题很多，不推荐使用</p></div></blockquote><p>下面是支持该特性的最低版本<br><img src="https://cos.royce2003.top/41212/01.webp-default" alt="支持情况"></p><p>可以在浏览器控制台中查看他们的值<br><img src="https://cos.royce2003.top/41212/02.webp-default" alt="查看"></p><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html">面向小白的Hexo添加暗色模式教程 | 宅日记</a></li></ol>]]></content>
    
    
    <summary type="html">适用于 Hexo 的暗黑模式，目前博客已经基本上适配完成了</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
    <category term="CSS" scheme="http://ecalose.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Fluid 瞎折腾</title>
    <link href="http://ecalose.github.io/posts/60394.html"/>
    <id>http://ecalose.github.io/posts/60394.html</id>
    <published>2020-04-01T04:20:51.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div>📄 更新日志</div><div class="blockquote-note__content"><p>2020.04.10 新增超好看的复选框<br>2020.04.13 更新动态背景代码<br>2020.04.28 自定义返回顶部图片和球形标签云</p></div></blockquote><blockquote class="blockquote-note blockquote-note__warning"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></div>🚨 注意</div><div class="blockquote-note__content"><p>随着主题的更新，文中的代码可能失效或引起错误，请自行修改</p></div></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>好像还没有看到大佬写关于 Fluid 折腾的文章，就开了这个坑<br>文章放了源码进来，所以挺长的，大部分是改 CSS，JS 很少<br>首先，按照 Fluid 配置文件中的方法，新建自定义 CSS 和 JS<br>对于自定义 css，建议新建 <code>custom.styl</code>，接下来的代码基本都是 styl 的，直接放入 css 文件中无法使用</p><p>如果你还不知道什么是 stylus，有兴趣的话可以看看这篇文章 <a href="https://juejin.im/post/5bbd7a7c6fb9a05cfd27f4c6">『前端干货篇』：你不知道的Stylus</a></p><blockquote class="blockquote-note blockquote-note__important"><div class="blockquote-note__content"><p>新建的是 <code>styl</code>，配置文件中也填 <code>.css</code></p></div></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_js:</span> <span class="string">/js/custom.js</span> <span class="comment"># 指定自定义 js 文件路径，路径是相对 source 目录，如 /js/custom.js</span></span><br><span class="line"><span class="attr">custom_css:</span> <span class="string">/css/custom.css</span> <span class="comment"># 指定自定义 css 文件路径，路径是相对 source 目录，如 /css/custom.css</span></span><br><span class="line"><span class="attr">custom_html:</span> <span class="string">&#x27;&#x27;</span>  <span class="comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span></span><br></pre></td></tr></table></figure><h3 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h3><p>[^1]</p><p>效果见 <a href="https://a9m5yn.coding-pages.com/">演示站点</a></p><p>自定义 CSS 中加入如下代码</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">.slideshow</span><br><span class="line">  <span class="attribute">position</span>: fixed; </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>; </span><br><span class="line"></span><br><span class="line">  .slideshow-image</span><br><span class="line">    <span class="attribute">position</span>: fixed; </span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">100%</span>; </span><br><span class="line">    <span class="attribute">background</span>: repeat <span class="number">50%</span> <span class="number">50%</span>; </span><br><span class="line">    <span class="attribute">animation-name</span>: kenburns;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">24s</span>; <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);</span><br><span class="line">    <span class="attribute">filter</span>: brightness(<span class="number">70%</span>) //背景遮罩，<span class="number">100%</span> 正常，<span class="number">0%</span> 完全黑色</span><br><span class="line"></span><br><span class="line">    &amp;:nth-child(<span class="number">1</span>)&#123;-webkit-<span class="attribute">animation-name</span>: kenburns-<span class="number">1</span>; <span class="attribute">animation-name</span>: kenburns-<span class="number">1</span>; <span class="attribute">z-index</span>: -<span class="number">2</span>;&#125;</span><br><span class="line">    &amp;:nth-child(<span class="number">2</span>)&#123;-webkit-<span class="attribute">animation-name</span>: kenburns-<span class="number">2</span>; <span class="attribute">animation-name</span>: kenburns-<span class="number">2</span>; <span class="attribute">z-index</span>: -<span class="number">3</span>;&#125;</span><br><span class="line">    &amp;:nth-child(<span class="number">3</span>)&#123;-webkit-<span class="attribute">animation-name</span>: kenburns-<span class="number">3</span>; <span class="attribute">animation-name</span>: kenburns-<span class="number">3</span>; <span class="attribute">z-index</span>: -<span class="number">4</span>;&#125;</span><br><span class="line">    &amp;:nth-child(<span class="number">4</span>)&#123;-webkit-<span class="attribute">animation-name</span>: kenburns-<span class="number">4</span>; <span class="attribute">animation-name</span>: kenburns-<span class="number">4</span>; <span class="attribute">z-index</span>: -<span class="number">5</span>;&#125;</span><br><span class="line"></span><br><span class="line">@keyframes kenburns-<span class="number">1</span>&#123;<span class="number">0%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125; <span class="number">1.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">23.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">26.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1</span>); <span class="attribute">transform</span>: scale(<span class="number">1</span>);&#125; <span class="number">100%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125; <span class="number">98.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.21176</span>); <span class="attribute">transform</span>: scale(<span class="number">1.21176</span>);&#125; <span class="number">100%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125;&#125;</span><br><span class="line">@keyframes kenburns-<span class="number">2</span>&#123;<span class="number">23.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125; <span class="number">26.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">48.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">51.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1</span>); <span class="attribute">transform</span>: scale(<span class="number">1</span>);&#125; <span class="number">100%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125;&#125;</span><br><span class="line">@keyframes kenburns-<span class="number">3</span>&#123;<span class="number">48.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125; <span class="number">51.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">73.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">76.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1</span>); <span class="attribute">transform</span>: scale(<span class="number">1</span>);&#125; <span class="number">100%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125;&#125;</span><br><span class="line">@keyframes kenburns-<span class="number">4</span>&#123;<span class="number">73.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1.2</span>); <span class="attribute">transform</span>: scale(<span class="number">1.2</span>);&#125; <span class="number">76.5625%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">98.4375%</span>&#123;<span class="attribute">opacity</span>: <span class="number">1</span>;&#125; <span class="number">100%</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>; -webkit-<span class="attribute">transform</span>: scale(<span class="number">1</span>); <span class="attribute">transform</span>: scale(<span class="number">1</span>);&#125;&#125;</span><br></pre></td></tr></table></figure><p>接着在 <code>themes\fluid\layout\layout.ejs</code> 中 <code>&lt;body&gt;</code> 后加入如下代码<br><code>background-image: url</code> 中填入图片链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slideshow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slideshow-image&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-image: url(&#x27;1&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slideshow-image&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-image: url(&#x27;2&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slideshow-image&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-image: url(&#x27;3&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slideshow-image&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-image: url(&#x27;4&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后取消原本头图的获取<br>用最简单的方法，直接删去获取头图的代码，保留标签</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  &lt;header style=&quot;height: &lt;%- banner_img_height %&gt;vh;&quot;&gt;</span><br><span class="line">    &lt;%- partial(&#x27;_partial/nav&#x27;) %&gt; </span><br><span class="line"><span class="deletion">-    &lt;div class=&quot;view intro-2&quot; id=&quot;background&quot; &lt;%- theme.banner_parallax &amp;&amp; &#x27;parallax=true&#x27; %&gt;</span></span><br><span class="line"><span class="deletion">-      style=&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center;</span></span><br><span class="line"><span class="deletion">-        background-size: cover;&quot;&gt;</span></span><br><span class="line"><span class="addition">+    &lt;div class=&quot;view intro-2&quot; id=&quot;background&quot;&gt;</span></span><br><span class="line">      &lt;div class=&quot;full-bg-img&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;mask flex-center&quot;&gt;</span><br></pre></td></tr></table></figure><p>将主题配置中<span class="label label-danger">所有</span>头图的黑色蒙版设为 0</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">banner_mask_alpha:</span> <span class="number">0</span>  <span class="comment"># 头图黑色蒙版的透明度，available: 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明</span></span><br></pre></td></tr></table></figure><p>如果出现背景跟随滚动，请在配置文件中关闭头图滚动视差</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">banner_parallax:</span> <span class="literal">false</span> <span class="comment"># 头图滚动视差</span></span><br></pre></td></tr></table></figure><p>因为是依赖 <code>z-index</code> 实现的切换，建议图片大小递增排序，避免第一张图还没加载出来，第二张图先出现的情况</p><h3 id="侧边滚动条"><a href="#侧边滚动条" class="headerlink" title="侧边滚动条"></a>侧边滚动条</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span></span><br><span class="line">  <span class="selector-tag">display</span> <span class="selector-tag">none</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar</span></span><br><span class="line">  <span class="selector-tag">width</span> 10<span class="selector-tag">px</span></span><br><span class="line">  <span class="selector-tag">height</span> 10<span class="selector-tag">px</span></span><br><span class="line">  <span class="selector-tag">background-color</span>: <span class="selector-id">#2f415452</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span></span><br><span class="line">  <span class="selector-tag">border-radius</span> 5<span class="selector-tag">px</span></span><br><span class="line">  <span class="selector-tag">background-color</span> <span class="selector-id">#2f4154</span></span><br><span class="line">  <span class="selector-tag">background-image</span> <span class="selector-tag">-webkit-linear-gradient</span>(45<span class="selector-tag">deg</span>,<span class="selector-tag">rgba</span>(255,255,255,<span class="selector-class">.2</span>) 25%,<span class="selector-tag">transparent</span> 25%,<span class="selector-tag">transparent</span> 50%,<span class="selector-tag">rgba</span>(255,255,255,<span class="selector-class">.2</span>) 50%,<span class="selector-tag">rgba</span>(255,255,255,<span class="selector-class">.2</span>) 75%,<span class="selector-tag">transparent</span> 75%,<span class="selector-tag">transparent</span>)</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span></span><br><span class="line">    <span class="selector-tag">background-color</span> <span class="selector-id">#2f4154b8</span>;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-note blockquote-note__important"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10.219,1.688c-4.471,0-8.094,3.623-8.094,8.094s3.623,8.094,8.094,8.094s8.094-3.623,8.094-8.094S14.689,1.688,10.219,1.688 M10.219,17.022c-3.994,0-7.242-3.247-7.242-7.241c0-3.994,3.248-7.242,7.242-7.242c3.994,0,7.241,3.248,7.241,7.242C17.46,13.775,14.213,17.022,10.219,17.022 M15.099,7.03c-0.167-0.167-0.438-0.167-0.604,0.002L9.062,12.48l-2.269-2.277c-0.166-0.167-0.437-0.167-0.603,0c-0.166,0.166-0.168,0.437-0.002,0.603l2.573,2.578c0.079,0.08,0.188,0.125,0.3,0.125s0.222-0.045,0.303-0.125l5.736-5.751C15.268,7.466,15.265,7.196,15.099,7.03"></path></svg></div>注意</div><div class="blockquote-note__content"><p>会同时对所有滚动条生效</p></div></blockquote><h3 id="返回顶部按钮"><a href="#返回顶部按钮" class="headerlink" title="返回顶部按钮"></a>返回顶部按钮</h3><p>增加动画</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#scroll-top-button</span> </span><br><span class="line">  <span class="selector-tag">border-radius</span> 25<span class="selector-tag">px</span></span><br><span class="line">  <span class="selector-tag">-webkit-transition</span> <span class="selector-tag">all</span> <span class="selector-class">.6s</span></span><br><span class="line">  <span class="selector-tag">-moz-transition</span> <span class="selector-tag">all</span> <span class="selector-class">.6s</span></span><br><span class="line">  <span class="selector-tag">-o-transition</span> <span class="selector-tag">all</span> <span class="selector-class">.6s</span></span><br><span class="line">  <span class="selector-tag">transition</span> <span class="selector-tag">all</span> <span class="selector-class">.6s</span></span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> </span><br><span class="line">    <span class="selector-tag">transform</span> <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>)</span><br><span class="line">    <span class="selector-tag">border-radius</span> 20%</span><br></pre></td></tr></table></figure><p>或者来试试这个样式</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/20200305084052.png"></p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>自定义 CSS 加入下方代码</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#scroll-<span class="attribute">top</span>-button</span><br><span class="line">  <span class="attribute">right</span> <span class="number">50px</span> !important</span><br><span class="line">  <span class="attribute">width</span> <span class="number">70px</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">651px</span></span><br><span class="line">  <span class="attribute">top</span> -<span class="number">90px</span></span><br><span class="line">  <span class="attribute">background</span> url(<span class="string">&quot;/img/scroll.png&quot;</span>); <span class="comment">/* 图片路径 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="comment">/* 去除外边框的阴影 */</span></span><br><span class="line"></span><br><span class="line">  &amp; &gt; i</span><br><span class="line">    <span class="attribute">display</span> none <span class="comment">/* 隐藏一个小箭头图标，否则会在图片上出现箭头 */</span></span><br></pre></td></tr></table></figure><p>最后附上图片地址</p><a class="btn" href="https://cdn.jsdelivr.net/gh/Royce2019/img/img/scroll.png"  target="_blank">点我下载</a><p>（图源网，侵删）</p><h3 id="标题前-Emoji"><a href="#标题前-Emoji" class="headerlink" title="标题前 Emoji"></a>标题前 Emoji</h3><p>[^2]</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 想在手机端也显示，去除最外层的 @media，并更改缩进 */</span></span><br><span class="line">@media (<span class="attribute">min-width</span>:<span class="number">768px</span>) </span><br><span class="line">  <span class="selector-class">.post-content</span> </span><br><span class="line">    <span class="selector-tag">h1</span>::before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot;🌈&quot;</span>;</span><br><span class="line">      <span class="attribute">visibility</span>: visible;</span><br><span class="line">      <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="selector-tag">h2</span>::before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot;🚀&quot;</span>;</span><br><span class="line">      <span class="attribute">visibility</span>: visible;</span><br><span class="line">      <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="selector-tag">h3</span>::before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot;🔍&quot;</span>;</span><br><span class="line">      <span class="attribute">visibility</span>: visible;</span><br><span class="line">      <span class="attribute">display</span>: inline;</span><br></pre></td></tr></table></figure><h3 id="首页图片动画"><a href="#首页图片动画" class="headerlink" title="首页图片动画"></a>首页图片动画</h3><p>鼠标触碰放大</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.index-img</span></span><br><span class="line">  <span class="selector-tag">transition</span>: <span class="selector-class">.4s</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.index-card</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.index-img</span></span><br><span class="line">  <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.1</span>);</span><br><span class="line">  <span class="selector-tag">box-shadow</span>: 0 5<span class="selector-tag">px</span> 11<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.38</span>), 0 4<span class="selector-tag">px</span> 15<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.35</span>);</span><br></pre></td></tr></table></figure><h3 id="底部及-TOC-样式更改"><a href="#底部及-TOC-样式更改" class="headerlink" title="底部及 TOC 样式更改"></a>底部及 TOC 样式更改</h3><p>因为之前的动态背景添加了遮罩导致底部链接等看不起</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tocbot-list</span> a</span><br><span class="line"><span class="selector-id">#toc</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">footer</span> a</span><br><span class="line">  <span class="attribute">color</span> <span class="number">#ffffff</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">a</span>:hover</span><br><span class="line">.tocbot-active-link</span><br><span class="line">  <span class="attribute">color</span> <span class="number">#1abc9c</span> !important</span><br></pre></td></tr></table></figure><h3 id="标题文字特效"><a href="#标题文字特效" class="headerlink" title="标题文字特效"></a>标题文字特效</h3><p><img src="https://cos.royce2003.top/60394/01.webp-default" alt="演示"></p><p>文字触碰动画（源网，找不到原站链接了）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 注意避免类名相同造成样式冲突 */</span></span><br><span class="line"><span class="selector-class">.link</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#9e9ba4</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.link--kukuri</span> &#123;</span><br><span class="line">  <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2f4144</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link--kukuri</span>:hover &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2f4144</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link--kukuri</span>::after &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">42%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#F9F9F9</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: translate3d(-<span class="number">100%</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transform</span>: translate3d(-<span class="number">100%</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: -webkit-transform <span class="number">0.4s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.4s</span>;</span><br><span class="line">  -webkit-<span class="attribute">transition-timing-function</span>: cubic-bezier(<span class="number">0.7</span>,<span class="number">0</span>,<span class="number">0.3</span>,<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">transition-timing-function</span>: cubic-bezier(<span class="number">0.7</span>,<span class="number">0</span>,<span class="number">0.3</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link--kukuri</span>:hover::after &#123;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: translate3d(<span class="number">100%</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transform</span>: translate3d(<span class="number">100%</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link--kukuri</span>::before &#123;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">0px</span> solid;</span><br><span class="line">  <span class="attribute">content</span>: attr(data-letters);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff779a</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0%</span>;</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: width <span class="number">0.4s</span> <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">0.4s</span> <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link--kukuri</span>:hover::before &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在你想显示的地方插入如下 HTML</p><blockquote class="blockquote-note blockquote-note__important"><div class="blockquote-note__header"><div class="blockquote-note__icon"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10.219,1.688c-4.471,0-8.094,3.623-8.094,8.094s3.623,8.094,8.094,8.094s8.094-3.623,8.094-8.094S14.689,1.688,10.219,1.688 M10.219,17.022c-3.994,0-7.242-3.247-7.242-7.241c0-3.994,3.248-7.242,7.242-7.242c3.994,0,7.241,3.248,7.241,7.242C17.46,13.775,14.213,17.022,10.219,17.022 M15.099,7.03c-0.167-0.167-0.438-0.167-0.604,0.002L9.062,12.48l-2.269-2.277c-0.166-0.167-0.437-0.167-0.603,0c-0.166,0.166-0.168,0.437-0.002,0.603l2.573,2.578c0.079,0.08,0.188,0.125,0.3,0.125s0.222-0.045,0.303-0.125l5.736-5.751C15.268,7.466,15.265,7.196,15.099,7.03"></path></svg></div>注意</div><div class="blockquote-note__content"><p>data-letters 中需要和内容保持一致<br>不用 a 标签也可以，保证类名正确</p></div></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;link link--kukuri&quot;</span> <span class="attr">href</span>=<span class="string">&quot;test.test&quot;</span> <span class="attr">data-letters</span>=<span class="string">&quot;test&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h3><p>在 <code>themes\hexo-theme-fluid-master\layout\</code> 中新建 <code>messageboard.ejs</code> 文件<br>先写上头图之类的设定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">page.layout</span> = <span class="string">&quot;messageboard&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">page.title</span> = <span class="string">theme.messageboard.title</span> || <span class="attr">__</span>(&#x27;<span class="attr">messageboard.title</span>&#x27;)</span></span><br><span class="line"><span class="tag"><span class="attr">page.subtitle</span> = <span class="string">theme.messageboard.subtitle</span> || <span class="attr">__</span>(&#x27;<span class="attr">messageboard.subtitle</span>&#x27;)</span></span><br><span class="line"><span class="tag"><span class="attr">page.banner_img</span> = <span class="string">theme.messageboard.banner_img</span></span></span><br><span class="line"><span class="tag"><span class="attr">page.banner_img_height</span> = <span class="string">theme.messageboard.banner_img_height</span></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br></pre></td></tr></table></figure><p>然后在配置文件中加入相应内容，当然，你也可以直接在上面的代码中指定</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---------------------------</span></span><br><span class="line"><span class="comment"># 留言板页</span></span><br><span class="line"><span class="comment"># Messageboard Page</span></span><br><span class="line"><span class="comment">#---------------------------</span></span><br><span class="line"><span class="attr">messageboard:</span></span><br><span class="line">  <span class="attr">banner_img:</span> <span class="comment"># 头图</span></span><br><span class="line">  <span class="attr">banner_img_height:</span>  <span class="comment"># available: 0 - 100</span></span><br><span class="line">  <span class="attr">subtitle:</span>  <span class="comment"># 打字机内容</span></span><br></pre></td></tr></table></figure><p>语言文件中也是一样的，这里就不写了</p><h4 id="引入评论"><a href="#引入评论" class="headerlink" title="引入评论"></a>引入评论</h4><p>刚刚创建的 ejs 文件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Comments --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container comments mx-auto&quot;</span> <span class="attr">id</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.post.comments.enable</span>) &#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">var</span> <span class="attr">type</span> = <span class="string">&#x27;_partial/comments/&#x27;</span> + <span class="attr">theme.post.comments.type</span> %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>(<span class="attr">type</span>) %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自定义内容写在评论代码之前就好了，支持 HTML</p><p>然后两种方法开启，二选一即可</p><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>在根目录的 <code>source</code> 文件夹中创建 <code>messageboard.md</code><br>并在 <code>front-matter</code> 中加上 <code>layout: messageboard</code><br>和 about 界面的方法一样</p><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>在 <code>themes\fluid\scripts\pages.js</code> 文件中加入如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// generate messageboard page</span></span><br><span class="line">hexo.extend.generator.register(<span class="string">&#x27;_messageboard&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    path: <span class="string">&#x27;messageboard/index.html&#x27;</span>,</span><br><span class="line">    data: locals.theme,</span><br><span class="line">    layout: <span class="string">&#x27;messageboard&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="更好看的音乐播放器"><a href="#更好看的音乐播放器" class="headerlink" title="更好看的音乐播放器"></a>更好看的音乐播放器</h3><p>[^3]</p><p>本身的 aplayer 个人觉得并不是很好看，而且是全局的<br>换了给好看点的播放器，在指定页面加载<br>需要加载的页面加入</p><p><img src="https://cos.royce2003.top/60394/02.webp-default"></p><h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><p>自定义 js 里加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dr = $(<span class="string">&quot;#dowebok&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!dr.length &gt; <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    dr.append(<span class="string">&quot;&lt;div id=\&quot;player\&quot;&gt;&lt;div id=\&quot;player-track\&quot;&gt;&lt;div id=\&quot;album-name\&quot;&gt;&lt;/div&gt;&lt;div id=\&quot;track-name\&quot;&gt;&lt;/div&gt;&lt;div id=\&quot;track-time\&quot;&gt;&lt;div id=\&quot;current-time\&quot;&gt;&lt;/div&gt;&lt;div id=\&quot;track-length\&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\&quot;s-area\&quot;&gt;&lt;div id=\&quot;ins-time\&quot;&gt;&lt;/div&gt;&lt;div id=\&quot;s-hover\&quot;&gt;&lt;/div&gt;&lt;div id=\&quot;seek-bar\&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\&quot;player-content\&quot;&gt;&lt;div id=\&quot;album-art\&quot;&gt;&lt;img src=\&quot;images/1.jpg\&quot; class=\&quot;active\&quot; id=\&quot;album-pic\&quot;&gt;&lt;div id=\&quot;buffer-box\&quot;&gt;加载中...&lt;/div&gt;&lt;/div&gt;&lt;div id=\&quot;player-controls\&quot;&gt;&lt;div class=\&quot;control\&quot;&gt;&lt;div class=\&quot;player-button\&quot; id=\&quot;play-previous\&quot;&gt;&lt;i class=\&quot;fas fa-backward\&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\&quot;control\&quot;&gt;&lt;div class=\&quot;player-button\&quot; id=\&quot;play-pause-button\&quot;&gt;&lt;i class=\&quot;fas fa-play\&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\&quot;control\&quot;&gt;&lt;div class=\&quot;player-button\&quot; id=\&quot;play-next\&quot;&gt;&lt;i class=\&quot;fas fa-forward\&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> playerTrack = $(<span class="string">&quot;#player-track&quot;</span>),</span><br><span class="line">        albumName = $(<span class="string">&#x27;#album-name&#x27;</span>),</span><br><span class="line">        trackName = $(<span class="string">&#x27;#track-name&#x27;</span>),</span><br><span class="line">        albumArt = $(<span class="string">&#x27;#album-art&#x27;</span>),</span><br><span class="line">        sArea = $(<span class="string">&#x27;#s-area&#x27;</span>),</span><br><span class="line">        seekBar = $(<span class="string">&#x27;#seek-bar&#x27;</span>),</span><br><span class="line">        trackTime = $(<span class="string">&#x27;#track-time&#x27;</span>),</span><br><span class="line">        insTime = $(<span class="string">&#x27;#ins-time&#x27;</span>),</span><br><span class="line">        sHover = $(<span class="string">&#x27;#s-hover&#x27;</span>),</span><br><span class="line">        playPauseButton = $(<span class="string">&quot;#play-pause-button&quot;</span>),</span><br><span class="line">        i = playPauseButton.find(<span class="string">&#x27;i&#x27;</span>),</span><br><span class="line">        tProgress = $(<span class="string">&#x27;#current-time&#x27;</span>),</span><br><span class="line">        tTime = $(<span class="string">&#x27;#track-length&#x27;</span>),</span><br><span class="line">        seekT, seekLoc, seekBarPos, cM, ctMinutes, ctSeconds, curMinutes, curSeconds, durMinutes, durSeconds, playProgress, bTime, nTime = <span class="number">0</span>,</span><br><span class="line">        buffInterval = <span class="literal">null</span>,</span><br><span class="line">        tFlag = <span class="literal">false</span>,</span><br><span class="line">        playPreviousTrackButton = $(<span class="string">&#x27;#play-previous&#x27;</span>),</span><br><span class="line">        playNextTrackButton = $(<span class="string">&#x27;#play-next&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">playPause</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (audio.paused) &#123;</span><br><span class="line">                playerTrack.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                albumArt.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                checkBuffering();</span><br><span class="line">                i.attr(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;fas fa-pause&#x27;</span>);</span><br><span class="line">                audio.play();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                playerTrack.removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                albumArt.removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                <span class="built_in">clearInterval</span>(buffInterval);</span><br><span class="line">                albumArt.removeClass(<span class="string">&#x27;buffering&#x27;</span>);</span><br><span class="line">                i.attr(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;fas fa-play&#x27;</span>);</span><br><span class="line">                audio.pause();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showHover</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        seekBarPos = sArea.offset();</span><br><span class="line">        seekT = event.clientX - seekBarPos.left;</span><br><span class="line">        seekLoc = audio.duration * (seekT / sArea.outerWidth());</span><br><span class="line">        sHover.width(seekT);</span><br><span class="line">        cM = seekLoc / <span class="number">60</span>;</span><br><span class="line">        ctMinutes = <span class="built_in">Math</span>.floor(cM);</span><br><span class="line">        ctSeconds = <span class="built_in">Math</span>.floor(seekLoc - ctMinutes * <span class="number">60</span>);</span><br><span class="line">        <span class="keyword">if</span> ((ctMinutes &lt; <span class="number">0</span>) || (ctSeconds &lt; <span class="number">0</span>)) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ctMinutes &lt; <span class="number">10</span>) ctMinutes = <span class="string">&#x27;0&#x27;</span> + ctMinutes;</span><br><span class="line">        <span class="keyword">if</span> (ctSeconds &lt; <span class="number">10</span>) ctSeconds = <span class="string">&#x27;0&#x27;</span> + ctSeconds;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(ctMinutes) || <span class="built_in">isNaN</span>(ctSeconds)) insTime.text(<span class="string">&#x27;--:--&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> insTime.text(ctMinutes + <span class="string">&#x27;:&#x27;</span> + ctSeconds);</span><br><span class="line">        insTime.css(&#123;</span><br><span class="line">            <span class="string">&#x27;left&#x27;</span>: seekT,</span><br><span class="line">            <span class="string">&#x27;margin-left&#x27;</span>: <span class="string">&#x27;-21px&#x27;</span></span><br><span class="line">        &#125;).fadeIn(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hideHover</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        sHover.width(<span class="number">0</span>);</span><br><span class="line">        insTime.text(<span class="string">&#x27;00:00&#x27;</span>).css(&#123;</span><br><span class="line">            <span class="string">&#x27;left&#x27;</span>: <span class="string">&#x27;0px&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;margin-left&#x27;</span>: <span class="string">&#x27;0px&#x27;</span></span><br><span class="line">        &#125;).fadeOut(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">playFromClickedPos</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        audio.currentTime = seekLoc;</span><br><span class="line">        seekBar.width(seekT);</span><br><span class="line">        hideHover();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">updateCurrTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        nTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        nTime = nTime.getTime();</span><br><span class="line">        <span class="keyword">if</span> (!tFlag) &#123;</span><br><span class="line">            tFlag = <span class="literal">true</span>;</span><br><span class="line">            trackTime.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        curMinutes = <span class="built_in">Math</span>.floor(audio.currentTime / <span class="number">60</span>);</span><br><span class="line">        curSeconds = <span class="built_in">Math</span>.floor(audio.currentTime - curMinutes * <span class="number">60</span>);</span><br><span class="line">        durMinutes = <span class="built_in">Math</span>.floor(audio.duration / <span class="number">60</span>);</span><br><span class="line">        durSeconds = <span class="built_in">Math</span>.floor(audio.duration - durMinutes * <span class="number">60</span>);</span><br><span class="line">        playProgress = (audio.currentTime / audio.duration) * <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (curMinutes &lt; <span class="number">10</span>) curMinutes = <span class="string">&#x27;0&#x27;</span> + curMinutes;</span><br><span class="line">        <span class="keyword">if</span> (curSeconds &lt; <span class="number">10</span>) curSeconds = <span class="string">&#x27;0&#x27;</span> + curSeconds;</span><br><span class="line">        <span class="keyword">if</span> (durMinutes &lt; <span class="number">10</span>) durMinutes = <span class="string">&#x27;0&#x27;</span> + durMinutes;</span><br><span class="line">        <span class="keyword">if</span> (durSeconds &lt; <span class="number">10</span>) durSeconds = <span class="string">&#x27;0&#x27;</span> + durSeconds;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(curMinutes) || <span class="built_in">isNaN</span>(curSeconds)) tProgress.text(<span class="string">&#x27;00:00&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> tProgress.text(curMinutes + <span class="string">&#x27;:&#x27;</span> + curSeconds);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(durMinutes) || <span class="built_in">isNaN</span>(durSeconds)) tTime.text(<span class="string">&#x27;00:00&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> tTime.text(durMinutes + <span class="string">&#x27;:&#x27;</span> + durSeconds);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(curMinutes) || <span class="built_in">isNaN</span>(curSeconds) || <span class="built_in">isNaN</span>(durMinutes) || <span class="built_in">isNaN</span>(durSeconds)) trackTime.removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> trackTime.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">        seekBar.width(playProgress + <span class="string">&#x27;%&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (playProgress == <span class="number">100</span>) &#123;</span><br><span class="line">            i.attr(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;fa fa-play&#x27;</span>);</span><br><span class="line">            seekBar.width(<span class="number">0</span>);</span><br><span class="line">            tProgress.text(<span class="string">&#x27;00:00&#x27;</span>);</span><br><span class="line">            albumArt.removeClass(<span class="string">&#x27;buffering&#x27;</span>).removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">            <span class="built_in">clearInterval</span>(buffInterval);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkBuffering</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(buffInterval);</span><br><span class="line">        buffInterval = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ((nTime == <span class="number">0</span>) || (bTime - nTime) &gt; <span class="number">1000</span>) albumArt.addClass(<span class="string">&#x27;buffering&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> albumArt.removeClass(<span class="string">&#x27;buffering&#x27;</span>);</span><br><span class="line">            bTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            bTime = bTime.getTime();</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">selectTrack2</span>(<span class="params">flag</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//歌单api调用 https://api.uomg.com/doc-rand.music.html</span></span><br><span class="line">        $.getJSON(<span class="string">&#x27;https://api.uomg.com/api/rand.music?&#x27;</span>, &#123;</span><br><span class="line">            sort: <span class="string">&quot;热歌榜&quot;</span>, <span class="comment">//选择输出分类[热歌榜|新歌榜|飙升榜|抖音榜|电音榜]，为空输出热歌榜</span></span><br><span class="line">            <span class="comment">// mid: 12345,歌单 id</span></span><br><span class="line">            <span class="comment">// sort mid 二选一</span></span><br><span class="line">            format: <span class="string">&#x27;json&#x27;</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">json, textStatus</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (json.code == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (flag == <span class="number">0</span>) i.attr(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;fa fa-play&#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    albumArt.removeClass(<span class="string">&#x27;buffering&#x27;</span>);</span><br><span class="line">                    i.attr(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;fa fa-pause&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                seekBar.width(<span class="number">0</span>);</span><br><span class="line">                trackTime.removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                tProgress.text(<span class="string">&#x27;00:00&#x27;</span>);</span><br><span class="line">                tTime.text(<span class="string">&#x27;00:00&#x27;</span>);</span><br><span class="line">                currAlbum = json.data.artistsname;</span><br><span class="line">                currTrackName = json.data.name;</span><br><span class="line">                currArtwork = json.data.picurl;</span><br><span class="line">                audio.src = json.data.url;</span><br><span class="line">                nTime = <span class="number">0</span>;</span><br><span class="line">                bTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                bTime = bTime.getTime();</span><br><span class="line">                <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">                    audio.play();</span><br><span class="line">                    playerTrack.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                    albumArt.addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                    <span class="built_in">clearInterval</span>(buffInterval);</span><br><span class="line">                    checkBuffering();</span><br><span class="line">                &#125;</span><br><span class="line">                albumName.text(currAlbum);</span><br><span class="line">                trackName.text(currTrackName);</span><br><span class="line">                albumArt.find(<span class="string">&#x27;img.active&#x27;</span>).removeClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                $(<span class="string">&#x27;#album-pic&#x27;</span>).addClass(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                $(<span class="string">&#x27;#album-pic&#x27;</span>).attr(<span class="string">&#x27;src&#x27;</span>,currArtwork);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">initPlayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        audio = <span class="keyword">new</span> Audio();</span><br><span class="line">        selectTrack2(<span class="number">1</span>); <span class="comment">//非0自动播放</span></span><br><span class="line">        audio.loop = <span class="literal">false</span>;</span><br><span class="line">        playPauseButton.on(<span class="string">&#x27;click&#x27;</span>, playPause);</span><br><span class="line">        sArea.mousemove(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            showHover(event);</span><br><span class="line">        &#125;);</span><br><span class="line">        sArea.mouseout(hideHover);</span><br><span class="line">        sArea.on(<span class="string">&#x27;click&#x27;</span>, playFromClickedPos);</span><br><span class="line">        $(audio).on(<span class="string">&#x27;timeupdate&#x27;</span>, updateCurrTime);</span><br><span class="line">        playPreviousTrackButton.on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            selectTrack2(<span class="number">-1</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        playNextTrackButton.on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            selectTrack2(<span class="number">1</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    initPlayer();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS"></a>CSS</h4><p>自定义 CSS 中加入</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line">#dowebok</span><br><span class="line">  <span class="attribute">right</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">430px</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">100px</span></span><br><span class="line">  <span class="attribute">margin</span> <span class="number">100px</span> auto <span class="number">100px</span></span><br><span class="line"></span><br><span class="line">#player</span><br><span class="line">  <span class="attribute">position</span> relative</span><br><span class="line">  <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">#player-track</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">right</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">13px</span> <span class="number">22px</span> <span class="number">10px</span> <span class="number">184px</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#fff7f7</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.3s</span> ease top</span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  &amp;.active</span><br><span class="line">    <span class="attribute">top</span> -<span class="number">80px</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#album-name</span> </span><br><span class="line">  <span class="attribute">color</span> <span class="number">#54576f</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">17px</span></span><br><span class="line">  <span class="attribute">font-weight</span> bold</span><br><span class="line"></span><br><span class="line">#track-name</span><br><span class="line">  <span class="attribute">color</span> <span class="number">#acaebd</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">11px</span></span><br><span class="line">  <span class="attribute">white-space</span>: nowrap; </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>; </span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line"></span><br><span class="line">#track-time</span><br><span class="line">  <span class="attribute">height</span> <span class="number">12px</span></span><br><span class="line">  <span class="attribute">margin-bottom</span> <span class="number">3px</span></span><br><span class="line"></span><br><span class="line">  &amp;.active</span><br><span class="line">    <span class="selector-id">#current-time</span>, #track-length</span><br><span class="line">      <span class="attribute">color</span> <span class="number">#f86d92</span>;</span><br><span class="line">      <span class="attribute">background-color</span> transparent</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#current-time</span> </span><br><span class="line">  <span class="attribute">float</span> left</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#track-length</span> </span><br><span class="line">  <span class="attribute">float</span> right</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#current-time</span>,</span><br><span class="line">#track-length</span><br><span class="line">  <span class="attribute">color</span> transparent</span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">11px</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#ffe8ee</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">10px</span></span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.3s</span> ease all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#s-area</span>,</span><br><span class="line">#seek-bar</span><br><span class="line">  <span class="attribute">position</span> relative</span><br><span class="line">  <span class="attribute">height</span> <span class="number">4px</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">#s-area</span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#ffe8ee</span></span><br><span class="line">  <span class="attribute">cursor</span> pointer</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#ins-time</span> </span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> -<span class="number">29px</span></span><br><span class="line">  <span class="attribute">color</span> <span class="number">#fff</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">12px</span></span><br><span class="line">  <span class="attribute">white-space</span> pre</span><br><span class="line">  <span class="attribute">padding</span> <span class="number">5px</span> <span class="number">6px</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">4px</span></span><br><span class="line">  <span class="attribute">display</span> none;</span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#3b3d50</span></span><br><span class="line"></span><br><span class="line">#s-hover</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">opacity</span> <span class="number">0.2</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#3b3d50</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#seek-bar</span><br><span class="line">  <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#fd6d94</span></span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.2s</span> ease width</span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">#player-<span class="attribute">content</span></span><br><span class="line">  <span class="attribute">position</span> relative</span><br><span class="line">  <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#fff</span></span><br><span class="line">  <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">30px</span> <span class="number">80px</span> <span class="number">#656565</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">15px</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">#album-art</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> -<span class="number">40px</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">115px</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">115px</span></span><br><span class="line">  <span class="attribute">margin-left</span> <span class="number">40px</span></span><br><span class="line">  -webkit-<span class="attribute">transform</span> rotateZ(<span class="number">0</span>)</span><br><span class="line">  <span class="attribute">transform</span> rotateZ(<span class="number">0</span>)</span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.3s</span> ease all</span><br><span class="line">  <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#fff</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line"></span><br><span class="line">  .buffering</span><br><span class="line">    #buffer-box</span><br><span class="line">      <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    img</span><br><span class="line">      <span class="attribute">opacity</span> <span class="number">0.25</span></span><br><span class="line"></span><br><span class="line">      .active</span><br><span class="line">        <span class="attribute">opacity</span> <span class="number">0.8</span></span><br><span class="line">        <span class="attribute">filter</span> blur(<span class="number">2px</span>)</span><br><span class="line">        -webkit-<span class="attribute">filter</span> blur(<span class="number">2px</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">img</span> </span><br><span class="line">    <span class="attribute">display</span> block;</span><br><span class="line">    <span class="attribute">position</span> absolute;</span><br><span class="line">    <span class="attribute">top</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span> <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transition</span> <span class="number">0.1s</span> linear all</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-class">.active</span> </span><br><span class="line">      <span class="attribute">opacity</span> <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">z-index</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.active</span> </span><br><span class="line">    <span class="attribute">top</span> -<span class="number">60px</span></span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">#fff7f7</span>, <span class="number">0</span> <span class="number">30px</span> <span class="number">50px</span> -<span class="number">15px</span> <span class="number">#afb7c1</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">img</span><span class="selector-class">.active</span> </span><br><span class="line">      <span class="attribute">z-index</span> <span class="number">1</span>;</span><br><span class="line">      -webkit-<span class="attribute">animation</span> rotateAlbumArt <span class="number">3s</span> linear <span class="number">0s</span> infinite forwards;</span><br><span class="line">      <span class="attribute">animation</span> rotateAlbumArt <span class="number">3s</span> linear <span class="number">0s</span> infinite forwards;</span><br><span class="line"></span><br><span class="line">  &amp;::before </span><br><span class="line">    <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="attribute">position</span> absolute</span><br><span class="line">    <span class="attribute">top</span> <span class="number">50%</span></span><br><span class="line">    <span class="attribute">right</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">20px</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">20px</span></span><br><span class="line">    <span class="attribute">margin</span> -<span class="number">10px</span> auto <span class="number">0</span> auto</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#d6dee7</span></span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">    <span class="attribute">box-shadow</span> inset <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="number">#fff</span></span><br><span class="line">    <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">@-webkit-keyframes rotateAlbumArt</span><br><span class="line">  <span class="number">0%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span>: rotateZ(<span class="number">0</span>)</span><br><span class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">0</span>)</span><br><span class="line">  <span class="number">100%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>)</span><br><span class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>)</span><br><span class="line">@keyframes rotateAlbumArt</span><br><span class="line">  <span class="number">0%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span>: rotateZ(<span class="number">0</span>)</span><br><span class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">0</span>)</span><br><span class="line">  <span class="number">100%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>)</span><br><span class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>)</span><br><span class="line"></span><br><span class="line">#buffer-box</span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">top</span> <span class="number">50%</span></span><br><span class="line">  <span class="attribute">right</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">13px</span></span><br><span class="line">  <span class="attribute">color</span> <span class="number">#1f1f1f</span></span><br><span class="line">  <span class="attribute">font-size</span> <span class="number">13px</span></span><br><span class="line">  <span class="attribute">font-family</span> Helvetica</span><br><span class="line">  <span class="attribute">text-align</span> center</span><br><span class="line">  <span class="attribute">font-weight</span> bold</span><br><span class="line">  <span class="attribute">line-height</span> <span class="number">1</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">6px</span></span><br><span class="line">  <span class="attribute">margin</span> -<span class="number">12px</span> auto <span class="number">0</span> auto</span><br><span class="line">  <span class="attribute">background-color</span> rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.19</span>)</span><br><span class="line">  <span class="attribute">opacity</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.1s</span> linear all</span><br><span class="line"></span><br><span class="line">#player-controls</span><br><span class="line">  <span class="attribute">width</span> <span class="number">250px</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">  <span class="attribute">margin</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">141px</span></span><br><span class="line">  <span class="attribute">float</span> right</span><br><span class="line">  <span class="attribute">overflow</span> hidden</span><br><span class="line"></span><br><span class="line">.control</span><br><span class="line">  <span class="attribute">width</span> <span class="number">33.333%</span></span><br><span class="line">  <span class="attribute">float</span> left</span><br><span class="line">  <span class="attribute">padding</span> <span class="number">12px</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">.player-button</span><br><span class="line">  <span class="attribute">padding</span> <span class="number">25px</span></span><br><span class="line">  <span class="attribute">background-color</span> <span class="number">#fff</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">6px</span></span><br><span class="line">  <span class="attribute">cursor</span> pointer</span><br><span class="line">  <span class="attribute">transition</span> <span class="number">0.2s</span> ease all</span><br><span class="line"></span><br><span class="line">  i</span><br><span class="line">    <span class="attribute">display</span> block</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#d6dee7</span></span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">26px</span></span><br><span class="line">    <span class="attribute">text-align</span> center</span><br><span class="line">    <span class="attribute">line-height</span> <span class="number">1</span></span><br><span class="line">    <span class="attribute">transition</span> <span class="number">0.2s</span> ease all</span><br><span class="line"></span><br><span class="line">  &amp;:hover</span><br><span class="line">    <span class="attribute">background-color</span> <span class="number">#d6d6de</span></span><br><span class="line"></span><br><span class="line">    i</span><br><span class="line">      <span class="attribute">color</span> <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">@media (<span class="attribute">max-width</span>:<span class="number">768px</span>)</span><br><span class="line">  #dowebok</span><br><span class="line">    <span class="attribute">width</span> <span class="number">95%</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">20vw</span></span><br><span class="line"></span><br><span class="line">  #player-controls</span><br><span class="line">    <span class="attribute">width</span> <span class="number">175px</span></span><br><span class="line"></span><br><span class="line">  .player-button</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">    i</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      <span class="attribute">background-color</span> <span class="number">#000</span>0</span><br><span class="line"></span><br><span class="line">      i</span><br><span class="line">        <span class="attribute">color</span> <span class="number">#d6dee7</span></span><br><span class="line"></span><br><span class="line">  #album-art</span><br><span class="line">    <span class="attribute">width</span> <span class="number">30%</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">30%</span></span><br><span class="line"></span><br><span class="line">  #album-name</span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">15px</span></span><br><span class="line"></span><br><span class="line">  #track-name</span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">10px</span></span><br></pre></td></tr></table></figure><p>上方的 css 可在 JS 中引进去，或者在需要的界面加进去<br>不建议加到全局，毕竟不是所有界面都需要（其实影响也不是很大）</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>需要加载的页面（md 或者 ejs）中加入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dowebok&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可能会出现遮挡问题，自己通过 <code>&lt;br&gt;</code> 调整就好了</p><p>js 和 css，源自<a href="https://www.yanghuaxing.com/blog/547.html">链接</a><br>稍作修改，手机端适配我可能没怎么写好 <del>(就那么几行能适配完美才怪)</del><br>暗黑模式也没适配这个<br>音乐来源见 js 代码块的 114、115 行，可选自己的网易歌单或者热歌榜等排行榜</p><p>直接把源码部署到一个地方拿来代替用也非常不错，毕竟很好看，再用 Edge 安装在电脑上，嘻嘻嘻</p><h3 id="可交互复选框"><a href="#可交互复选框" class="headerlink" title="可交互复选框"></a>可交互复选框</h3><p>[^4]</p><p>已 PR 至主题，可前往主题更新并通过 Tag 标签使用<br>但主题只内置了方形选框，下方新增</p><div><input type="radio" disabled="" checked=""><p>圆形选框</p></div><div><input type="checkbox" disabled="" checked=""><p>方形选框</p></div><div><input type="checkbox" class="red" disabled="" checked=""><p>可选颜色</p></div><p>下方只介绍 HTML 用法<br>自定义 CSS 中添加以下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span></span><br><span class="line">  <span class="selector-tag">-webkit-appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">-moz-appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">-ms-appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">-o-appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">  <span class="selector-tag">right</span>: 0;</span><br><span class="line">  <span class="selector-tag">bottom</span>: 0;</span><br><span class="line">  <span class="selector-tag">left</span>: 0;</span><br><span class="line">  <span class="selector-tag">height</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">width</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">transition</span><span class="selector-pseudo">:all</span> <span class="selector-class">.15s</span> <span class="selector-tag">ease-out</span> 0<span class="selector-tag">s</span>;</span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">  <span class="selector-tag">cursor</span>: <span class="selector-tag">pointer</span>;</span><br><span class="line">  <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>;</span><br><span class="line">  <span class="selector-tag">margin</span>: <span class="selector-class">.4rem</span> <span class="selector-class">.2rem</span> <span class="selector-class">.4rem</span> !<span class="selector-tag">important</span>;</span><br><span class="line">  <span class="selector-tag">outline</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  <span class="selector-tag">border-radius</span>: 10%;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Checkbox */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span></span><br><span class="line">  <span class="selector-tag">vertical-align</span>: <span class="selector-tag">-0</span><span class="selector-class">.65rem</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span>, &amp;<span class="selector-pseudo">:after</span></span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">    <span class="selector-tag">content</span>: &quot;&quot;;</span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.2s</span> <span class="selector-tag">ease-in-out</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">left</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">top</span>: 6<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 0;</span><br><span class="line">    <span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-webkit-transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-moz-transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-ms-transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-o-transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span></span><br><span class="line">    <span class="selector-tag">right</span>: 9<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">bottom</span>: 3<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 0;</span><br><span class="line">    <span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(40<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-webkit-transform</span>: <span class="selector-tag">rotate</span>(40<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-moz-transform</span>: <span class="selector-tag">rotate</span>(40<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-ms-transform</span>: <span class="selector-tag">rotate</span>(40<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">-o-transform</span>: <span class="selector-tag">rotate</span>(40<span class="selector-tag">deg</span>);</span><br><span class="line">    <span class="selector-tag">transition-delay</span>: <span class="selector-class">.2s</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">      <span class="selector-tag">left</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">width</span>: 6<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:after</span> </span><br><span class="line">      <span class="selector-tag">right</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">bottom</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">height</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* radio */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=radio]</span></span><br><span class="line">  <span class="selector-tag">vertical-align</span>: <span class="selector-tag">-0</span><span class="selector-class">.7rem</span>;</span><br><span class="line">  <span class="selector-tag">border-radius</span>: 50%;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">content</span>: &quot;&quot;;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">border-radius</span>: 50%;</span><br><span class="line">    <span class="selector-tag">margin</span>: <span class="selector-class">.2rem</span>;</span><br><span class="line">    <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(0);</span><br><span class="line">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-tag">ease-out</span> 250<span class="selector-tag">ms</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Colors */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#4caf50</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span>, &amp;<span class="selector-pseudo">:indeterminate</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#4caf50</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=radio]</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#4caf50</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#4caf50</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span><span class="selector-class">.blue</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#2196f3</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span>, &amp;<span class="selector-pseudo">:indeterminate</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#2196f3</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=radio]</span><span class="selector-class">.blue</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#2196f3</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#2196f3</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span><span class="selector-class">.red</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#f44336</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span>, &amp;<span class="selector-pseudo">:indeterminate</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#f44336</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=radio]</span><span class="selector-class">.red</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#f44336</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#f44336</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span><span class="selector-class">.orange</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ffc107</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span>, &amp;<span class="selector-pseudo">:indeterminate</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#ffc107</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=radio]</span><span class="selector-class">.orange</span></span><br><span class="line">  <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ffc107</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:checked</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#ffc107</span>;</span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><div><input type="checkbox" class="green" disabled=""><p>左边是 <code>type=checkbox</code></p></div><div><input type="radio" disabled=""><p>左边是 <code>type=radio</code></p></div><p>默认绿色，设置颜色，只需要加上 class 就行。<br>目前 class 有 <code>blue</code> <code>red</code> <code>orange</code>，可自行更改 CSS</p><p>默认是方形没有打勾，圆形没有选中<br>加上 chencked 就会默认选中<br>如下方代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">chencked</span>&gt;</span></span><br></pre></td></tr></table></figure><div><input type="checkbox" class="blue" disabled="" checked=""><p>左边是选中的</p></div><div><input class="red" type="radio" checked="" disabled=""><p>左边是选中的</p></div><h3 id="球形标签云"><a href="#球形标签云" class="headerlink" title="球形标签云"></a>球形标签云</h3><p>[^5]</p><p><code>hexo-tag-cloud</code> 插件是 MikeCoder 写的一个 Hexo 博客的标签云插件</p><p><img src="https://cos.royce2003.top/db44ecae/03.webp-default" alt="GIF.gif"></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-cloud@^2.1.* --save</span><br></pre></td></tr></table></figure><p>在 <code>fluid\layout\tags.ejs</code> 中加入如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">site.tags.length</span>) &#123; %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&lt;%- url_for(&#x27;/js/tagcloud.js&#x27;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&lt;%- url_for(&#x27;/js/tagcanvas.js&#x27;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">id</span>=<span class="string">&quot;resCanvas&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width=100%&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">%-</span> <span class="attr">tagcloud</span>() %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><h4 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h4><p>根目录配置文件添加如下的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-tag-cloud</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">    <span class="attr">textColor:</span> <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">    <span class="attr">textHeight:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">    <span class="attr">maxSpeed:</span> <span class="number">0.5</span></span><br></pre></td></tr></table></figure><p><code>textColor</code>: 字体颜色<br><code>textHeight</code>: 字体高度<br><code>maxSpeed</code>: 文字滚动速度</p><h3 id="代码块仿-Mac"><a href="#代码块仿-Mac" class="headerlink" title="代码块仿 Mac"></a>代码块仿 Mac</h3><p>源网</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.markdown-body</span><br><span class="line">  pre</span><br><span class="line">    <span class="attribute">padding-bottom</span> <span class="number">5px</span></span><br><span class="line"></span><br><span class="line">    code</span><br><span class="line">      padding 1rem 0 .5rem 0</span><br><span class="line"></span><br><span class="line">      &amp;::before</span><br><span class="line">        <span class="attribute">content</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">        <span class="attribute">position</span> absolute</span><br><span class="line">        <span class="attribute">background</span> <span class="number">#fc625d</span></span><br><span class="line">        <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">        <span class="attribute">box-shadow</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span></span><br><span class="line">        <span class="attribute">margin-top</span> -<span class="number">20px</span></span><br><span class="line">        <span class="attribute">left</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">12px</span></span><br></pre></td></tr></table></figure><hr><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>应该没啥可折腾的了，还有的话也不新开文章了，就这里持续更新吧，会置顶并将最近一次更新写在摘要中<br>暗黑模式下篇文章再写吧 <del>(水文章数量)</del></p><p>作者已经把主题做的非常完美了，有什么问题都会立马修复，功能也出的很快，超 nice</p><p>博客刚搭建的时候用了一个 material 主题，觉得过于平淡，换到了一个 gal 主题，功能很多<br>慢慢的又看厌了，很多人推荐 Next，就又换到了 Next，的确很好用<br>就光针对 Next 的教程数量而言，应该能算是大部分用 Hexo 的人都用过的<br>经常逛博客也发现很多都是用的这个主题，用了几个月，改了很多东西，但也慢慢看厌了</p><p>就开始再次踏上寻找主题的路，经常看到一个好看的主题，但又想到自己在 Next 上大量的自定义内容，一直不忍心丢下<br>看到 Fluid 之后超喜欢，先用 Fluid 搭建了副站，放在 Gitee 上，慢慢完善<br>完善到一定程度，有人和我说副站更好看，我看了看好像真是这么回事…<br>才下定决心开始换主题，前前后后花了一个多星期全部完成</p><p>Fluid 应该是会一直用下去了<br>不过仍有继续折腾的打算<br>可能会再用 Typecho 搭建一个玩玩…</p><p>写的不好，凑合吧<br><a href="./25976.html">面向纯小白的 CSS 教程1</a><br><a href="./17142.html">面向纯小白的 CSS 教程2</a></p><p>[^1]: 参考: <a href="https://www.51qianduan.com/article/3115.html">纯css3全屏图片背景缩小渐变式切换特效</a><br>[^2]: 参考: <a href="https://bestzuo.cn/posts/blog-establish.html">Hexo博客+Next主题深度优化与定制</a><br>[^3]: 参考: <a href="https://www.yanghuaxing.com/blog/547.html">网易云HTML5音乐随机播放器</a><br>[^4]: 参考: <a href="http://www.htmleaf.com/css3/css3donghua/201806235190.html">带点击动画特效的CSS3单选框和复选框</a><br>[^5]: 参考: <a href="https://github.com/MikeCoder/hexo-tag-cloud">MikeCoder/hexo-tag-cloud</a></p>]]></content>
    
    
    <summary type="html">06.27 更新</summary>
    
    
    
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
    <category term="CSS" scheme="http://ecalose.github.io/tags/CSS/"/>
    
    <category term="Fluid" scheme="http://ecalose.github.io/tags/Fluid/"/>
    
  </entry>
  
  <entry>
    <title>P3368 【模板】树状数组 2</title>
    <link href="http://ecalose.github.io/posts/49770.html"/>
    <id>http://ecalose.github.io/posts/49770.html</id>
    <published>2020-03-26T14:55:33.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>如题，已知一个数列，你需要进行下面两种操作：</p><ol><li>将某区间每一个数数加上 $x$；</li><li>求出某一个数的值。<a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4></li></ol><p>第一行包含两个整数 $N$、$M$，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $N$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $M$行每行包含 2 或 4 个整数，表示一个操作，具体如下：</p><p>操作 1： 格式：<code>1 x y k</code> 含义：将区间 $x,y$ 内每个数加上 $k$；</p><p>操作 2： 格式：<code>2 x</code> 含义：输出第 $x$ 个数的值。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含若干行整数，即为所有操作 2 的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 5 4 2 3</span><br><span class="line">1 2 4 2</span><br><span class="line">2 3</span><br><span class="line">1 1 5 -1</span><br><span class="line">1 3 5 7</span><br><span class="line">2 4</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">10</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><h5 id="样例-1-解释："><a href="#样例-1-解释：" class="headerlink" title="样例 1 解释："></a>样例 1 解释：</h5><p><img src="https://cos.royce2003.top/49770/01.webp-default"></p><p>故输出结果为 6、10。</p><hr><h5 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h5><p>对于 $30%$ 的数据：$N\le8,M\le10$；</p><p>对于 $70%$ 的数据：$N\le 10000,M\le10000$；</p><p>对于 $100%$ 的数据：$1 \leq N, M\le 500000$，$1 \leq x, y \leq n$，保证任意时刻序列中任意元素的绝对值都不大于 $2^{30}$。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>上一篇文章已经讲了<code>树状数组 1</code>，单点修改区间查询。树状数组 1 <a href="./759.html">文章链接</a></p><p>树状数组 2 需要实现的是区间修改，单点查询。</p><p>并且树状数组 2 要完全依赖于树状数组 1，仅在 1 的基础上引入差分数组</p><p>通过差分数组将其转换为单点修改区间查询，没错，就是树状数组 1，的单点修改区间查询</p><p>说到差分我就想到了 xzt 卖煎饼，想到 xzt 卖煎饼我就想到了暴力 $O(nm)$ 解法，想到这个解法就想到了我是多么菜鸡<img src="https://cos.royce2003.top/49770/02.webp-default" data-align="inline"></p><h4 id="前置知识-差分数组"><a href="#前置知识-差分数组" class="headerlink" title="前置知识 差分数组"></a>前置知识 差分数组</h4><p>现有一序列 $A$<br>$$<br>A={3,,1,,4,,1,,5,,9,,2,,6,,5}<br>$$<br>建立一个差分数组 $D$，使得 $D_i=A_i-A_{i-1}$<br>$$<br>D={3,;-2,,3,,-3,,4,,4,,-7,,4,,-1}<br>$$</p><p>此时将 $A$ 序列中 $A_3 \sim A_5$ 都加上 3，得到新的 $A$<br>$$<br>A={3,,1,,7,,4,,8,,9,,2,,6,,5}<br>$$<br>此时再更新 $D$ 数组<br>$$<br>D={3,,-2,,6,,-3,,4,,1,,-7,,4,,-1}<br>$$<br>不难发现，在 $A$ 序列的 $A_i \sim A_j$ 区间分别加上 $n$ ，在差分数组 $D$ 中就相当于 $D_i;+=; n,;D_{j+1};-=;n$</p><p>相信聪明的你已经发现了，这里出现了树状数组 1的单点修改</p><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>这个也就变的很简单了，利用差分数组的性质，假设我们要求 $A_3$</p><p>那么</p><p>$$<br>A_3=D_1+D_2+D_3<br>$$<br>好啦，就是这么简单</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>附上 AC 代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,x,aa,l,r;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">500110</span>],c[<span class="number">500110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> ch = getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">0</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>;x += ch-<span class="string">&#x27;0&#x27;</span>;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> flag ? x:-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (x&lt;=n) &#123;</span><br><span class="line">c[x] += k;</span><br><span class="line">x += lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x) &#123;</span><br><span class="line">sum += c[x];</span><br><span class="line">x -= lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">a[i] = read();</span><br><span class="line">add(i, a[i]-a[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line">aa = read();</span><br><span class="line"><span class="keyword">if</span> (aa==<span class="number">1</span>) &#123;</span><br><span class="line">l = read(); r = read(); k =read();</span><br><span class="line">add(l,k);</span><br><span class="line">add(r+<span class="number">1</span>,-k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">k = read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, find(k));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;如题，已知一个数列，你需要进行下面两种操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将某区间每一个数数加上 $x$；&lt;/li&gt;
&lt;li&gt;求出某一个数的值。</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>研究型学习</title>
    <link href="http://ecalose.github.io/posts/23195.html"/>
    <id>http://ecalose.github.io/posts/23195.html</id>
    <published>2020-03-26T13:35:58.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="这密码感觉不太对, 再猜猜看" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="还没完成，暂不开放，不过你有密码的话，还是可以看的" /><label>还没完成，暂不开放，不过你有密码的话，还是可以看的</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="0264ab68df0ad021ffe971ac146810ef57965efad5283e5f38cb5cab2141f88a">7b16d59b95e1bfac8fb0291500168903c233d8726fd38d44bc7fb00aee841e7b3ff1ba0a9f23485a10070327ec4df4004a40db08755a25e363c4ad73b3086f7564d5dce0ded2251f1b2b03f185ccd515e14219dc8bfc686ed4dfaa84ae668fffbe2922387a76f4fbb8dddf366c133c7bb859708856ecf099674b87925bb504e605cef044fcc756f0ae270ba21268120c9d67f5d805d783105170f5a7fbc702c464ee40899263c40a6d2db4ae6f8c5f8a9dd2b12eee68f38cf865d4a7a6332cf2dde3a4bc60fadd7985d920c6e4845458c6523197dd8027d69a940d032c2b5d222bfaf9eebdf8e53200761e2abf9bdbc08e9942f128335c3c5d7ee46df5fe1c75005271cabc6bff01bd6805036f68dc321493bbc65f11f6cdbc72c151ddc2ca072272105e455fdaf997cc3e961d9d9112e9efec29cacaefba1961f03b420111d6cd18ae0bc217d7d11088ef22f392848e84d2bc189e2347ae0572725cae5140be0b14c64757b32fc9f033337b609a5b46b71bdec4cfd4c4f16bdee8a75b5612472752264eef4d43656fc08154ed836596e4f5e05824aa6c1b42ed5789777120bd21d107f61a12bfe1460de3d5b8b3d0daff30cfb35d391b384e03cfbef17d20ac6d58c9e0e01afa37720d27d86f02c62e8f479f8d1f5ceed89477d0c86a58175da8aaa24e2806861dc917e7deb5106746c58fbed2b1ab6a34960d9b1144431b9f0935f90256276e8d204301531e6e2c1b1923dd6d2f6a454eec27abe9d86a503ee337894ee39ab94e880cc3ccb4c3ababfd15ebe27fe8247ba2e6725f56ee74e427a02a06a59e0c5be38b31180ea30bfff278645f974143bb4fe369aa6f4bd79e4264f94802e70091252591a84b839f39c9f5163bff7bb94583786d2761484db33c49de9e49f2cf5dd25e0f8ce473d542f34a6d6dee90e4f3eb5c76e29995fba81fad8e062117e9e2880674baa8207585cb28029e010a46c7bcc71b627ddc68748b38411bdc20d25a62f9ca006bc21020c1903485208399f47ac5114f2816839444b9f357ed7457dc8fa40b39f50015da97a9ec60d57e26b4e539efde4933d67e5aa36ee91d0666ba65add40593e52591ef2052727191c2dfe15dd362bf7dc4770fa86129cdc76be30a489e66db6320df0bd9f51b497522183f71dce551cef4a40dad55387fc6fceadd475a1e606494d4665dfa15bbf967c96f4ad20b6604eb30223bad9cfc1842659e472a778249859005ce15220b3585d5edb5175ac2f1f4372c00d81946cdfd32c0b87193cc99457d86a28b74ad7ea9854f56eff98e16d54839abe5120e093eaf4b7ad18f2dccdc73e44c3a72963bd6fcc6c3d90d255ebf8dcc7010cf00f49522eb8fe0f63be63d9a86e02e8e4c89bde8e3887184002a529462ab23218224277cc83c96999b89d9cb9122c40d599fb82206f1c1ff6da2b2371ca16d6188463e560e9fd364cf355d49e17dd395cfa3f9b127874ce8968fbc2ed01fb26b0e92283f84cc1ea12b6b771a9de4d40cc194f833e624dab8c75e7ab1a6d54c2994426fe34b0248f505af4463f62d8aa3b47fb42f009dc6703cdd440feaca3b2816039fafcc5e10d065f2803d12d42e46b20f3ac9b102aed54ae11a99fcd0a6775f84094d96e96ea7bb3448334edee51f75efdf484f966dddf9aec7fb5bdc9fb84c024bed25cd900c5293112a8cf560e13eb06291864de03d512a23871c7ec1a364675217edd53e171a26dffc22a7ab4891e617d4687eee2d655978f937235dc7ab2622be23ee333f86e2c32f7288fb30c54d9b8e51dd567d01a39f76f9d89d0b8496b8405458d9ed9e8c4d70e4e61a2dacb761a3cc580cb6d56997a3445f45aeec18adade4600a707b39efdaac16fb86b7251e4c83d50077329030a111bf9364e40b67cf74a3e4dcf03df61673c631acf002cca208cd3576f6c8be1af834eb3815198e0e5f48faaa630d01ca5533745855f6fa891057007d8804a0ac64ddd6e387da16f09f94c1d7e63d81e5bcd53eaf3e6afcbd36caf36f39ef65906ddbb0ee7e4ef196cd7587d077cdd1f8506af089be49610aebceb100b648d1095dc30e11d4a243a3ab0801cdf82088863738bae81d21a765c251619ae4f9b42d96fa01048bd694076d8efc81678c791ca736174fc92d23b966563cea9db9285781522253a9eaa2d8914fa7ba46e865a7285e5e1778bd513ee5c18a9bfbfa1c44dc4fe11808f740341b35ff78309ed181b775700e5eac0727be95a9ba592cce7ada47cf1afc43e9ce14079c850f867c1f413b4fd5bca226cca23d8619fb84e3658ee3f0ca490b1516f8f7623bca156fe49c3991418e908c674bb1da1363a5fc773f7e66840eb62d0e5049489d232113e68b6cc7d6c2d69ad87919d96a270d11d4071e6a455e8063a01845513a472cdd3a700e3e25d1b29e3b87350b76c6dede5b5fc6916f4621a83978f160b013d8328d2cadf3698788b2f4f7290eafdcacbece1a18494deb6c231d6889e91c84edb2dc84dc68510ba1782064de0c77000075e0ecd72784be57e638cc79a2479fa43853afbf215ae7f099dd5b9b97f97ed915e4f848daa925a94fe800c1d24d033dee7e38db184301669f3b2f2dfc0240fee265aede3ed19969eff1712b2bf7c87795f0f9205124a433d983ddcf01d7b564995e71d022699b870b954834812a009171e66deda1016b5d90771d7f6ae22b873bd430d17902e9149161306a4a423e9cfbddddb4b7813b7be59d6bac0b3509b7e71097c87d0e399cd5124f6e2c534bb3d78c5ed02240d0a15be176bbc56c979e84aa97c3859760956d15b1df39c2ccb37d95a54e3461eb15f829d24fb0d7f020e4f6136bea61ec3cc0eca591aa5a74cebe45b431125157d15a715b521ebdc5d38947e7f1b584137c77fc79330c471856a1301ed3aa7936cc68d90a8cdd4f51284bad53be8e4b202df39da6b16eb423880fd417d2dc3d3911f766530e0c6b1c86331e5c689d1375109359d321e43c9744d8ff3380c230d5ecbe075906cef251787190</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">施工中...</summary>
    
    
    
    
    <category term="Royce" scheme="http://ecalose.github.io/tags/Royce/"/>
    
    <category term="others" scheme="http://ecalose.github.io/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>P3374 【模板】树状数组 1</title>
    <link href="http://ecalose.github.io/posts/759.html"/>
    <id>http://ecalose.github.io/posts/759.html</id>
    <published>2020-03-18T15:13:06.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[^1]</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>如题，已知一个数列，你需要进行下面两种操作：</p><ul><li>将某一个数加上 $x$</li><li>求出某区间每一个数的和</li></ul><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个正整数 $n,m$，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $n$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $m$ 行每行包含 33 个整数，表示一个操作，具体如下：</p><ul><li><code>1 x k</code> 含义：将第 $x$ 个数加上 $k$</li><li><code>2 x y</code> 含义：输出区间 $[x,y]$ 内每个数的和</li></ul><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含若干行整数，即为所有操作 22 的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 5 4 2 3</span><br><span class="line">1 1 3</span><br><span class="line">2 2 5</span><br><span class="line">1 3 -1</span><br><span class="line">1 4 2</span><br><span class="line">2 1 4</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">14</span><br><span class="line">16</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>【数据范围】</p><p>对于 $30%$ 的数据，$1 \le n \le 8，1\le m \le 10$；</p><p>对于 $70%$ 的数据，$1\le n,,m\le10^4;$</p><p>对于 $100%$ 的数据，$1\le n,m \le 5\times 10^5$。</p><p>样例说明：</p><p>故输出结果 14、16</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/2256.png"></p><p>(写这篇呢其实是因为自己已经不会树状数组了，正好借此机会复习下 QAQ)</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><p>首先需要了解什么是 <code>树状数组</code></p><p>树状数组用的是树结构的思想，即树型逻辑结构，但他不是树形结构啦</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><blockquote><p>树状数组 (Binary Indexed Tree(B.I.T), Fenwick Tree)是一个查询和修改复杂度都为 og(n) 的数据结构。主要用于查询任意两位之间的所有元素之和，但是每次只能修改一个元素的值；经过简单修改可以在 log(n) 的复杂度下进行范围修改，但是这时只能查询其中一个元素的值(如果加入多个辅助数组则可以实现区间修改与区间查询)。</p></blockquote><p>对于这题，简单来说就是单点修改区间查询，一般地，树状数组不支持区间修改单点差选，但是我们也有办法让他支持…..</p><p>树状数组的优势就在于其维护的时间复杂度为 $O(log , n)$ ，而类似的前缀和数组维护的时间复杂度为 $O(n)$，两者的查询都是 $O(1)$ </p><p>（说到这我就想起来某次校内赛的xzt买煎饼。。。。还好我拿了20分）</p><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><h4 id="lowbit"><a href="#lowbit" class="headerlink" title="lowbit"></a>lowbit</h4><p>实际上，对于树状数组 $tree$ 的每一个 $i$，其实际意义应该为：算上其本身的讯息，总共存储了 $2^k$ 个元素的信息，其中 $k$ 表示 $i$ 在二进制下，末尾零的个数，同时也可以表示最小的含 1 位的二进制权值——换句话讲，$2^k$ 即可表示成：对于每个二进制意义下的 $i$，从最末位数 $k+1$ 位，保留这 $k+1$ 位并删除 $k+1$ 位以左的所有数位上的数，留下的新二进制数的实际大</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/0dd7912397dda14482d369acbfb7d0a20df486d1.jpg"></p><table><thead><tr><th align="center">十进制</th><th align="center">二进制</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center">10</td></tr><tr><td align="center">3</td><td align="center">11</td></tr><tr><td align="center">4</td><td align="center">100</td></tr><tr><td align="center">5</td><td align="center">101</td></tr><tr><td align="center">6</td><td align="center">110</td></tr><tr><td align="center">7</td><td align="center">111</td></tr><tr><td align="center">8</td><td align="center">1000</td></tr><tr><td align="center">9</td><td align="center">1001</td></tr><tr><td align="center">10</td><td align="center">1010</td></tr></tbody></table><p>图文并茂之后有没有看出点什么 QAQ</p><p>记得当时学的时候，在学校大佬的帮助下才理解了这些东西，可能我比较菜吧</p><p><del>没看出来就多看几遍吧</del> 好像也还是看不出来，那就记下来结论吧</p><p>对于每一个 $x$ 的最低含一位，即上文中的 $2^k$,可以借助一个 $lowbit$ 函数实现 emmm 一个极其玄学的东西</p><p>再把 <code>lowbit</code> 说简单点就是</p><p>把一个整数变成二进制，从右往左找到第一个1，然后返回这个1所表示的十进制值。</p><p>玄学公式登场 <code>x &amp; -x</code></p><p>举个例子</p><p>$$<br>4 = 100,,-4 = 011 + 1 = 100\<br>~\<br>\because100,&amp;,100=100=4 \<br> ~\<br>\therefore lowbit(4)=4\<br>$$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &amp; -x; <span class="comment">//就是这么玄学</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么要这样干呢</p><p>我们先列出 1~8 的 $lowbit$ </p><p>$1;2;1;4;1;2;1;8$</p><p>我们让 $C[i]$ 管理 $A[i-lowbit(i)+1,,i]$ 这段区间，如下图</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-19_11-45-31.png"></p><p>那么我们把某个点 $+x$ 的时候只需要把能管到这个点的都 $+x$ 就好啦，那我们如何找哪些能管到我们修改的点呢，这时候就需要 $lowbit$ 了</p><h4 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h4><h5 id="一维前缀和"><a href="#一维前缀和" class="headerlink" title="一维前缀和"></a>一维前缀和</h5><p>现有一个长度为 $N$ 的序列 $A$，需要进行 $M$ 次操作，每次操作选取从 $A_i$ 到 $A_j$ 共 $j-i+1$ 个数并求出他们的总和 （N 和 M 可以很大）  </p><p>例：<br>$$<br>N=9，;A={3,1,4,1,5,9,2,6,5}<br>$$<br>如果按照题意暴力，最坏情况下时间复杂度 $O(n\times m)$（是这个吗，我咋感觉时间复杂度好像大概可能不是这个QAQ）</p><p>反正时间复杂度挺高的就对了</p><p>那我们可以新建一个数组 $B$ ，其中 $B_i=B_{i-1} +A_i$</p><p>此时我们需要求 $a_i-a_j$ 的总和，<del>意会下</del>，只需要求 $B_j-B_{i-1}$ 就好啦</p><p><del>很明显</del>，利用前缀和的方法，因为B数组是在读入时进行处理，可以看作不需要时间，而查询的时间复杂度就是 $O(1)$ 啦</p><h5 id="二维前缀和"><a href="#二维前缀和" class="headerlink" title="二维前缀和"></a>二维前缀和</h5><p>一维前缀和会了二维的也很简单</p><p>$$<br>A=<br>\left[<br>\begin{matrix}<br>5 &amp; 6 &amp; 6 &amp; 1 &amp; 4 &amp; 6\<br>3 &amp; 4 &amp; 2 &amp; 4 &amp; 1 &amp; 7 \<br>0 &amp; 9 &amp; 4 &amp; 6 &amp; 2 &amp; 4<br>\end{matrix}<br>\right]<br>;<br>B=<br>\left[<br>\begin{matrix}<br>5 &amp; 11 &amp; 17 &amp; 18 &amp; 21 &amp; 27\<br>8 &amp; 18 &amp; 26 &amp; \cdots &amp; \cdots &amp; \cdots \<br>\cdots &amp; \cdots &amp; \cdots &amp; \cdots  &amp; \cdots &amp; \cdots<br>\end{matrix}<br>\right]<br>$$<br>若我们要求 $x_1,,y_1$ 与 $x_2,,y_2$ 两点所围成矩形内数字的和<br>公式 $sum=B_{x_2,y_2}-B_{x_2,1}-B_{1,y_1}+B_{x_1-1,y_1-1}$</p><h3 id="储存"><a href="#储存" class="headerlink" title="储存"></a>储存</h3><p>树状数组本质就是一个数组，我们用 C 来表示，然后把 C 排成数🎄的样子，就像前面的那个图那样</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/0dd7912397dda14482d369acbfb7d0a20df486d1.jpg"></p><p>$C[1]=A[1]$<br>$C[2]=A[1]+A[2]$<br>$C[3]=A[3]$<br>$C[4]=A[1]+A[2]+A[3]+A[4]$<br>$C[5]=A[5]$<br>$C[6]=A[5]+A[6]$<br>$C[7]=A[7]$<br>$C[8]=A[1]+A[2] \cdots A[8]$</p><p>很明显 $C[i]=A[i-lowbit(i)+1]+A[i-lowbit(i)+2]+ \cdots +A[i]$</p><p>用代码写就是</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j=i-lowbit(i)+<span class="number">1</span>; j&lt;= i; j++)</span><br><span class="line">    c[i] += a[j];</span><br></pre></td></tr></table></figure><p>对于 1, 3, 5, 7 这类 $C[i]$ 后只有一个 $A[i]$ 的，我们称之为基点<br>不难发现基点的都是是奇数，即 lowbit=1<br>反之，lowbit=1 的数一定是奇数，也一定是基点。</p><p>而对于 1, 2, 4, 8 这类 $C[i]$ 后是 $\sum_{x=1}^i a_x$ 的，我们称之为统括点<br>也不难发现，统括点的二进制能写成 1000…… 的形式<br>那么统括点一定就是 2 的幂，反之 2 的幂也一定是统括点 </p><p>特别的，1 既是基点又是统括点<br>6 不是基点也不是统括点</p><h3 id="单点修改"><a href="#单点修改" class="headerlink" title="单点修改"></a>单点修改</h3><p>如何进行单点修改，其实在之前已经讲过了<br>比如我们让 $A[3]+1$，那么有包含 $A[3]$ 的所有 $C$ 都要 $+1$<br>包括 $C[3],C[4],C[8],C[16],C[32]\cdots$</p><p>那么我们只需要这样就行了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=i; j&lt;=n; j+=lowbit(j)) </span><br><span class="line">C[i] += x;</span><br></pre></td></tr></table></figure><h3 id="区间查询"><a href="#区间查询" class="headerlink" title="区间查询"></a>区间查询</h3><p>要想得到 i 到 j 的所有数的总和 $sum_{i,j}$，只需要得到 $sum_{1,i}$ 和 $sum_{1,j}$</p><p>$$<br>sum_{i,j} = sum_{1,i} - sum_{1,j} + A_i<br>$$</p><p>也就是前面讲到的前缀和</p><p>先求 $sum_{1,i}$ ，即从 i 开始不断减去 lowbit 并加 C 的值，直到找到第一个统括点（第一个包含该点的统括点）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>,i;</span><br><span class="line"><span class="keyword">for</span>(i=x; i!=lowbit(i); i-=lowbit(i))</span><br><span class="line">sum += c[i];</span><br><span class="line">sum += c[i]; <span class="comment">//因为最后一次循环并没有进入，故在此处再加一次c[i]</span></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$sum_{1,j}$ 同理</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>附上 AC 代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,x,aa;</span><br><span class="line"><span class="keyword">int</span> a,c[<span class="number">500110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x&lt;=n) &#123;</span><br><span class="line">c[x] += k;</span><br><span class="line">x += lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>,i;</span><br><span class="line"><span class="keyword">for</span>(i=x;i!=lowbit(i);i-=lowbit(i))</span><br><span class="line">sum += c[i];</span><br><span class="line">sum += c[i];</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;ssd</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">add(i,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; aa &gt;&gt; x &gt;&gt; k;</span><br><span class="line"><span class="keyword">if</span>(aa==<span class="number">1</span>) add(x,k);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; find(k) - find(x<span class="number">-1</span>) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//此处和 find(k) - find(x) + a[x] 是一样的</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3374">P3374 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;如题，已知一个数列，你需要进行下面两种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将某一个数加上 $x$&lt;/li&gt;
&lt;li&gt;求出某区间每一个数的和&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>P1908 逆序对</title>
    <link href="http://ecalose.github.io/posts/3500.html"/>
    <id>http://ecalose.github.io/posts/3500.html</id>
    <published>2020-03-13T06:59:22.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><p>猫猫 TOM 和小老鼠 JERRY 最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。</p><a id="more"></a><p>最近，TOM 老猫查阅到一个人类称之为“逆序对”的东西，这东西是这样定义的：对于给定的一段正整数序列，逆序对就是序列中满足 $a_i&gt;a_j$ 且 $i&lt;j$ 的有序对。知道这概念后，他们就比赛谁先算出给定的一段正整数序列中逆序对的数目。</p><p><strong>Update:数据已加强。</strong></p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行，一个数 $n$，表示序列中有 $n$ 个数。</p><p>第二行 $n$ 个数，表示给定的序列。序列中每个数字不超过 $10^9$。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出序列中逆序对的数目。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">5 4 2 6 3 1</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于 $25%$ 的数据，$n \le 2500$<br>对于 $50%$ 的数据，$n \le 4 \times 10^4$<br>对于所有数据，$n \leq 5 \times 10^5$<br>请使用较快的输入输出<br>应该不会 $O(n^2)$ 过 50 万吧 by $chen_zhe$  </p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>[^2]</p><h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><blockquote><p>归并排序（MERGE-SORT）是建立在归并操作上的一种有效的排序算法,该算法是采用==分治法==（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。归并排序是一种==稳定==的排序方法。</p></blockquote><p>归并排序<br>时间复杂度 $O(n;log;n)$<br>空间复杂度 $O(n)$</p><p>算法图解</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/c8177f3e6709c93d673b9ed49d3df8dcd00054c3.png" alt="图解"></p><p>就是先进行拆分，拆到只剩下自己的时候再进行合并</p><p>以样例作为例子</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-15-30.png" alt="例子"></p><h4 id="拆分"><a href="#拆分" class="headerlink" title="拆分"></a>拆分</h4><p>先定义一个 msort 函数将原序列拆分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">msort</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (L + R) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(L == R) <span class="keyword">return</span>;</span><br><span class="line">    msort(L, mid);</span><br><span class="line">    msort(mid+<span class="number">1</span>, R);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><p>因为可以保证需要合并的两组数都是单调的，所以我们只需要从两组数的最左边开始比较，若 $a_i&gt;a_j$ 我们就可以将 $a_j$ 存入 temp 数组中，然后 j++，在将 $a_i$与 $a_j$ 进行比较，一直重复进行，知道 i 或者 j 超出了范围</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = L, j = mid + <span class="number">1</span>, t = L;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=mid &amp;&amp; j&lt;=R) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">        ans += mid - i + <span class="number">1</span>;</span><br><span class="line">        temp[t++]  = a[j];</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        temp[t++]  = a[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成后我们会得到一个同样单调的 temp 数组，但是 temp 中只存了中较小的值，所以我们还需要将 a 中剩下的值存进来，这也是为什么我们需要在外部定义 i 和 j，可以记录下还有哪些没被存进去</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">    temp[t++] = a[i];</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (j &lt;= R) &#123;</span><br><span class="line">    temp[t++] = a[j];</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后我们再将temp数组拷贝回a数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k=L; k&lt;=R; k++)</span><br><span class="line">    a[k] = temp[k];</span><br></pre></td></tr></table></figure><h4 id="步骤分解"><a href="#步骤分解" class="headerlink" title="步骤分解"></a>步骤分解</h4><p>肯能看到这还是很懵<br>那就看看详细的步骤分解吧</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-15-30.png" alt="1"></p><p>合并 5 4，$i=L=1$， $mid=\frac{L+R}{2}=1$ ，$j=mid+1=2$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：4 5 0 0 0 ，j++，j=3，超出范围，将剩余的 5 存入，temp 数组：4 5 2 6 3 1</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-00.png" alt="2"></p><p>合并 3 6，$i=L=4$，，$mid=\frac{L+R}{2}=4$，$j=mid+1=5$，$a_i&gt;a_j$，将$a_j$存入 temp，temp 数组：4 5 0 3 6 0，j++，j=6，超出范围，将剩余 3 存入，temp 数组：4 5 2 3 6 1</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-14.png" alt="3"></p><p>合并 3,5 和 2，$i=L=1$，$mid=\frac{L+R}{2}=2$，$j=mid+1=3$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：2 5 0 3 6 0，j++，j=4，超出范围，将剩余 4 5 存入，temp 数组：2 4 5 3 6 0</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-35.png" alt="4"></p><p>合并 1 和 3,6，$i=L=4$，$mid=\frac{L+R}{2}=4$，$j=mid+1=6$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：2 5 0 1 6 0，j++，j=7，超出范围，将剩余 3 6 存入，temp 数组：2 4 5 1 3 6</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-54.png" alt="5"></p><p>合并 2 4 5 和 1 3 6</p><p>$$<br>i=L=1,\ mid=\frac{L+R}{2}=3,\ j=mid+1=4  \<br>~\<br>a_i&gt;a_j,\ 将a_j存入temp,\ temp数组：1,5,0,1,6,0  \<br>~\<br>j++,\ j=5,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,0,1,6,0  \<br>~\<br>i++,\ i=2,\ a_i&gt;a_j,\ 将a_j存入temp,\ temp数组：1,2,3,1,6,0  \<br>~\<br>j++,\ j=6,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,3,4,6,0  \<br>~\<br>i++,\ i=3,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,3,4,5,0  \<br>~\<br>i++,\ i=3,\ 超出mid,\ 将剩余 6 存入,\ temp数组：1,2,3,4,5,6\<br>$$</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-17-25.png" alt="6"></p><p>这样就能得到一个有序数列了，例子中讲的是升序，降序也是同样的道理</p><h4 id="逆序对"><a href="#逆序对" class="headerlink" title="逆序对"></a>逆序对</h4><p>然鹅这题是求逆序对，所以我们还需要在此基础上加上一行</p><p>在判断$a_i&lt;a_j$的时候，前面的数小于后面的数，这时逆序对就出现了！</p><p>由于 L ~ mid 和 mid + 1 ~ r 都是有序序列<br>所以一旦 l ~ mid 中的元素 &gt; mid + 1 ~ r 中的元素<br>又因为第 i 个元素 &lt; i + 1 ~ mid 那么i + 1 ~ mid 的元素都 &gt; 第 j 个元素<br>所以 ans 加的元素个数就是 i ~ mid 的元素个数，也就是 mid - i + 1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5000010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans; <span class="comment">//据说需要 long long，都 5x10^5 了，逆序对有又那么多，肯定要啦  </span></span><br><span class="line"><span class="keyword">int</span> n, a[MAXN], temp[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>; <span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>) flag = <span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x *= <span class="number">10</span>; x += ch - <span class="string">&#x27;0&#x27;</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> flag ? - x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//归并排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">msort</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (L + R) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(L == R) <span class="keyword">return</span>;</span><br><span class="line">    msort(L, mid);</span><br><span class="line">    msort(mid+<span class="number">1</span>, R);</span><br><span class="line">    <span class="keyword">int</span> i = L, j = mid + <span class="number">1</span>, t = L;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=mid &amp;&amp; j&lt;=R) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">            ans += mid - i + <span class="number">1</span>; <span class="comment">//逆序对计数</span></span><br><span class="line">            temp[t++]  = a[j];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            temp[t++]  = a[i];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">        temp[t++] = a[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= R) &#123;</span><br><span class="line">        temp[t++] = a[j];</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=L; k&lt;=R; k++) a[k] = temp[k];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read(); <span class="comment">//都提示用较快的输入输出了你还在cin？</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) a[i] = read();</span><br><span class="line">    msort(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans); <span class="comment">//%lld别错了</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//好习惯</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对 - 洛谷 | 计算机科学教育新生态</a><br>[^2]: 参考<a href="https://www.luogu.com.cn/blog/qqq1112/solution-p1908">题解 P1908 【逆序对】 - ! - 洛谷博客</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;p&gt;猫猫 TOM 和小老鼠 JERRY 最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>观念小测试</title>
    <link href="http://ecalose.github.io/posts/58944.html"/>
    <id>http://ecalose.github.io/posts/58944.html</id>
    <published>2020-03-09T15:37:44.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>As part of an experiment to explore the human mind<br>we asked twenty-two people<br>to solve the same riddle and recomed their responses</p><p>Are you ready?</p><p>The riddle:</p><p>A father is about to bring his son<br>to a job interview applying<br>for a position at a large stockbrokers company </p><p>Just as they arrive at the company’s parking lot.<br>the sons phone rings.</p><p>He looks at his father who say:”Go ahead, answer it”</p><p>The caller it’s the trading oommpenty’s CEO who says.<br>Good luck son, your’ve got this</p><p>The son ends the call and once again looks at his father,<br>who is still next to him in their car</p><p>How is this possible?</p><hr><p>一位父亲准备带他的儿子去面试<br>争取一个大型股票经纪公司的职位</p><p>正当他们的车进入公司停车场的时候<br>儿子的手机响了  </p><p>转头看向了坐在驾驶位的父亲<br>父亲一脸奇怪，说：“你接啊。”  </p><p>儿子接了起来，打电话的人是一个贸易公司的 CEO<br>说：“儿子(son)，祝你好运，你一定可以的。”  </p><p>儿子挂断电话，再次转头看向了坐在他身旁的父亲。</p><p>那么这是怎么回事呢？？？</p><p>来自<a href="https://beastoftraal.com/2020/03/16/can-you-solve-the-mindspace-riddle/">国外的一个实验</a></p><hr><p><a class="BoxButton" onclick="ShowAnswer()">点我查看答案</a><br><strong id="58944-answer"></strong></p><script>  function ShowAnswer(){    document.getElementById("58944-answer").innerHTML="打电话的人是他妈妈";  }</script>]]></content>
    
    
    <summary type="html">对与许多判断，你可能是依靠着你的下意识，但你自己却不之情</summary>
    
    
    
    
    <category term="others" scheme="http://ecalose.github.io/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>2020-03 随笔</title>
    <link href="http://ecalose.github.io/posts/32314.html"/>
    <id>http://ecalose.github.io/posts/32314.html</id>
    <published>2020-03-07T08:47:28.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="这密码感觉不太对, 再猜猜看" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="猜猜密码是什么" /><label>猜猜密码是什么</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="e9c901ef18b7389abe4d6ec41707b8c0a2d33e165ffdff660844a16b400ba2f4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密啦，输入密码才能看哦</summary>
    
    
    
    
    <category term="随笔" scheme="http://ecalose.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Coding+GitHub 双线部署</title>
    <link href="http://ecalose.github.io/posts/13128.html"/>
    <id>http://ecalose.github.io/posts/13128.html</id>
    <published>2020-02-27T08:32:48.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>哪个孩子不想要一个流畅的博客<br>奈何 github 一直处于半墙状态，访问速度贼慢<br>所以我们可以选择境内访问走 coding（国内的平台），境外访问走 github</p><a id="more"></a><p>网上关于博客双线部署的教程挺多的，但是今年 coding 更新了，界面改变比较大，并没有关于新版的教程，于是乎</p><p>你需要有自己的域名，挺便宜的，算下来一天好像一分钱不到<br>可以不备案，也就不需要买服务器的钱啦<br>如果没域名单纯部署到 coding 上不建议，因为coding改版之后，给的域名不想 github 那样是<br><code>你的用户名.github.io</code><br>变成的一堆乱七八糟的东西，就像这样</p><p><img src="https://cos.royce2003.top/13128/01.webp-default"></p><p>那为什么选择 coding+github 而不是 gitee+github 呢<br>还不是因为没钱，gitee 如果想绑定自己域名，第一个月免费，之后就要收费了</p><h3 id="部署到Coding"><a href="#部署到Coding" class="headerlink" title="部署到Coding"></a>部署到Coding</h3><p>首先注册一个账号<br>注意，改版之后只能注册团队，不能单独注册个人，官网 <a href="https://coding.net/">查看链接</a></p><p><img src="https://cos.royce2003.top/13128/02.webp-default"></p><p>注册</p><p>注册之后登录，在右上角创建项目</p><p><img src="https://cos.royce2003.top/13128/03.webp-default"></p><p>创建项目</p><p>选择代码托管项目</p><p><img src="https://cos.royce2003.top/13128/04.webp-default"></p><p>代码托管</p><p>然后按照下图填写，项目名称建议像 github 一样强制和用户名一样然后再加 <code>coding.me</code>，项目标识没什么关系</p><p><img src="https://cos.royce2003.top/13128/05.webp-default"></p><p>创建</p><p>创建完成之后发现并没有静态网页，实际上是被 coding 默认关闭了，我们需要在左下角的设置中开启</p><p><img src="https://cos.royce2003.top/13128/06.webp-default"></p><p>设置</p><p><img src="https://cos.royce2003.top/13128/07.webp-default"></p><p>开启</p><p>这个时候再返回来就可以看到有个构建与部署，静态网页就在这里面，点击创建</p><p><img src="https://cos.royce2003.top/13128/08.webp-default"></p><p>静态网页</p><p>按照下图填写，记得勾选自动部署，要不然隔壁 gitee 收费而 coding 免费给你用的被你浪费了</p><p><img src="https://cos.royce2003.top/13128/09.webp-default"></p><p>建立</p><p>图中框起来的就是你的博客地址</p><p><img src="https://cos.royce2003.top/13128/10.webp-default"></p><p>博客地址</p><p>接下来我们要添加 SSH公钥<br>在改目录下找到公钥，和你部署 github 的那个一样</p><p><img src="https://cos.royce2003.top/13128/11.webp-default"></p><p>记事本打开，复制，添加到 oding 中<br>在个人设置里找到 ssh公钥</p><p><img src="https://cos.royce2003.top/13128/12.webp-default"></p><p>公钥</p><p>添加<br>记得勾选永久有效</p><p><img src="https://cos.royce2003.top/13128/13.webp-default"></p><p>添加</p><p>添加完成后可在 git bash 中输入如下代码，检查是否添加成功<br><code>ssh -T git@e.coding.net</code><br>如果添加成功会显示如下信息</p><p><img src="https://cos.royce2003.top/13128/14.webp-default"></p><p>成功</p><h3 id="修改解析记录"><a href="#修改解析记录" class="headerlink" title="修改解析记录"></a>修改解析记录</h3><p>接着就要开始搞域名解析了，首先进入你买域名的平台，这里演示的是腾讯云<br>进入控制台–&gt;域名管理<br>然后点击解析</p><p><img src="https://cos.royce2003.top/13128/15.webp-default"></p><blockquote class="blockquote-note blockquote-note__danger"><div class="blockquote-note__content"><p>注意！先进行 coding 解析并申请证书开启强制 HTTPS，证书成功申请之后再进行 github 解析！</p></div></blockquote><h4 id="coding-的解析记录"><a href="#coding-的解析记录" class="headerlink" title="coding 的解析记录"></a>coding 的解析记录</h4><p>首先我们添加 coding 的解析记录<br>主机记录选 www<br>记录类型选 CNAME<br>此时我们的线路类型应该选择境内，因为我们的初衷就是为了加快国内访问速度<br>国内肯定走 coding<br>记录值填写 coding 给你的域名<br>TTL 是每次修改记录生效的时间，时间越短当然生效越快，但是时间短了会影响解析速度，根据自己需求决定。<br>然后保存</p><p><img src="https://cos.royce2003.top/13128/16.webp-default"></p><p>接下来在添加一条主机记录为 @ 的记录<br>记录类型选择 A<br>记录值填域名的 ipv4 地址<br>打开 cmd<br>输入<br>ping 你的域名<br>注意，你的域名不能加 <code>https://</code> 或者 <code>http://</code><br>接着，方括号中就是我们需要的值</p><p><img src="https://cos.royce2003.top/13128/17.webp-default"></p><p><img src="https://cos.royce2003.top/13128/18.webp-default"></p><p>然后进入 coding 刚刚放博客的仓库，点击<br>右上角设置</p><p><img src="https://cos.royce2003.top/13128/19.webp-default"></p><p>向下滑找到自定义域名，讲自己的域名填进去，可以开启强制 HTTPS，然后绑定</p><p><img src="https://cos.royce2003.top/13128/20.webp-default"></p><p>绑定成功会显示在这里，可以选择再绑定一个 www 多跳转至首选</p><p><img src="https://cos.royce2003.top/13128/21.webp-default"></p><h4 id="GitHub的解析记录"><a href="#GitHub的解析记录" class="headerlink" title="GitHub的解析记录"></a>GitHub的解析记录</h4><p>接着我们添加 github 的解析<br>主机记录选 www<br>记录类型选 CNAME<br>线路选境外，也就是说，如果境外访问你的博客会走 github<br>记录值填写 github 给你的博客地址<br><code>仓库名.github.io</code></p><p><img src="https://cos.royce2003.top/13128/22.webp-default"></p><p>添加第二条解析记录<br>主机记录选 @<br>记录类型 A<br>线路境外<br>记录值和之前相同方法通过 cmd 获取<br>然后保存</p><p><img src="https://cos.royce2003.top/13128/23.webp-default"></p><p>解析记录填写完了，我们就需要到 github 上设置下<br>进入你存放博客的仓库，点击 settings</p><p><img src="https://cos.royce2003.top/13128/24.webp-default"></p><p>settings</p><p>然后向下滑找到 GitHub Pages<br>填入自己的域名，点击 save，可以选择强制 HTTPS，当保存玩看到上面出现一栏绿绿的东西，然后还有你的域名就说明成功了</p><p><img src="https://cos.royce2003.top/13128/25.webp-default"></p><p>此时 github 的域名绑定已经完成</p><p>如果coding证书申请失败，访问网站提示不安全</p><blockquote class="blockquote-note blockquote-note__info"><div class="blockquote-note__content"><p>方法1 暂停关于 github 的两条解析并关闭 github 上的强制 https 再申请<br>方法2 可能是你的解析记录填写错误，按照教程重新填写</p></div></blockquote><p>接着进入站点根目录的配置文件<br>修改 deploy</p><p><img src="https://cos.royce2003.top/13128/26.webp-default"></p><p>将 royce2003 改成你自己的用户名</p><p>然后三连<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>如果部署成功，在 coding上 是可以看到的</p><p><img src="https://cos.royce2003.top/13128/27.webp-default"></p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>好啦<br>双线部署教程结束<br>接下来说几个坑,好像只有一个<br>填解析记录的时候那个 TTL 我个人建议千万千万不要选久的<br>时间长虽然解析快，但是我们用的是 coding，众所周知<br>coding 日常会宕机，那时候你的博客就访问不了了<br>此时你可以去把 coding 的两条解析暂停，github 的那两个解析的线路类型改成默认<br>这样你接下里访问就不会走 coding 而是从 github了，但是你 TTL 万一设个 3600 秒，你这一小时内博客就都不能访问了<br>不过我们这种小网站好像没啥太大影响</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;哪个孩子不想要一个流畅的博客&lt;br&gt;奈何 github 一直处于半墙状态，访问速度贼慢&lt;br&gt;所以我们可以选择境内访问走 coding（国内的平台），境外访问走 github&lt;/p&gt;</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>失语症</title>
    <link href="http://ecalose.github.io/posts/60705.html"/>
    <id>http://ecalose.github.io/posts/60705.html</id>
    <published>2020-02-26T10:46:21.000Z</published>
    <updated>2020-08-25T08:50:13.359Z</updated>
    
    <content type="html"><![CDATA[<p align="ceter">脑子和嘴巴抢活，嘴巴敢怒不敢言？</p><a id="more"></a><h3 id="零"><a href="#零" class="headerlink" title="零"></a>零</h3><p>“姓名？”心理医生抬起头看着面前的男人说道。<br>“时言。”时言一边说着一边偷摸看着大门的方向。<br>“什么病？”<br>“说不出话。”时言犹豫了下，说道。<br>心理医生抬起头，看傻子一样看着他：<br>“玩我？”<br>“你等会儿啊，大夫。”时言对门口喊了声，“老婆，进来。”<br>随后一个很是漂亮的女人走了进来，用一副很难受的表情看着医生。<br>“然后呢？”医生问道。<br>俩人不说话了。<br>“我们俩不能对话。”时言诚恳地在纸上写了一句话。<br>“吵架了？吵架来逗我玩？”医生终于受不了了，把笔一丢，气哼哼地看着两人。<br>时言面露难色，脑海中忽然闪过一个声音。<br>“看了吧，谁信谁傻子。”妻子叶陌陌冷哼道。<br>他看着心理医生那张气得逐渐涨红的脸，牵着叶陌陌的手，逃也似地离开了诊所。  </p><h3 id="壹"><a href="#壹" class="headerlink" title="壹"></a>壹</h3><p>事情是什么时候开始不对劲的呢？<br>大概是时言和叶陌陌结婚五年的时候。<br>某一天时言在厨房做菜，炖鸡，他不怎么进厨房，倒醋的时候下意识问妻子道：“放多少盐？”<br>“半勺。”妻子的声音从脑海中传来。<br>等他加完半勺盐之后忽然察觉到有点不对劲，转过头去发现叶陌陌根本没在他的身边。<br>“我在厕所。”叶陌陌忽然说道，像是知道了他在想什么一样。<br>过了会儿，叶陌陌的声音再次传入他的脑海。<br>“你……怎么能在我大脑里说话？”<br>经过反复实验，时言和叶陌陌终于弄明白发生了什么。<br>简单来说，就是两人可以进行心灵交流了，但是比较扯的是，这种心灵交流类似于被动技能无法取消，同时这种技能还有个更扯的负面效果。<br>俩人在一起时，无法开口说话。<br>时言是个工科狗，经过多次实验之后，终于得出了两人无法开口说话的距离是5211米。<br>“真有意思，闭嘴的数还这么浪漫。”叶陌陌在脑海中冷哼道。<br>“到底是为啥呢？”时言开始寻找原因，咨询了下他的人类行为学朋友。<br>朋友到底是朋友，没有像那个心理医生一样摔钢笔，认真分析完之后说道：<br>“因为你俩的身体认为你俩张嘴交流没用。”<br>“放屁，咱俩天天交流怎么打王者和吃鸡。”叶陌陌公然在时言脑子中放屁，时言敢怒不敢言，只能把气撒到朋友身上，把这句话写到朋友的笔记本上。<br>“对啊，你俩交流太好了，到最后完全用不到嘴了，古时候说心有灵犀就是这么个道理。同时老夫老妻了，也没什么话可聊了，索性不用嘴，多好。<br>没准就是你俩的嘴比较有个性，脑子既然能沟通索性就歇了业，五官也得讲劳动法不是。”朋友一本正经道。<br>时言沉默了会儿，给他微信发了个相声《五官争功》的视频，又发了个问号。<br>朋友一拍桌子：“就是这么个理。”<br>“那怎么办呢？”时言写道。<br>“我也不知道，你们这种情况很少见，不如这样，你留下来我给你俩做些实验？”朋友跃跃欲试。<br>时言想起大学看这兄弟解剖小白鼠时候的凶残样子，连忙牵着叶陌陌的手跑出了兄弟的家。  </p><h3 id="贰"><a href="#贰" class="headerlink" title="贰"></a>贰</h3><p>随时随地交流还是有好处的。尤其是这种交流是包括想法的，两人的想法是完全透明的。<br>所以吃鸡的时候，时言心念一动，叶陌陌就知道身后有人然后转身集火，所以逛商场的时候，叶陌陌心念一动，时言就知道该买哪个品牌哪个色号的口红。<br>“打野……”时言跟叶陌陌盘腿坐在沙发上，打着游戏，时言走下路，对面位置有点深入，他下意识想了下。<br>然后作为打野的叶陌陌就杀了过来，时机正好，斩获双杀。<br>“这能力还不错。”他想着，然后抬头看到了电视上播放的维密秀。<br>他忽然升起一股不好的预感，连忙把脸别过去，然而还是被叶陌陌察觉到了他的思维。<br>“想什么呢？”叶陌陌在脑海中问道，脸上满是笑容。<br>“我……”没等时言想好理由，就被叶陌陌踹了一脚。<br>“流氓！你们男的平时就想这个？”叶陌陌冷哼。<br>时言怒目而视：“我那是正常想法，OK？再说，你看小鲜肉不是也会这么想？”<br>叶陌陌微笑，夺过遥控器调到了一档男性偶像选秀节目。<br>片刻后，她面红耳赤地换了台。<br>时言在她脑海中得意洋洋道：“我就说吧。”<br>叶陌陌表情冷漠地又踢他一脚，“流氓。”  </p><h3 id="叁"><a href="#叁" class="headerlink" title="叁"></a>叁</h3><p>转眼间两人处于这种状态已经两个月有余。<br>人的习惯能力是很强大的，叶陌陌和时言如今已经习惯了不说话的生活方式，很有默契地在对方看异性选秀节目时离开家去逛街或者打游戏。<br>然而生活总不能一直这么平淡下去。<br>时言的爸妈突然来了。<br>老两口来的时候没打招呼，把时言搞得措手不及，慌乱中竟然忘了两人在一起不能说话这一情况。于是只能拿出好几个月之前叶陌陌咽炎时买的药当做挡箭牌。<br>“都咽炎到不能说话？”时言他妈有点怀疑。<br>两人点头，步调一致。<br>饭桌上叶陌陌瞅着时言妈妈做的香辣蟹一个劲地吞口水，时言不得不提醒她道：<br>“稳住，你现在是个有咽炎的人，不能吃辣。”<br>过了会儿他看着叶陌陌很沮丧的脸，又想着：“想吃我以后给你做。”<br>“放屁，你这么长时间做过饭？”叶陌陌在时言脑子里翻了个白眼。<br>时言叹了口气，忽然站起来在四个人的家庭群发了个消息道：“我吃饱了，家里没酱油了，我出去买。”<br>时言爸妈看见后连忙站起身：“我们也饱了，一块去吧，顺便帮你们买点菜。”<br>“陌陌在家洗碗吧，我们仨去就好。”时言在微信分配任务。<br>“地下室不是还有吗？”叶陌陌疑惑道。<br>“傻啊，我把我爸妈骗出去，你抓紧吃几个。”时言穿上衣服，跟爸妈走出了家门。<br>“别被看见了。”他到楼下的时候叮嘱道。<br>“放心。”叶陌陌信心满满。  </p><h3 id="肆"><a href="#肆" class="headerlink" title="肆"></a>肆</h3><p>跟老人买菜是件很难受的事。<br>更难受的是想到还有另一个人正在家里偷偷摸摸地吃香辣蟹。<br>“老板，便宜点吧，我儿子住在你们小区，常来光顾的。”时言他妈指着时言说道。<br>时言不好意思地笑笑，给老板使了个眼色。<br>“好的，那再便宜您五毛。”老板乐呵呵道。<br>时言他妈砍价胜利，兴冲冲地出了菜市场，时言给老板微信又转过去五毛红包，没一秒钟就被接受。<br>“谢了赵哥。”他发了个抱拳的表情。<br>“老人开心就好。”老板用一个呲牙的表情回复。<br>时言他爹去小区门口看下象棋了，母子俩继续在市场闲逛。<br>“你是不是跟陌陌吵架了。”时言他妈突然说道，露出一副了然一切的表情，“哪有咽炎能严重到一点话都说不出来的。”<br>时言不好意思地笑笑，他懒得解释，索性默认了。<br>“男生在婚姻里要多忍让点，你看看你爸爸就是，多交流，多让步，这样婚姻才能长久。”时言他妈语重心长道，完全不知道目前这个问题只是单纯的肉体问题，跟心灵毫无关系。<br>“还有，结婚五年了，还没个孩子。”<br>时言他妈仿佛不经意间提了一嘴，但时言知道这才是重头戏，不由头疼道：“妈，不是说过几年再说吗。”<br>“五年了都，还不够长？”时言他妈瞪他一眼。<br>“我们还没稳下来，等再过几年，再过几年。也该回家了，我去找我爸。”时言头都大了，连忙找了个理由去找他爸。<br>时言他妈忽然笑了出来：“不装哑巴了？”<br>时言不好意思地挠了挠头，小跑着去了小区外老头们聚集的绿树荫。  </p><h3 id="伍"><a href="#伍" class="headerlink" title="伍"></a>伍</h3><p>时言站在碗池前刷碗，叶陌陌送完公公婆婆开门走了进来。<br>“你妈又说生孩子的事了？”叶陌陌在他脑海中说道。<br>“嗯。”共享思维就是这点不好，想什么都能传过去。他不想跟叶陌陌透露这个事，怕给她增加压力。<br>“不是共享思维啦，一起住这么多年了你什么心情我还看不出来，一猜就知道你家里人来是为了什么。”叶陌陌大大咧咧地说。<br>时言这才想明白原来连对共享思维的抱怨都传了过去，很是无奈地耸了耸肩膀。<br>他又感知到叶陌陌的思维似乎有些黯淡。<br>“我们总不能一辈子这样下去吧。”她说道。<br>时言知道她说的“这样”包括说不出话以及无限期地往后拖延要孩子这两件事。<br>“你想吗？”时言小心翼翼地问道。<br>叶陌陌摇了摇头，但是传过来的却是很迷茫的情绪。“我不知道，总想先混一天是一天。”<br>“那你呢？”叶陌陌同样小心翼翼地试探道。<br>“我听你的。”时言的答案也并不明确。<br>两人沉默了半天，或者说互相感知的思绪嘈杂了半天，因为已经繁杂道大脑无法判定对方的真实想法。<br>叶陌陌晃了晃头，振作起精神道：“科学表明，如果我们有很多事没想好该怎么去做，不如就先去做那个我们一定要做的。”<br>“那我们做什么？”时言问道。<br>“张嘴说话。”<br>叶陌陌拿出手机，开始下电影。  </p><h3 id="陆"><a href="#陆" class="headerlink" title="陆"></a>陆</h3><p>叶陌陌和时言两人一脸严肃地站在电视机前，跟着电视中的国王拍打两颊。<br>“这么做管用吗？”时言有些怀疑。<br>“这电影是真实故事改编，有一定真实性的。”叶陌陌正色道。<br>两人看的电影是《国王的演讲》，正演到教师交给王子锻炼嘴部肌肉的片段。<br>过了很久，直到两人脸颊通红，还是没能说出话来。<br>“我们要不要试试别的……”<br>时言刚问完，忽然察觉到叶陌陌的情绪似乎有点不对劲，他转头看过去，发现叶陌陌正抱着膝盖在哭。<br>“我们是不是一辈子要这样了。”她无声地流着眼泪，抽噎着在时言的脑海中诉说。<br>“肯定有别的方法的。”时言安慰道，但是叶陌陌的思维很快传了过来：<br>“别骗我了，我们能共享思维，你也不知道对不对。”<br>“那我们怎么办啊。”叶陌陌低着头。<br>时言也不回应了。<br>是啊，结婚就是这么无聊的事。<br>不能总是以咽炎为借口在聚会时不说话，不能总是用“过几年”的说辞来逃避孩子等等的问题，不能总像恋爱时一样有着说不尽的话，不能总像小时候向往的那样只有美好而没有烦恼。<br>两人脑海中同时浮现出某个解决办法，然后又有意识地将这办法从自己脑海中抹除，生怕对方发现。<br>“我出去下。”时言突然站了起来，匆匆走出了房屋。  </p><h3 id="柒"><a href="#柒" class="headerlink" title="柒"></a>柒</h3><p>时言正准备走出小区，忽然发现小区门口有个熟悉的身影。<br>“爸！”他喊道，一个站着围观的老头扭过头，对他挥了挥手。<br>“你怎么来也不打声招呼。”时言跟他爸走在小区的步道上，时言埋怨道。<br>“我来看下象棋的，顺道来看看你。”时言他爸笑道。<br>两人走了一段，没什么话说，时言刚想张口说让他回家坐会儿，老头却先张了口。<br>“是你妈非让我来，说你跟陌陌吵架了，让我来劝劝。”<br>时言愣了下，“那我妈怎么不来。”<br>“她说公公婆婆得一个唱白脸一个唱黑脸，这样媳妇才不至于对你太差。”老头不屑道，“我就觉得没什么嘛。”<br>时言想起那天他妈跟他说的话，不由得笑了起来。<br>“你们要是吵架啊，估计也是为了孩子，这事呢说我跟你妈不着急那是假的，但是毕竟是你自己的事，我们也不好说什么，陌陌是个好孩子，不乐意的话别逼人家，没孩子照样过。”<br>“我知道你们年轻人喜欢这种生活方式，我们这些老人跟不上时代了，你们自己愿意，我们也就将就来，只是你妈唠叨，她也就说说，你让陌陌别往心里去……”<br>时言他爸丝毫没察觉到自己也开始唠叨起来。<br>时言笑了笑，忽然问道：“爸，您有没有跟我妈到没话说的时候。”<br>老头想了想，点了点头，又摇了摇头：“说真的，结婚一年我俩就没话说了，什么一开始那股子新鲜感全没了，俩人就是正常上班下班。<br>一开始不习惯，可是后来越来越觉得那些废话也挺有意思，今天的葱贵了几毛钱，明天去哪家串个门，谁家的孩子又考了一百分了，越听越有滋味。”<br>“两个人过日子，哪有天天是激情的，就是两个人没话找话，然后还偏偏觉得没他不行，有些话只有从那个人的嘴里说出来，才叫日子，才叫滋味。”<br>时言感觉自己明白了什么，但还是问了他爸一个问题：<br>“要是真一点话都说不出来呢？”<br>老头想了想，看着时言的眼睛说道：<br>“那你应该就是忘了你最初对她说过的话。”  </p><h3 id="捌"><a href="#捌" class="headerlink" title="捌"></a>捌</h3><p>时言送完他爸回家已经是十点多了。<br>回到家，看见叶陌陌已经恢复了情绪，无需时言诉说，在两人到达连接范围的瞬间她已经知道了今晚的事情。<br>“时言……”叶陌陌的思绪欲言又止。<br>“陌陌，我想清楚了，不知道你怎么想的，但是我觉得这么过一辈子也不错。”时言忽然说道。<br>叶陌陌显然没有理解这个想法。<br>“孩子的话，你想要就要，我会支持你的决定，如果你不想要的话爸妈那边我去说。至于不说话……”他挠了挠头，“我还挺喜欢这样子的，还能省话费。”<br>然后他踏步上前，笑着把叶陌陌搂在怀里。<br>叶陌陌的脸猛地通红，在时言的脑海中骂道：“老夫老妻了，抱什么抱。”<br>时言没说话，只是轻轻抱着她，感受着两人思绪交融。<br>忽然，他似乎察觉了什么。<br>“我好像……知道该怎么让我说话了。”他抓住叶陌陌的肩膀，眼中带着欣喜。<br>“怎么说？”叶陌陌好奇地瞪大了眼睛。<br>“我不能说话，是因为我忘了我最初说过的话。”<br>时言清了清喉咙，重新想起自己很久未说过的，但是却藏在两人生活中点点滴滴的字眼。<br>这句话随着时间流逝填充着他们生活的每个缝隙，但是却忘了偶尔将它拿出来。<br>像是从梦境中清醒，又像是嫩芽破开冻土，时言费力地震动喉咙，将那句他好久没有说过的话再次对眼前人说出。<br>声音稚嫩如初见的情侣，语气却有被生活打磨过的温润痕迹。  </p><p>“我爱你。”</p><p>他这么说着。</p><p><strong>End</strong></p><hr><p>原文作者 微博<span class="label label-success">@山城二十四</span></p>]]></content>
    
    
    <summary type="html">&lt;p align=&quot;ceter&quot;&gt;脑子和嘴巴抢活，嘴巴敢怒不敢言？&lt;/p&gt;</summary>
    
    
    
    
    <category term="others" scheme="http://ecalose.github.io/tags/others/"/>
    
    <category term="转载" scheme="http://ecalose.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>CSS美化博客 第二期</title>
    <link href="http://ecalose.github.io/posts/17142.html"/>
    <id>http://ecalose.github.io/posts/17142.html</id>
    <published>2020-02-26T08:43:12.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Royce2019/img/img/2335206_94a1b9ce_7356_3822@1600x719.jpeg"></p><p class="note note-info">首发于酷安，再转博客上，没怎么编辑。由于酷安不支持 Markdown 所以没 TOC 之类的</p><p>第二期主要讲圆角动画</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_886f2e08_7356_3824@271x265.gif"></p><p>在此期间已经有大佬 <a href="https://www.coolapk.com/u/Moce_Hu">@Moce_Hu</a> 催更，然鹅他自己已经做了圆角动画<br>可能这就是大佬吧<br>该教程面向小白，大佬请略过全文</p><a id="more"></a><p>如果你是真的想学 css，建议通过专业方法学习，此教程只是为了帮助小白利用 css 美化博客，所以方法略微有些奇怪。也感谢对于上篇文章大佬们的评论建议!</p><!--more--><p>首先，制作圆角动画需要认识一个 css 属性 border-radius ，他用来向元素添加圆角边框。最简单的用法就是在后面加上 多少px</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先从菜单栏开始改起</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_40ed0f7d_7356_3828@1918x928.jpeg.m.jpg"></p><p>左边 HTML 代码中我们找到了对应菜单栏的一行，其中 class=”header-inner” header-inner 我们称他为类名，你会发现类名和右边 css 中对应的红色字是一样的，没错，这两个就相当于做一个标记，告诉浏览器，我这个标签需要那个 css 样式。<br>上期也有人说到既然找到了类名，为什么不直接去修改 css 代码而是新建应该文件来写？该主题本身的 css 代码非常非常多，如果你在里面改，万一哪天出错了，你得跑到你部署的平台去翻版本对比，就回变得比较麻烦，而你直接写在新文件中会变得方便很多，当然了，这方法也有缺点，比如很多样式需要加<br>!important 这是非常不好的地方</p><p>找到了对应的css接下来直接写入就行了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面的值越大，圆角也越大<br>接着找打其他元素对应的 css，依次加入代码就好啦<br>通过寻找<br>发现博客文章那个框框是 post-block</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_1ea14b4a_7356_3832@1920x1036.jpeg.m.jpg"></p><p>那就加入如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是侧边栏<br>寻找发现是<code>sidebar-inner</code></p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_f07e2f1d_7356_3836@1920x1037.jpeg.m.jpg"></p><p>加入如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar-inner</span>&#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个小坑</p><p>侧边框，也就是那个有头像的地方，这里作者放了两层东西，可以当做图层理解，如果你只是让其中一层圆角，那么另一层任然是直角<br>所以我们刚刚修改了，但是并没有完全起效果，会出现这种情况</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_61fff449_7361_3208@421x220.jpeg.m.jpg"></p><p>所以侧边栏中我们需要修改两个</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_f60854e0_9009_2345@1920x1040.jpeg.m.jpg"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15</span>p×;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于图层，推荐阅读 <a href="https://www.coolapk.com/u/%E6%88%91%E6%98%AF%E5%A4%A9%E5%B0%8F%E6%AD%A3">@我是天小正</a> 的图文，写的很好</p><p>接下来就是触碰恢复直角和阴影了<br>直角很简单，也就是不要圆角<br>那直接写 <code>border-radius = 0px;</code><br>阴影我们需要认识一个新的 css 属性<br><code>box-shadow</code>，用法如下<br><code>box-shadow: h-shadow v-shadow blur spread color inset;</code><br>其中 <code>h-shadow v-shadow</code> 是必须要写的，其他随便，那这里就不介绍其他的了<br><code>h-shadow</code> 是水平阴影的位置，那v-shadow就是垂直阴影的位置了<br>还有 <code>color</code> 说下</p><p>大家应该都懂吧，也就是阴影的颜色<br>那事情就变得简单了<br>再把这个东西加进去就好啦<br>下面是我的源码  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.header-inner</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.sidebar</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.sidebar-inner</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.comments</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但仅仅这样是不行的<br>你会发现他真的是圆角变直角，也加上了阴影，但是完全没有过度，就是硬生生的变过去</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_6eda9c46_7361_3214@292x233.gif"></p><p>丑爆了<br>那接下来我们需要给他加上动画<br>可能大家认为这过程非常非常复杂，但是看看标题如何用css的几行代码美化网站<br>所以只需要一行代码就解决啦<br>我们得先认识一个新属性<br><code>transition-duration</code>，规定某一个元素完成过渡效果需要的时间，默认是 0，所以就是没过渡效果<br>用法很简单，后面加上时间就好啦，还需要加单位<br>我们先拿菜单栏试试，比如这样写  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header-inner</span>: <span class="selector-tag">hover</span> &#123;</span><br><span class="line"><span class="attribute">transition-duration</span>: .<span class="number">5s</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>);</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就会有这样的效果</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_59053e39_7361_3218@452x376.gif" alt="aaa"></p><p>很清楚的可以看到，鼠标上去恢复直角是有过渡的了，但是鼠标移开的时候就没过渡动画了<br>看看代码，我把 transition-duration 写到了 xx:hover 里面，前面说过了，他是规定这个标签过渡需要的时间，我写入 :hover 中也就意味着只在这个标签被触碰时生效，所以我们应该不应该放入 hover 中，而应该这样  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line"><span class="attribute">transition-duration</span>: .<span class="number">5s</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header-inner</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>);</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能由于我比较菜当初就跳进了这个坑<br>那么其他的按这个修改下，就大功告成了 </p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_886f2e08_7356_3824@271x265.gif"></p><p>关于 border-radius 再说下<br>其实 transition-duration 包含了</p><p><code>border-top-left-radius</code><br><code>border-top-right-radius  </code><br><code>border-bottom-left-radius</code><br><code>border-bottom-right-radius</code>  </p><p>也就是你可以用一个来设置四个角<br>也可以每个角单独设置<br>比如这上面的一行和下面的四行效果是一样的</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_7d24f093_7361_3221@1028x568.png.m.jpg"></p><p>知道了这个东西我们还可以设置菜单栏顶上那个黑黑的东西</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_433bb9d2_7366_3371@812x660.png.m.jpg"></p><p>下面是效果</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_d9dc472f_7366_3373@384x265.gif"></p><p>虽说这个也可以直接四个角一起设置</p><p>再顺带讲个透明度吧<br>也需要认识一个新属性 opacity<br>用法也很简单，后面直接加 0～1 的小数，1 是不透明，0 是全透明<br>比如这样</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_80164241_7366_3375@1028x448.png.m.jpg"></p><p>就像这样，菜单栏有设置透明，而其他没有</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_322faf31_7366_3377@458x709.jpeg.m.jpg"></p><p>接下来附上全部源码</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_b6daa349_9009_8915@1412x2536.png.m.jpg"></p><p>番外<br>其实是先讲一点下一期的东西啦<br>首页的那个头像，在主题配置里可以开启触碰旋转，但是这里毕竟是大佬聚集地，那我们不如自己写一个</p><p>首先认识一个新属性<br>这篇图文的最后一个了<br>transform，可对元素进行旋转等<br>这次只需要用到旋转，所以也只讲这个<br>用法如下<br>transform: rotate(10deg)<br>旋转 10º<br>正的顺时针转，负的逆时针转<br>然后找到对应 css  </p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_58276f48_7366_3381@1920x1027.jpeg.m.jpg"></p><p>然后加入代码</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_0d7f20c5_7366_3383@768x548.png.m.jpg"></p><p>然后就好啦</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_2c56a3d1_7366_3385@211x223.gif"></p><p>我们还可以转多一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_809bae87_9010_5858@211x223.gif"></p><p>还可以再快一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_d446060d_7372_0258@211x223.gif"></p><p>再快一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_332021db_7372_026@211x223.gif"></p><p>好吧由于帧率限制，再快就录不出来效果了</p><p>第三期应该快来了<br>先上效果图</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_3825e33f_9010_586@1057x986.gif"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Royce2019/img/img/2335206_94a1b9ce_7356_3822@1600x719.jpeg&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;note note-info&quot;&gt;首发于酷安，再转博客上，没怎么编辑。由于酷安不支持 Markdown 所以没 TOC 之类的&lt;/p&gt;

&lt;p&gt;第二期主要讲圆角动画&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_886f2e08_7356_3824@271x265.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;在此期间已经有大佬 &lt;a href=&quot;https://www.coolapk.com/u/Moce_Hu&quot;&gt;@Moce_Hu&lt;/a&gt; 催更，然鹅他自己已经做了圆角动画&lt;br&gt;可能这就是大佬吧&lt;br&gt;该教程面向小白，大佬请略过全文&lt;/p&gt;</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="NexT" scheme="http://ecalose.github.io/tags/NexT/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
    <category term="CSS" scheme="http://ecalose.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS美化博客 第一期</title>
    <link href="http://ecalose.github.io/posts/25976.html"/>
    <id>http://ecalose.github.io/posts/25976.html</id>
    <published>2020-02-22T10:20:53.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="这密码感觉不太对, 再猜猜看" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="首发于酷安，直接复制过来，图片有防盗链看不了，还没换(其实是懒)" /><label>首发于酷安，直接复制过来，图片有防盗链看不了，还没换(其实是懒)</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="c2e611f884c9a22f5b8344109b98ee9683c90200c27bea11a689ed4347d0f302">5770475d80545b88bb081070599ee9e5ff9f71fc34ee0c1c94d0f7ee5539e7cc74c6ca7d5dd45a3a7d5ffe283213fa801aa491781d550faa0f7703fed35312905f7211b68f13665333f475d2264616ec7cfd2f0514c68af85c299bccfb3bae7d1ff9a846f27fbf7f22707ee7ce41bc6019d6fa758bb47a207351c3836ebd198a32b98c5f6a6c911914fc3c1152cf999aa82b71f3739e795da28ac5b3b1ec3694977623a66f1c103dcff636787d0f205532ccd704bd1cf5db1893aecb87dcf9be1f1b3192b5c8d8bfdd68e1c1661ed63c1722ff457d6395e211148ea87869d32432049753a3b0bb09371f06ac1166c83e3160eff038343f4dfb33a09358685763ca75eab5d814e1f231b2a410e4d338f0888672edc677bcd3a104a38fc1b81d78e221ad159f263ebc5a701d7824727afc1d6e5fac8bed8288570d91eb0019bf5b3ea23b7b24625973d646c8622480097291f5cbbef593f67e865f1132e8b097a1671d7c25a9585016478f4bdaec999ab9e018a78ad6b4445418266e666e1af251627afe2ce7824cb879a0d8311b165868feeda0e9c033fac1f31fc6e6e575b0c429aca617e8fc1ce9ccf7cbaa3cf080d81297efd41ef9b03216b86c89322bd7958d3c3d956f21679a00341fc84633892eed59fc2a9ee61d0d6fec458ee2faf3273eed57ff48d070870ea36eff66b3959ef9339c46a506ee2b798a8855d9749c136276ff9c65d9877829ef8da131e1c5aea561503fde13a21e220c21b777ce1279ff5ea3aa9c81d97410544d9b917303e2bf09d3e42d2d06477a594ad66792c23bc07ae5fb0e01ce67ed90940b43cfd855c7e0bb2094a8a22009fa2af30b04222f05a1ec5d72bb39e4ff8c19fe5ab96847bef165181a174875060b539a0302b924e69998b235b8d69950f838f7dc32cb15a6b69be6cbd64f1edef838b96316b998a1d74baca87903adb41fb219cdd4ae11d5735df69013e45cee6fd52fb05756c0615d3eddebd828c2458ebf2beaf0cc0d3752d92a8dae62b5a1ba095370fd75ec6a70a8e93464afd2423bed3ad5bf567f911f8c9e94e48211504a153a9b4a4390b98dd9dfecb12c50411e72b98c886075b1e10d98ba75b9c7749ad3aef8dcfbda809b6a615625623658ea8468c90f3ec14dbc0253df7d7637c6eefbd9982da9c13fcdec9b8963da4c855f13b94e2c7640e460613e9dcde3df0fb8d2f2f74e8aa4bbe6289599ef93e4f6d1e5276da12ee8a68dededbf31d52e15df26044c8cc394355181898c3522d504dd51e5ccbd25c755dfb1654377b883ea08c5b8490a9ac192cdcb7a60af61747dd8f63bca3ed962809d81a712b4d1afcec234e72c81986b2221911e782d8654f630209ec2de630c9fe2672a4bdebc18094443b7cdf2e4c72a277c66badb31247fc7837e11eaf0e8a8a6df92aca9c2cdcd7465d10428a2bfd97f24e7afdee9bc88f3769c98d73908e59dc36ab7517c0c29b62072b85574cc387f1f384cdd9dccd87cc97944c78b27c59702f649c4376de6107a59d285021fe6408391f30f69d19270579b77bd21f0338d3e3879b9e5822c8f7b610bf99b83469c25d843c5f3e10bbd2a55ca0e92938605a78cbfd01f8cd727c621b5ddb7b00f6572169ac685645f23cdc510c580147a90e5bcf198cfc78c6e2bfca6cb88bdc382ec1a85c429ea7adecdcd5d17cae965f3b276cebf64f8862b4fa731f86263221be195dc4dc0362256a7b998332dd7596f0041ecd9edad7f0a72d7355cb8e068d2567bcd46f1cb267f048c093a8a711aa3d86abe94a3aa6499a0492f8574e539037718357c3a83a9acbef4b18776754dbaf88c87e9b6c84d6fbce7524448844ba8d3d70d4165cfb49f11766b0096780a9377ebfb671c0a4a9504187f50355653be27eade557f1dd89951c24e0d4e4ef21418d11a4a3408fe676751eec7cb7a0d42f1fa7a2b3c3f259a85741ea79059547c328eabd936387244a9a74041920c309f92382fd4dabb02b57f1e0991824e5ab32f23752401996f35bbcec5c900dcc8805ea7f05cccf36a01c0a69b88e290730a109d5f80ff45db1c011d1275c2e379364ec60315ea7ca4d9f5dfd5a5380c74c5ecb41e49dbde2f6f5a9bb24b7f49417212bf5f459ecad20daf787ace7912c85ee8c0c4a42b158cadb89050bd238a73a76be5363691b9f6dfd2c5f357ed62e4f9f8816859e5686caa2f00fa55c312be16558b49954cfb2e7a1774784cac045be7609726cf5708575e95b4d170f0c070fded14d80a22cd22ce124132ef00f0fb41f92bd9113f75b2a17e331e67275e4a1ed6ebc403e4771320350407484f92e5365ca38c3e83889f14e1181ed6ad5a49403dae3c9734d9d055610009faa300734cf91e1d847502a73c00dec67a7506d2000c92c2d2a10d49ee10f0c6ae51bd119d9895d2e730e6a80a5e7aefdd4ff4715c76d59f36549149e235a47e2a843e15d2f76379004636db7b507113fcb3df13476b27c1a83512782889a77968362677a90688036753eea94df21b59aa99278585c73748815795ecd1594acd7326bb121e812731623e4686aea530a6c05f9cb9a98d93141a3d3e534f2f01212909c42cf04c25a99e14753b0909cf3e4f74098fa463908483a242582fe714d49dc1d8233ad5e6314e350a10d5eadda09339441255bfce092bdf23803ab6e570a95f674e734c74fb0fd9e0ebc13e6b898e9a8c2697c4f4ce62638a018791d63b4bfdd9a34b627b161301a468f5d859118fec64e0f9f47c3809c75ad4ccd5e6492ebd1e0f4218b4057889fa03093a70413904e0d26240dae247d54048c4e1c2b1a630915873bad851cd8ff42389a6962c372e46045fb460ed99c9df3379469dce9c076a9f0d6886fc30a4aa78e7965d2392b8abcd072d87b2100e9d07ac4352f30c198126c991cd17eb880246a2d892f979754c72c41575ad20589cefe18b5856d2d532371676523e4f87e2fed5008a130a4a55e37faf7cea1e6c651343a26324fc565752cc79567479b690a5f8041537eebacd9176a7a49de27eaa8580960779e1049c8615fe20d87d99a0efe3e1c6e8004fddc120866efc8f371c60d5d6d896222e9cc4bc3b83a51f146f6487eb8808ef7b0569c1051f57c2f36a26e44390e1eea1d61de91e52bd2306289cad6d49e950efa92ffce39dbb97a193c3b39846b6bb8a753b1b673856a875e24cd55da499cc63026ed82b3f104dc2089fa2ca6b15e085f2d0b1300397f59b6c3b29b6226fe013b2fe85beb18c11fbe78ba1542adb88f9f43828c1306653d0ed251f41fe0968618375b3ee2f004242e05d0ebbccb6fa4c47b51ecb861fe91d46a86b2a1cc0b7dbffaf02043dbc554334b5375a86f8c7ee0f95f5ed8eebf83148d29c57e227eae570ff4d9d39b32e854f54470440962972a57c955cdeb70b5f30c8e91a2fa1e83442bc806ae8699035541d02c931045e7d92721b3081e554a892e9d5eebb3bc363451f85c3e6c00d03de24d302306177fb39bc31f52794d557369cf4f35639898ab00696c525c28f872f7d5a1a2771a0f57070119200c513dde1732381d42db24c232d23d517f8c82ab8445c29a9afe5ccac1870f072b5afde751169037aa264b3badfcde44dcc654c430415da2c5ac3d964ecb93cd0d7c83c34011a278082788c520ec27f289f039b9b4114479cbd3ad03f46a34cbbe52e569212d050a58f6d4777edaeee66d1175eeb6bdb9317c9718a5830fced3a359152a7f963f324a316330d07c55dc151115e19fc13dad1eda4aa89b70c372e834eb2d836167dbe261374c4947312e97d4aae7e943db5b2ac040ca4eb8ea50469bc5a0b8f9efd29b55ec1864175782d13085e5f91c537b98d9cbb4376f7b1d2a1ba6ad65579491b0458f3e705ffce8c94697377f5d6870713796ad7a109976f54f06f273df8a23d2cb9e1643b06f34fd3fc4e7a7b66187e90b0d7c67b2076a391c95644aca3f8b4b9bd5c2d77f5635c09fcdfc9f9469033c55d31feab5b8342083a5bada7f34a971f2773f8b03da4fd2c3c70b67dd7b966248f39c66e03dd10641aba16cbc523f7cf47655973ca7124522bf8b19d54620f75e22a452434161e00c1b609d6c32a7f35e9d3e138b6da0a6a923b7c2d1c3353908cf8078dea2cd947f0434ce4825fbad97cb9b97a139a3fade5e3ecae10008620e490c2657ce5069a2b3d4505b930b3f44eff503cfabaf9339f18304ed134f35e9591041d75e5cd1f879f814b27e5fd4f62bec598570cc32368699d738f392d9de0eaf56448006240f09cdfcf145892230cc132428393bbee78dafa2714ea911a690257bbae546dab302fb448bb7299f06150038e0007eded08af9fd5f3b8b630395cdd4182cd840cf2902fc329ab383dd8b7fecb087b8cfece75b9811f2567617aa07f9139c04c694de61b3aa972af568b7fa20c678fa781174a4aefba148f581d4adb8fbaaf86fd4e7d02ef0f4f39127aa64f7a3859aa9df3283f5f2b4c9e7204882db5203c095466eb467add256869a48265580c055b895a2e05dd640cb1004762baa8e0835c261875397a0cb05ea22ead57d2f8a4d95bc828a883d2f28d899047c59799a2febcb6420b91ff646ae12eaad7d95df943910ddf79c003793bf6bfcc6acb1c849ef20d58983bca9afd2a1ca66c2f06b0f98e223113bb2089f6dedcb97bde64be66d9c9bd40f6c835d7e4cabb48d947b57bedf78d71b28694383b010a431d12c498cf93545bfd7f038e497ce9e7842126e90a7275d5c82e0c7cd4c028e8296a60609561867028f7473e3d3ea0c48a75b40e5a39a45306140c49dc6c217a43a6724d602807a89e92bb50845c261db1147a9dd3d95b03c29113dac81adf3dce83f09ea7aa0181c1c457b95d9af57fbd5c4c764377c065f9f27dbf4788a9e3b2ba3cb9a0448eaec5834aeb9dcaf79d8934cc646fb9b1b88856aa20ad7cb25e6a222f9434b4daa615fcef9aeb233fd2b97e25c590730b5d22ab5c2181ec6f928a5df2135589f65220d461c1d82fa53612c91a92c7231b2647b1a8c71d03a09d57408a8f9b32e33700124bcf1d368a615283d44adf166198cacdc37ca5875a267189d0c737eaf8050c1ff88f232b57cfd4d930de9ea5919188bfa57334b34d3f4d4ebcfe794819eb2928021a2bcec75a7f416859e2c88a4c977b0e75014da796338894cbc8fa3148fe6330d11266638467bd9ee60266c35f0c917c9c3654d968312c1787e1e0dee5e7d9d6b75fb5c8e065aedb00fb9a4aeb7b7dd4db612b387be61299aa05223fcebbed18ce7e00fea6d503606b18d5d087b804b2d72e52e08ea989bb5cf8d24a969f5f2b27e849685133d6cb934d22ee84e20f97056cf4a7f927cfb5bd3221a6b941c5783f91ce04a034ba1d586ec9eb19ae463c06fdfba882dfc47c5b73cb7a50ff45f34be66edbe28ab7d47e430e6c9cdba71c7c61a4e63966caf2633b4bde824675cea96b8c28f67bae45f4cf22f1e94d735c65c1113fad103dd2e3056e6d1a6b5afb30f41b92ce12f122a099a05bf4ea128884e9da6da4dbaded2e894b8d83b13d50ef0ef7329f455cf86e4cf28a275301590c1acfc4b2dea06573f6975b40933dc20741dbb6b9a410c86a66ec6107a6bc449a0f57e25c6651ac30f98c7966ab46e57e58e61bf79c1bdbd87dc25cea551bf846f459b1fe84bc172ead6b031c9522c23707d80701abb8fd348d7c194de74121733cddfcdcbbee83481fc16f840432a4581ed821ffb24b472e81d994c7a82c46f55344e3da64c4578fe598bc29d5912d90871a51691cc0ea19523fc7eafad2f10b550c903193ab8425873139a4a7636f1a933c6ed7125fad2fed8c5cb21c45afa60c75a95ce5af646b3e6e4687f2698a332de527bf51378440ba1a215be889a54ca426fbe5e59a98a934bfd901cdc1f369af08693e183269f0eca20c457d846456cd7d517cda167665c374ba87b047bcf44c309e5339013a62fbd948f09cb048db1fca15988efef817177365c8dbc8347818c99fa5a905607b0222c9bdbc4c0d84da141cf851b85673bd70f3c3f9af4f3bd8186958c60eaa9328d053645a39f0e4d9fd06acc71f069b275dc168b2e63332c36083516d4206d1721690626c7bdd0f6ddb9576cedb450a53d1d3b3f19e7573a5b5a5704953c2eb1cce593023ce02f95c772ef7da80f0ef5b14aee341877869779439f5e23d104f7825431f12e422fded31f192a788797f5cac3f9e5177e836a8c9b478b48b98c0cd7cfb0c53fc7598a2256cccdc44131827113a813374d3df60669090db1256a888fb2698b1e745c2793944b8e1a485381ee65df0deda12138fcc6dde4c0480859392002b06e28ecd47e28f51ef1a948291b585b40cf1dd05b64e17328ea4d35066fc5ad0180a58c807810d92d615c6ea4b4d68f21cc14b40029f8fbcba0b8ef88daada3ac070d7a4d0ab2e95f803e6eb5cea8a23a14e8e8f0287af4a3dc8cbe0182e48bdda9998d87a3d15d124e3993f83fa4ba6295fd3daa6903d4d2daed6faaff41f6f6160720cfb34961234655387791aa3c2c4e881ab6efd50a397d6f5415af0ca4b51f40d80e85f1e5cd3d54bf8ab9b0d5b0efad84e5afc66a21b1cfa93d7d90f4b666385ea0fb1aac63ec9e3f8be341fa207877ec7a12efc8af320ce07d778157c44e8d8d491f4ad6521f79e65d6568b3c09b1c5bd15ae1ea9dfef0021e828112963a143b09f49f0ee275a802a8c8ec0dec09ec3e996a101c8d6f6fe558ef5b61689e0581802c90bbf1a7a1d013dc51416eee069309b852446daa586cfcb39e43dbc9b232f9aa09733495b6683ec7708c64f44dcaff189cb1b60bb4bf4695a12ac7c8b32dddc1a46e1623bd74e0a704a58c02c42e208fe5d716f069710b21aab8131c3360444d65a4b2f68bb313aceab554cf605f1b8b3aa512f9d46a62feadc34f6af75459394045bdfe98cc6700a426f438ea303c3078f4963e4a7395b60540ff5a7d69e08b3f5c317493a9b6c6fa5649e1468efdb88b278680c96134144731370bb2783a8460fbdaba2061b40993fc9f5c5c5bbc37d71e74a8113b2fddfb26eac612863e7b4b401379e21f5bc74b573a568936247e4fac4c4decce43494df0e25028b0e10377c7abc13da716099c56eadc65145a46f4e6b99b800b78a2041d2bbe37e82db1bbeff6643fbab73f71406a171f4508b89061a005a50deafc1ddc9857d184409b6765d34c92cab53b92e63b9d09ea3df39c6f5183111a831ce317b8616d8e62f5f60300e51958d2ecf478b5c2787c766aea7cc526ec82b7716d29da5b05c77b17057969b9f63a5bd3c23f3cd70066765170472d4a518466fd84e605b0b1b0fbe4aa9d2833c7ef2e0d22223899b7256745b7038ed745d2806e4ce2b49cca1dd412298349407ba326af0a040bcb3015d6a2d639619a5f2fa8575d596f5fcde405ea3893c0bf8c4bad37831c570f0aa755df90202775f39951f61e1a6c2a35e50262711950593ad3a00ad313d060fa87703092ce83e3e995d3a727ba977db6a881744261921f1f85bf588dc90e458f688019b18611bd814f2e1e5efeab467b802f7dc92b4e5f00539adcd2abff19da3f0709e780966f0627bffc2007029865dd5293df529c9df76187b9dd6031296a1f7d439137d64623ae43e41f365003f84be5cd1b139e8ee813355ce42c71d1208586f5ef6fafd366076688209a8ea110dc0f56668549941decf1128a53c6825ec1a3aa0590da3cfb91e03de6b45d9eab44421dee4f7a7c76a14a182a326abba2abba5c2ee6e6be4384e6685504e6ddb5685b9110506edbb6552a58539742aa45fa3c0f1dd0241d92224196ac234ea9d38f575046cd8aeebcbf6c61da20f0fe446563e8b6512ce2cab637f52770e04ecbd06f9ae8c539db0a19c484b7fb80c155472772f2430ffc92b481f84f8ee7f07c9cf3acf229ea1c6052fcd991bd6c8bcaabea14ff75229a6329eb830d815cc87fa7537488a927aeecdaca7c9022b1de6a87dd7ab64f8f96a669950a14083049ba084e8a6d1a87f4352757d37434e9b1b735436be21207a892895f1bd43b36b8c0c7461b36f800b158ae8fc2907934149964b9c9f62e6698066178a2fe632981d94a2b4ed07d1d2ceafb035c99fc7dc4eda9e000508991cf9994a78df6ec2ca207ab96cbc27cba8ad33659ec97c072ebebf4a44eb86383765681165fb5b212e4220201faac23eb34da051057b1891ed4d88741ce97d018b5e3f88f6906a9e002b79e5ba5f4916a1a523a18e5c8efed0a6b50bf7aaacf7c134e4a26a037529de2c6babaa90bcc1ad40a3d2808525e068067383a2508454fcba01009429ebd53b479aac5f4c4e1c161e27abaa445676963660a87d800ea419ccaae5617282a58aeb1c665b86f67ab9a9c92a544460d9197261622609b3f4371070345a7804274423f64ea340f5457e840f8f29db84033f00b64169b1c8bc20490f7d0312525ee74c1f39d62e7c34b6740fb46afa5a83284883e30650e06589b2e21639204ac5da564c5d3944ddf7e15c7c32649725f8f20895e6ab2a16f410513f70486c983ff34e5eac0511b4e10ae40fc8b2e1bb541c965fec03ade31a0cf3243cd620f3cb56f67079bd22ef84b0730b5e45ac31d854cc29b02298d7d5bf62d1ea3f1d15d2d7c90686314643a31b8e6604f8cab175d40670a8e848c0b2c9ed2df8f61a680bc146da62ef3cd2dfaf9989789717f6bfc440cab1bf8c81466bb71bd2c4dd36062408f8d2872fc65545ed02e2fb188fb15ff12dd33e10d55ec9dbb7e9add87b2c72453efcfd411b9ef285280a91edd7281cd09f879c4b210f7e85c99e4cf911a16db66ea97ad29b2934c81a6c6865ca36532999d8d8bdd1e6f458cea86a616c7a45ae6639245b2f354ed20693bfd7d38b3e2c97953a09dfdc4aacbe99fc1cb999335312d15d0fd177aafac76c555e412dcb47acc7784553174fd12f039f547a3a64aa3daf32a232afd870c2bdfe5369cef8ba707dbc766860cc948f9bf4eaf88ab37887d1c38a4963838a6583b41e14877a8def3093d20123d4e71a3896babcb0d41e9abead6a55c0a1a2d3992c0531e7b4678712586e0cba1cbb3105a174557e925bdf6358b24b26dc1cbf765929744db8ea7e0c1d58c749b16d43bc1b1a27781b3f631e0f33dfaff958a4e13d2809ac279dd9874879289752cd7477864266a1bfe31d46494d9395101c39862cbfb6fe460c056142396094363194143790abfdfaec831f9be119ede8cfc02e7eb8306d873da9a743da504f5839952b7a53207d85395830cc04e6eaa15adb5847ff596457b2db6c117862efb258f2860d835cebc3af697e397f19d33efeac1fbb9fdd82b95a77b882fc45e149482c4cd97cfdcd6ad4bbaf41d869beac913ea2049bb3a501dffc7cf56767f7eb69a947b83f1430519b3a727957f22a6ffaad2a8d0ec72245cc1325ab486a6743f281115541495470b01c8672f0474947ef45d3be1aff75cc1f7fd85f1500235862e24b16a3e4abdb3f731cc52947cd7b583ad1acbde21ed0a8bd23b5137d711bae94ca2a5bc73e2c9f1ad33630d3e0d818132c342edd1d1e3534f2ba1d12c3b6f5b31c163e65987f06e22dee01f4809987d5c2e30d53829d79f4752acaf4c346ab88cb38e204a83bba708f645ee52c97158fa1e742a61421226842d35abf1acff08e031ce1f6168af5970d143aa61d4afda30329c9804c7e9c2be02d7ced12b81517a8019235abfb3778de22bb95220255805ab6d4bed2cfa01d28dfa2742b672c13727d9d79575cc9eea9aa56779f3974896f9a5f0db94ed4d2040da6cd9a9b53b4001da53bbe08afd232efcfb424146d2dba24808555bea80410984bafed1da923480c0a9598c84dfbaa0dbd4409ff5a65c4fb59371053f438900ce54b272d0e7dec5e9e833f59eed48b58d292d60f39093d8b11b076b26ebdd393cbfcc2b58f482df82b2c9529456a8733a88225b7e37842587ca1a7d75f8561aa59d135387c9de61b6adae456aedf04e9dfa018feb081815fba95d511af7c63163a7ff06b1876a700fdbb3a72aa7668979b3d43da974fada7f6a12b0d2ae4b777a3f0be4663070eaf61df9b245f07400d8e98f90ef6bb69cc57040544ed0d400aef177882a969b210bb8f391eaee770565fc255e1230080e5df0318d95f06de89b9f7c3d3fc836f24f182c6eea8955c50a665877a7b3bb061b8b4b7f41dcd7ee7138b3694f979beeca602c366ab14c95bce81e32f221ae50c82e4169ba040b62ad075733c0f307452ff85c51c9238c9707cd1c1d667a1c4dd5659a15f4e0d02d6c9c1e4b30fc1c0f087e74f416e1abc581cf1b9e65370ce7e46bbe6bd86affa1e8c1f6bdacc85cf0efec6b2b624c96ddf428f43285e19aa7cc9cd9f9a244da84293b7beedeef247e034ed75f7f66af2b53192fcbe43f67edf8423c74452fcf9c4e718f86fdb5d6e31811fdca8b8aa31c0d400655f0093f1d033d66f5d0beae5e8f9077bb9e83da0351bff978dad8af7bc2d817d4381ecce4dc69b4b390cc0162676ecbb2ecdf34ab6f775292d02e81f6d6ca3c5ee8b7b84c42620799ec54ce078b3ee79968ec7e75bab6e3b8acd7661e6b4279101b4e814cca57265d587bcd932590e03aa72df084e57302f54eec658c0613fd2b2550a6827f2a34a1b160ef84a3ccb1b5938047c5d28cbde451557447d60c4126d05942890260c82731867383ae19125b6da9fb67606c268c00d1108febc28db37681314d8f16d458aecd41d6c25c7b248767803b4992c5d9c2ae1ecbc065439b39f5f2008201bd175889ab74a1e4c7c98b3e244f6557febad4696e38d4eb8453ce25c439e964901ccbb1c52094a0900a36afdefb54f6ed2862d927d4df54b9abd824268a774fba203599c69ae454c8d0aff69d092cbc64cd9a72aa75a9299bb7bf28c524e76c0371256a1700077e7a68fcad75ee2c811bd91f63af85a25b2cebb2987b95186b13976ecce65509ff9112a464e6ffd41779a367f2e82e4afed27c5045965d4b666717cea730689b65d4dbe79cb72b20a6e3c2745df8ade9a19a493d86ef0eff008f4675d59cfc8ff81cf5fe1076aa6744d72943aaa6281e5fb88c25da4ea5e2736c740dbf48b1eee63ac865fd63f50356ceeb0067e4ba5582f588879c94d8e89e3a758818b8244c395fae6de19660923f01c5bcd7ca5e8392f77964c90b0a60e25394425c06d172b086ed56f5ce0c1e5e2b83b4a89187aedbbef621cf4700b484e09253e90fa2ca5909d801ca98e1ba421d381afa5304dcefdf058b32d70ddd605bfeeba0ecdfbac7afa99cac4373405321299c066489c1cdf8216786a06278e6e7575716afa60246717247894b27be173b81adf082e2d0327183fcfde4aa3e750b95b3c71610bb1c3942db6f89784f88ca8423dc8e95246e2af21bfe271520e8fa9bcef9395330a710909abce67bf0ce32b61a72cee388eae976e9408b2a4332518347ca8038dbbcc73558fd71cf07002247391e8c2abd567f1333a571595bb37983eaa41afd14611b1ded5af9c1ead92bd6408974ad3873b8050af2677347a2a88360cc719579670e2593d4b552360cc0d66d6f4c0d88b4c43867a3402896e7e6df44295581867d3bba71b83bf77bbd9e673a92edea9dc1aac7366737cf317a210d436397cd147d7c1f61948d3cdd2da1b800c9ad212ce7b4490892bbbd78626b0a0f147152758878762af3fa4c1138d4cee1ed35b85743cf6f33e804d3b46a3c04c27e9330f98b5b7135dde2c8648993ffa256dbb9994a2059d61fd294717efccd35bca18e43ecfeab1ba075a8dad85cdc9e9de4dbe8051c8a3359c8ff78f3375be6d437aed413281a37b660926a470f0028a206f04ce1030121c6f03817a551c0df1137ccd78dd9c779f0a981050205829d19a281b1b2414f358ac45d5aa835843d6f832aa6f8adce185ce25730e0a4a926145e9236c6bd3d047fc6a827d86968431c3170609d973099d79d559ebc98dd9bfe77c64ddaf7e584f58d95371a5406c7c3c4ea361fb95e5f8753c0fc3a170141d66faa0e0d7b4a2d6b5b43876b249b806f46794be0097c8eca891ec3798e4c196ccd9583c1baaefc221997ba81dbc56f0ae03a906cb99fb6293908b5445c8464c0a5e9cc9012ff5d597db5a06b556d5564634f0ef6865bc02d434b3e3a25dfae0805f4158673cece13741aa00f55542fcbac562322d219423c8c42ac0b3fee19dc1c576d69ebde14f33f3b89d1af2c99cf197e26d6d879f7e939e642771b260972a9818749c4bd6c4f489ac3d1e03ffbbe819be9be0a3a20530e1defbc0eba6f668f2e263524ea82f3aaa490cf9a005849f23742dc638256bc24aa6edb6ea5556810e51ffefa7177b5e259baaff5a2604e15ef24dacdafb00622b8d51a5b6048d955aacc7e4dd22efc3fe46dd29dbde30f1378655d4ad6ed94cfe07a57962496d8b41e996f6b3624cf6aa951822ca4860237d17ce40688b5bb6a5e4b4533fdcd5cf04e21f3efab4c2bfb82cf64c0e4410247ae170acace1d3030d13e513637b56b8fef0c9bdaa65d7c211f9bcffb18bf250cb6ed496b795450205a2bb0d1692f5e226816bb6f645333373ba37371b6b0099e316f6b2cafd8c6579c868102d5c996172f653b382d3c24ebbb012086288662b53e0f936a03c2ffc7de5e40b496fa73bf4a52b5dc93bef2e0a8158591a13bb4cafdb002c8aa267cd845d6add9a1fc1fd257c3117c234284b670958e2dbae1a8f5bdbef309a69d277c67d05e896184ef21e82e1bf05d8ba53fba35aec9f6eae6776f00361037d918783cd2476ec3eb01da382f154364bbbb1c7824d2081bf4ab025e26c52e6ff81349322f259d45188107dfb398efd18ae3e0bf7f6eb4bf9ca14a15c060cab536c03a26a082967483be9506222b21dd9fd97bc6a4854ef289656049663be149231c7017d7f752b2f04b6112b293ccda6640c49579b20c8f16fd0871c4a2d1c4f803a315f1b607d866d8a017bf38f555684c660e731d15f5da87aa88ad5026a38119845c64abf16441c836d600060304bec6310d5c87d8a37e53344c0f67a42db522f573dd80042defe966acd69622ddc6bcb56625dfc86c5c52cc0aa5246cbec579b0893bf6e1d9dbec33eedc6f2207cf39d17152f0a9473efc388d03f46915efae24a44b10b2f53a4b01d36a2aa39bd578211f3f0840fd1f6d814f797b23eb440570b6ffcefa005c779326f1d9bd07a409aa5023ccd0057f3d6ae65f99fc4dc9d363f9d2159cdd177440112d4af6f5d3bf4cc21d8b3f92648623d26267cb3b510fe4dbb462ffef81683fa1a132c1f69d7ef5e34adedc2a03d9c76e1c29636cf8421834a30460c0e674eb142002ec62f7d4cf0f575bf11abeeb66684d356c44d91d1aa3a0416434d0b52cf5f60d21c3ad9fca12221a36a5d48c51c9b7d6ff55ce4071063dace22758f590a29ad9d9be0d6980d9261af77dc8c465d8e7c1ee280ee3df347829e40fe60637cb66773d685bbea32cf3a965152c96be5890bca9c2f6f8d5b686abab626df6daf5d1dd6469e4f3f67c126fd02688678a44ff5efeb171beda7e5c7b053ce0664914f0537c32b2ed37b5435af4dda36942bdd6388b2e5d2ca82718d4ce0c9cd39c4b48dbac5124b6aac83902297b43cb422a06d5e8f482e9a32a7d0207293a51ba538f4f03986d7cf9fb27145cc78482a30ea53a7e929329be48dd9427e2b9fc1cb865a2ba93594e0a8b0c1e3929a089ec7e6c4340978853bcd7351dc2935eae954f3b7321a53400df3fdee7773367998e6ac7815c4c3c82c348d9a6d62554377250902fbf09546392f7d391e4f61a67acfc41369a3622a96dee9e4d35d18257329c0cae0c1c0ea0cbb10c8e0cfb6fc9f1c666559428bf7a27e71d78e08742c4d3920412189fee411d1c12eadac3ad041ae7d2a56166acd9e557320645fa3adccd4e9ca7093bc28725da148e84741d4eb1229d22a20c44bfc0095a72cb2bedead8e39e6851e92782bf1cba04e48f601adeb149234913fc125521d6d310aaf44c0853aa8830ea34bc8813344e17d2edac33c943cef5352b4dd8795487a88505a3e0871e0b4d23482da8c9d8d0e129470fde4cd72a046</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">施工中...</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="NexT" scheme="http://ecalose.github.io/tags/NexT/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
    <category term="CSS" scheme="http://ecalose.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Valine评论之微信提醒</title>
    <link href="http://ecalose.github.io/posts/22549.html"/>
    <id>http://ecalose.github.io/posts/22549.html</id>
    <published>2020-02-20T06:42:29.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>该功能基于 Leancloud 的云引擎与云函数。<br>可以提供邮件 通知站长 和 被@ 通知 的功能还支持自定义邮件模板哦![^1]</p><p>项目来自 <a href="http://www.zhaojun.im/">查看链接</a></p><p>首先你需要一个可以正常使用 Valine 的博客</p><h2 id="邮件提醒"><a href="#邮件提醒" class="headerlink" title="邮件提醒"></a>邮件提醒</h2><p><a href="https://valine.js.org/">Valine官方文档</a></p><p>首先进入 LeanCloud</p><p>华东节点的从这里进 <a href="https://tab.leancloud.cn/applist.html#/apps">查看链接</a></p><p>华北节点从这里 <a href="https://leancloud.cn/dashboard/login.html#/apps">查看链接</a></p><h3 id="修改代码库"><a href="#修改代码库" class="headerlink" title="修改代码库"></a>修改代码库</h3><p>然后进入放评论数据的那个应用，云引擎–&gt;设置–&gt;修改代码库为<br><code>https://github.com/zhaojun1998/Valine-Admin</code></p><p><img src="https://cos.royce2003.top/22549/01.webp-default"></p><p>进入部署界面，选择 Git 源码部署，</p><p><img src="https://cos.royce2003.top/22549/02.webp-default"></p><p>修改 分支或版本号为 master</p><p><img src="https://cos.royce2003.top/22549/03.webp-default"></p><p>下载最新依赖是升级用的<br>然后点击部署<br>过程会比较漫长，耐心等待当看到完成之类的字眼就好啦图片我下了个最新依赖花了我 4 分钟…..</p><p><img src="https://cos.royce2003.top/22549/04.webp-default"></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>接下来就需要配置环境变量了</p><blockquote class="blockquote-note blockquote-note__warning"><div class="blockquote-note__content"><p>环境变量配置图片已更新，请注意 SITE_URL 的值需要带 http(s)，否则邮件无法跳转</p></div></blockquote><p><img src="https://cos.royce2003.top/22549/05.webp-default"></p><p><code>SITE_NAME</code> : 网站名称<br><code>SITE_URL</code> : 网站地址, 最后不要加 / SMTP_SERVICE : 邮件服务提供商，不如QQ，163…<br><code>SMTP_USER</code> : SMTP 服务用户名，邮箱地址<br><code>SMTP_PASS</code> : SMTP 密码，不是登录密码哦，是授权码，就是超级超级坑，需要你花钱发短信才能获得的授权码!<br><code>SENDER_NAME</code> : 寄件人名称<br><code>TEMPLATE_NAME</code>：邮件的样式，可以不写这行就按默认，除了默认还有另一个样式rainbow<br>（我没提到但图片里有的环境变量先不管他）<br>支持的邮件服务商:<br><code>&quot;126&quot; &quot;163&quot; &quot;1und1&quot; &quot;AOL&quot; &quot;DebugMail&quot; &quot;DynectEmail&quot; &quot;FastMail&quot; &quot;GandiMail&quot; &quot;Gmail&quot; &quot;Godaddy&quot; &quot;GodaddyAsia&quot; &quot;GodaddyEurope&quot; &quot;hot.ee&quot; &quot;Hotmail&quot; &quot;iCloud&quot; &quot;mail.ee&quot; &quot;Mail.ru&quot; &quot;Maildev&quot; &quot;Mailgun&quot; &quot;Mailjet&quot; &quot;Mailosaur&quot; &quot;Mandrill&quot; &quot;Naver&quot; &quot;OpenMailBox&quot; &quot;Outlook365&quot; &quot;Postmark&quot; &quot;QQ&quot; &quot;QQex&quot; &quot;SendCloud&quot; &quot;SendGrid&quot; &quot;SendinBlue&quot; &quot;SendPulse&quot; &quot;SES&quot; &quot;SES-US-EAST-1&quot; &quot;SES-US-WEST-2&quot; &quot;SES-EU-WEST-1&quot; &quot;Sparkpost&quot; &quot;Yahoo&quot; &quot;Yandex&quot; &quot;Zoho&quot; &quot;qiye.aliyun&quot;</code> 就这么多啦</p><blockquote class="blockquote-note blockquote-note__danger"><div class="blockquote-note__content"><p>每次配置完环境变量需要重启容器!</p></div></blockquote><p>好啦，至此已经完成了邮件提醒!</p><h3 id="防止休眠"><a href="#防止休眠" class="headerlink" title="防止休眠"></a>防止休眠</h3><p>不过还有个小问题 LeanCloud 也是要恰饭的，当然不可能给你免费提供给这么好的服务!</p><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行<br>每天必须休眠 6 个小时</p><p>30 分钟内没有外部请求就会休眠</p><p>休眠后如果有新的外部请求才启动但是启动的第一份邮件会发送失败</p><p>如果您不缺钱请直接购买付费容器并跳过这段</p><p>正是因为大家都缺钱所以我们需要利用 LeanCloud的 云函数进行唤醒</p><p>既然必须休眠 6 个小时，那就让他休眠呗，总不可能你博客 24 小时都有人评论</p><p>首先我们需要再添加一个环境变量 <code>ADMIN_URL</code> 然后把下方 Web 主机域名给填写上</p><p><img src="https://cos.royce2003.top/22549/06.webp-default"></p><p>然后点击定时任务–&gt;创建定时任务</p><p><img src="https://cos.royce2003.top/22549/07.webp-default"></p><p>名字随便取<br>选择生产环境下的 <code>self_wake</code><br>然后cron表达式输入<br><code>0 */30 7-23 * * ?</code><br>意思是 8 点到 23 点每 30 分钟唤醒一次<br>这是我的表达式<br>大家可以按自己需求改只需要保证 6 小时的休眠就好啦<br>然后如果出问题了可以去应用日志里查看以下</p><p><img src="https://cos.royce2003.top/22549/08.webp-default"><br><img src="https://cos.royce2003.top/22549/09.webp-default"></p><p>当有人评论时，应用日志里也会显示  </p><h3 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h3><p>然后还记得刚刚的 Web 主机域名，你也可以绑定自己的域名<br>通过访问该地址你就可以管理评论啦<br>但当你打开网址时会叫你登录<br>这时候你需要去创建个用户，也就是你自己<br>只需要填写密码，username，邮箱</p><p><img src="https://cos.royce2003.top/22549/10.webp-default"><br><img src="https://cos.royce2003.top/22549/11.webp-default"></p><p>注意！邮箱才是是你的登录名！<br>不懂这是什么逻辑</p><h2 id="微信提醒"><a href="#微信提醒" class="headerlink" title="微信提醒"></a>微信提醒</h2><p>好啦，接下来时加如微信提醒[^2]了<br>首先进入 Server 酱官网注册个账号然后按官网首页绑定微信</p><p><img src="https://cos.royce2003.top/22549/12.webp-default"></p><p>第三步时测试绑定有没有成功</p><h3 id="更改代码库"><a href="#更改代码库" class="headerlink" title="更改代码库"></a>更改代码库</h3><p>然后还记得更改的代码仓库吗，将他改成这个<br><code>https://github.com/sviptzk/Valine-Admin-Server</code> 点击保存</p><p><img src="https://cos.royce2003.top/22549/13.webp-default"></p><h3 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>然后再添加一个新的环境变量 <code>SCKEY</code></p><p><img src="https://cos.royce2003.top/22549/14.webp-default"></p><p><code>SCKEY</code> 的值从这来</p><p><img src="https://cos.royce2003.top/22549/15.webp-default"></p><blockquote class="blockquote-note blockquote-note__danger"><div class="blockquote-note__content"><p>然后一定记得要进行重新部署，重启容器！</p></div></blockquote><p>大功告成，你可以在微信收到博客的评论了！</p><p>[^1]: 参考： <a href="http://www.zhaojun.im/hexo-valine-admin/">Hexo 优化 — Valine 扩展之邮件通知</a><br>[^2]: 参考： <a href="https://www.antmoe.com/posts/2380732b/index.html">Hexo 博客 valine 评论微信、qq 提醒</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于最近微博热议的手机马达</title>
    <link href="http://ecalose.github.io/posts/6f836d4e.html"/>
    <id>http://ecalose.github.io/posts/6f836d4e.html</id>
    <published>2020-02-16T11:47:10.000Z</published>
    <updated>2020-08-25T08:50:13.359Z</updated>
    
    <content type="html"><![CDATA[<p>写的很乱…不是华为黑，不是米猴，单纯个人看法<br><img src="https://i.loli.net/2020/02/17/Bx1jAwPtdhYCTRs.jpg"></p><p>如今的手机发展如此迅速，已经不再是单纯的靠一个 soc 的比拼。毕竟如今的旗舰处理器不管是苹果的 A13 还是 骁龙855 或 骁龙865，麒麟980 或 麒麟990 在性能和游戏体验上都已经不再是问题。<a id="more"></a><br><img src="https://i.loli.net/2020/02/17/CK98tiamP4hcJEf.png"></p><p><img src="https://i.loli.net/2020/02/17/GtFBOpXaDPHMh6z.jpg"><br><img src="https://i.loli.net/2020/02/17/4MKBk75XbytDH3S.jpg"><br>去年，一加干了件让人觉得不可思议的事，将 90Hz 高刷新率的屏幕作为手机买点，起初很多人认为这不利于营销，但实际销量证明了一加 90Hz 高刷新屏的成功，越来越多的厂商也开始跟进，一度成为了去年手机市场一个重要的的考量标准。这也说明了消费者从最初的只关注手机性能开始转而关注手机的一些细节体验，越来越多的消费者关系系统体验，这对消费者来说是有利的，这样厂家才会在这方面下功夫，像今年高刷新率的屏幕应该成为了旗舰机标配。  </p><p>最近 小米10 的发布，一度引发了“海啸”<br><img src="https://i.loli.net/2020/02/17/9u7hCQfNyOwbopJ.png"><br><img src="https://i.loli.net/2020/02/17/F6QG4TyBMu1tHNg.jpg"><br><img src="https://i.loli.net/2020/02/17/fzyh372eJKdiOYA.jpg"><br>别人只是说某厂商然后友商高管就开始对号入座了。。。。<br>蓝厂也开始缺德了嘿嘿嘿<br><img src="https://i.loli.net/2020/02/17/sMbcTpmWy5N3Sw4.png" alt="Snipaste_02-17_18-49-32.png"><br>也因为此事出现了嗡嗡嗡<br>什么是嗡嗡嗡，那这就要从<del>一只蝙蝠</del>小白测评的一个视频说起 </p><p><img src="https://i.loli.net/2020/02/17/Cx61Y5DerVmkgRM.jpg"><br><img src="https://i.loli.net/2020/02/17/qTS4IKcWjgPrUhb.png"></p><p>简单来说就是测试每台手机马达的声音，最后出场的 荣耀v30 出场，高能预警，“嗡嗡嗡嗡嗡嗡～～”，建议别吃饭的时候看，会喷，其他再怎么不好也还能接受，可是最后一个。。。。。噗嗤。</p><p>对于马达，很多人可能会说，再好的马达有什么用，我还不是到手就关了，巧了我原来想法也和你一样，但自从我用了 魅族16，体验到了马达带来的<del>顶级体验</del><br>魅族顶多是做到了安卓阵营中比较优秀，和苹果比，还是有差距的。</p><p>手机马达大致分为两种</p><ul><li>转子马达</li><li>线性马达</li></ul><p>转子马达，就类似于四驱车上见到的那种马达。和传统形式马达的原理相同，利用电磁感应，用电流导致的磁场驱动转子旋转产生振动。<br>早期大多数手机才用的都是这种马达<br><img src="https://i.loli.net/2020/02/17/q2Kk59diWJSCGZf.jpg"><br>其工作利用电磁感应原理，电磁力驱动马达轴心转动产生离心力使得快速旋转的马达振动，结构简单，成本低。响应速度慢，功耗大，难以控制体积，只能进行简单的振动。<br>体验不好，振起来有种拖泥带水的感觉，松松垮垮的，而且声音较大。<br><img src="https://i.loli.net/2020/02/17/jl5coBGHMVqY7Rw.jpg" alt="vivo nex的线性马达"><br><img src="https://i.loli.net/2020/02/17/MJ2lEGsqZRHDNQV.jpg" alt="左侧为iPhone5c的转子马达右侧为iPhone5"><br><img src="https://i.loli.net/2020/02/17/kzQuwfgmElnRJeW.jpg" alt="荣耀30的扁平马达"><br>至于为什么荣耀被骂这么惨，很简单，在大家看不见的地方阉割呗，扁平马达差不多是转子马达中最差的，而这种马达谁在用，红米的百元机，一千不到，用这个，完全没问题啊，而你荣耀标榜科技标杆的三千+的机子用这个。。。。。。</p><p>线性马达的工作原理类似于打桩机，是一个依靠线性形式运动的弹簧质量块，将电能直接转换为直线运动机械能的发动模块。响应速度快，可以控制频率振幅等，得意实现复杂的振动且功耗低。但是它体积大，成本高。<br><img src="https://i.loli.net/2020/02/17/9XruOTbmkQNwHq5.jpg" alt="荣耀v30"><br>而线性马达主要分为“横向线性马达”和“纵向线性马达”。纵向线性马达的行程较短，体验虽然好于普通的转子马达，但是体验不及横向线性马达。<br>其中纵向线性马达也称Z轴线性马达，依旧是圆形的，弹簧块只能上下震动。横向线性马达也称X轴线性马达，无疑更高级，虽然体积稍大但震感极为强烈，是Z轴线性马达所不能比拟的。</p><p>那么这种横向线性马达到底会带来哪些体验上的优势呢？</p><p>苹果是个非常注重细节的公司，在 iPhone7和8 上的 home 键，可能有人用了几年也不会发现塔其实是按不下去的，完全通过马达模拟按压时的感受，甚至特地为其取名 Taptic Engine<br><img src="https://i.loli.net/2020/02/17/RC8dPpDsMFnA7xI.jpg"><br><img src="https://i.loli.net/2020/02/17/l4sQIwdYVzSFrPt.jpg" alt="iPhone7的马达"></p><p>iphone7 取消了耳机孔之后，并没有把多余的空间留给电池等元件而是给了更大的 Taptic Engine 线性马达</p><p><img src="https://i.loli.net/2020/02/17/gEPDS7diCTvs9F8.jpg"><br><img src="https://i.loli.net/2020/02/17/FSJRhUlgDceHBnM.jpg"></p><p>2015年发布的 MacBook 中，触摸板应用了 Force Touch 以检测触摸板受力状况，在此基础上集成了 Taptic Engine 进行触觉反馈。从下面的拆解图我们可以看出，苹果在触摸板下面布置了四个致动器构成的小型阵列，实现了在触摸板这个小范围内的可控触觉反馈。从使用效果来看，Taptic Engine 模拟触摸板按键的实际体验能够做到以假乱真。<br><del>（这哪是以假乱真，苹果不说，没人拆开看，谁知道啊）</del></p><p>明明不能按下去，但是却给了我们一种按了下去的错觉，我在苹果店玩过，真**爽啊</p><p><img src="https://i.loli.net/2020/02/17/ck9vbFuQAXr4gq8.jpg"><br><img src="https://i.loli.net/2020/02/17/Us7wQpzC8W9KHIh.jpg"></p><p>所以优秀的横向线性马达可以模拟出真实按键的触感。当然啦，却别这两者的方法也很简单，把手机或电脑关机，再去按，因为马达的工作需要点，所以没反馈的自然就是马达啦。（不过谁没事关了机去按 home 键和触控板哇）</p><p>以后的智能手机屏幕占比肯定越来越高，甚至还出现了很多“真无孔”的概念手机，将来手机开孔的减少必定成为趋势，（其实现在也是啊，现在的手机基本上都取消了 3.5mm 耳机接口，采用 type-c 接口代替）</p><p>魅族Zero<img src="https://i.loli.net/2020/02/17/uU4lMiAENhjzoXq.jpg" alt="魅族Zero"></p><p>vivo NEX3<br><img src="https://i.loli.net/2020/02/17/bMQKnZ9qSJ6FYI2.jpg" alt="vivo NEX3"></p><p>魅族好像是真没有开孔欸，vivo 也基本做到了吧</p><p>魅族对于传统的音量键、电源键等实体按键被边框上采用压力检测技术和电容定位技术的虚拟测压按键取代。<br>vivo 采用了压力传感器阵列+多传感器计算模型的方式实现了实现音量键和电源键的功能。<br>两者均配备了X轴线性马达，在其的配合下，模拟出真实按压的触感，即使在没有实体按键的情况下也做到了很好的触感体验。</p><p>优秀的震动能够模拟出很多很多优秀的场景，这一点不仅需要硬件支持，也非常的考验厂商的调教功力。<br>比如在设定闹钟的时候，滑动那个时间，许多搭载了横向线性马达的手机会在你选择时间时进行轻微的震动模拟，给你一种真正在拨动滑轮的感觉。</p><p>还有Apple Watch的侧边滚轮，和其他产品体验一样，真**爽。它是怎么做到的？<br><img src="https://i.loli.net/2020/02/17/dFB9ICQAylXh1Su.jpg"></p><p>苹果在寸土寸金的小小的一块手表里，把将近 1/3 的位置给了马达，再配上苹果出色的算法，自然就爽啊</p><p>震动在游戏中同样重要<br><img src="https://i.loli.net/2020/02/17/791rJpMBokHEahY.jpg"><br>很多搭载横向线性马达的手机在宣传时都会宣传这一点</p><p>还有就是日常使用了，比如现在大部分全面屏手机用的手势是上滑返回桌面，上滑悬停进入多任务（至于那些短滑返回桌面，长滑进入多任务的我是真不理解，什么叫短滑什么叫长滑，每个人对此定义都不一样）。大部分手机用户如果的手机如果是转子马达基本上是不会开震动的，那怎么区分到底是算上滑还是上滑悬停呢，这就需要马达帮忙了，悬停的时候进行震动反馈，告诉用户已经可以放手了，虽然这只是一个小细节，但真的挺好的，最起码不用再担心我有没有进入多任务，悬停时间够不够等问题</p><p>那么对于我来说体验最好的是什么呢<br>是在打字的时候，打字时，优秀的振动也能带来更好的体验，优秀的手机振动在打字时，真就是像“按压在小气泡”上<br>贼爽贼舒服！！！（当然了，得适配了横向线性马达的输入法才能体会到，吐槽下 Gboard，咋还不适配啊啊啊，这么好用的输入法，要适配了我马上换过去）</p><p>除了苹果之外，最早关注手机振动细节的厂商是魅族。<br>从魅族15开始魅族就在震动方面下了功夫<br>之后的16机型上魅族还用上了“颤至灵魂，酥麻全身”这样非常形象的宣传语。<br><img src="https://i.loli.net/2020/02/17/PRz2eqCLc1h587l.jpg"><br><img src="https://i.loli.net/2020/02/17/Y6AORKdikeMxzn7.jpg"><br>去年安卓阵营大部分厂商已经开始注意到振动细节体验对于提升用户体验的重要性了<br>今年，我相信优秀的振动体验应该会普及。</p><p>关于振动体验是否重要，始终呈现出两极化态势。<br>很多人认为舒服的振动是手机必不可少的选项，用了就回不去了<br>当然还有部分人表示不在意，从来都是关掉振动来使用的<br>但是手机厂商做了总比不做好，万一那天突然想用了<br><del>俗话说的好：我可以不用，但你不能没有</del><br><del>只有消费者本着这样的心态才能促进手机厂商的进步啊</del><br>说不定这次荣耀的事情一搞，今后所有中高端机子都上了线性马达 嘿嘿嘿</p><p><del>（横向评测的标签有点虚，不过我貌似评测了线性和转子）</del></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;写的很乱…不是华为黑，不是米猴，单纯个人看法&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2020/02/17/Bx1jAwPtdhYCTRs.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;如今的手机发展如此迅速，已经不再是单纯的靠一个 soc 的比拼。毕竟如今的旗舰处理器不管是苹果的 A13 还是 骁龙855 或 骁龙865，麒麟980 或 麒麟990 在性能和游戏体验上都已经不再是问题。</summary>
    
    
    
    
    <category term="横向评测" scheme="http://ecalose.github.io/tags/%E6%A8%AA%E5%90%91%E8%AF%84%E6%B5%8B/"/>
    
    <category term="数码" scheme="http://ecalose.github.io/tags/%E6%95%B0%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android无障碍服务导致的全局卡顿分析</title>
    <link href="http://ecalose.github.io/posts/7797efbf.html"/>
    <id>http://ecalose.github.io/posts/7797efbf.html</id>
    <published>2020-02-15T15:22:55.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>文章转载自魅族系统性能优化工程师，对于某些要求开启无障碍的应用，不开源，不盈利又掌握着你系统的“最高权限”</p><a id="more"></a><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>有用户反馈，手机在滑动的时候, 列表会一抖一抖的, 滑动桌面或者设置（只要是可以滑动的），都会出现，但是这个并不是必现，而是某些用户会出现，某些用户则不会出现。</p><p>吃瓜群众可以直接拉到下面看 罪魁祸首和自检 ，对分析问题比较感兴趣的可以看一下分析的过程。</p><h1 id="Systrace-分析"><a href="#Systrace-分析" class="headerlink" title="Systrace 分析"></a>Systrace 分析</h1><p>本地测试有一台复现, 拿过来之后分析发现,手指滑动桌面或者设置,都会必现卡顿, 从 Trace 上看就是下面这样<br><a href="https://www.androidperformance.com/images/media/performancecase/15482434530990.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482434530990.jpg" alt="img"></a></p><p>红色箭头处就是掉帧的地方. 从上面的 Buffer 个数可以看到, SF没有绘制的原因是 Launcher 没有提交 Buffer 上来.</p><p>对应的 Launcher Trace 如下 , 可以看到 Launcher 没有绘制的原因是没有 Input 事件传上来. 所以 Launcher 的画面没有更新, 所以才会出现掉帧.<br><a href="https://www.androidperformance.com/images/media/performancecase/15482435308066.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482435308066.jpg" alt="img"></a></p><p>没有事件上来这个本身就是有问题的 , 我们手指是连续从屏幕上划过的, 事件的上报应该是连续的才对, 我们怀疑是屏幕报点有问题, 不过 Check 硬件之前我们首先看一下 InputReader 和 InputDispatcher 线程是否正常工作</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482435458655.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482435458655.jpg" alt="img"></a></p><p>从图中可以看到 InputReader 线程是正常工作的 , 但是 InputDIspatcher 线程却有问题, 大家可以看一下正常情况下这两个线程的对应关系</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482435564755.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482435564755.jpg" alt="img"></a></p><p>再回到有问题的那个图 , 仔细看发现 InputDispatcher 线程的周期是和 Vsync 是相同的, 也就是说, InputDispatcher 的唤醒逻辑由 InputReader 唤醒变为由 Vsync 唤醒</p><p>再仔细看的话，点开 InputDIspatcher 的线程 cpu 状态可以看到， 唤醒执行任务的 InputDispatcher 线程并不是被 InputReader 线程唤醒的, 而是被 System_Server 的 UI Thread 唤醒的.</p><p>那么接下来， 就需要从代码的角度来看为什么 InputReader 没有唤醒 InputDIspatcher 。</p><h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><p>InputReader 唤醒 InputDispatcher 线程的逻辑如下（以本例中的 Move 手势为例。），</p><p>frameworks/native/services/inputflinger/InputDispatcher.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputDispatcher::notifyMotion</span><span class="params">(<span class="keyword">const</span> NotifyMotionArgs* args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!validateMotionEvent(args-&gt;action, args-&gt;actionButton,</span><br><span class="line">                args-&gt;pointerCount, args-&gt;pointerProperties)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint32_t</span> policyFlags = args-&gt;policyFlags;</span><br><span class="line">    policyFlags |= POLICY_FLAG_TRUSTED;</span><br><span class="line"></span><br><span class="line">    android::base::Timer t;</span><br><span class="line">    mPolicy-&gt;interceptMotionBeforeQueueing(args-&gt;eventTime, <span class="comment">/*byref*/</span> policyFlags);</span><br><span class="line">    <span class="keyword">if</span> (t.duration() &gt; SLOW_INTERCEPTION_THRESHOLD) &#123;</span><br><span class="line">        ALOGW(<span class="string">&quot;Excessive delay in interceptMotionBeforeQueueing; took %s ms&quot;</span>,</span><br><span class="line">                <span class="built_in">std</span>::to_string(t.duration().count()).c_str());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> needWake; <span class="comment">//是否需要唤醒</span></span><br><span class="line">    &#123; <span class="comment">// acquire lock</span></span><br><span class="line">        mLock.lock();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (shouldSendMotionToInputFilterLocked(args)) &#123;</span><br><span class="line">            mLock.unlock();</span><br><span class="line"></span><br><span class="line">            MotionEvent event;</span><br><span class="line">            event.initialize(args-&gt;deviceId, args-&gt;source, args-&gt;action, args-&gt;actionButton,</span><br><span class="line">                    args-&gt;flags, args-&gt;edgeFlags, args-&gt;metaState, args-&gt;buttonState,</span><br><span class="line">                    <span class="number">0</span>, <span class="number">0</span>, args-&gt;xPrecision, args-&gt;yPrecision,</span><br><span class="line">                    args-&gt;downTime, args-&gt;eventTime,</span><br><span class="line">                    args-&gt;pointerCount, args-&gt;pointerProperties, args-&gt;pointerCoords);</span><br><span class="line"></span><br><span class="line">            policyFlags |= POLICY_FLAG_FILTERED;</span><br><span class="line">            <span class="comment">// SystemServer 上层要对事件进行过滤</span></span><br><span class="line">            <span class="keyword">if</span> (!mPolicy-&gt;filterInputEvent(&amp;event, policyFlags)) &#123;</span><br><span class="line">                <span class="keyword">return</span>; <span class="comment">// event was consumed by the filter</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            mLock.lock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Just enqueue a new motion event.</span></span><br><span class="line">        MotionEntry* newEntry = <span class="keyword">new</span> MotionEntry(args-&gt;eventTime,</span><br><span class="line">                args-&gt;deviceId, args-&gt;source, policyFlags,</span><br><span class="line">                args-&gt;action, args-&gt;actionButton, args-&gt;flags,</span><br><span class="line">                args-&gt;metaState, args-&gt;buttonState,</span><br><span class="line">                args-&gt;edgeFlags, args-&gt;xPrecision, args-&gt;yPrecision, args-&gt;downTime,</span><br><span class="line">                args-&gt;displayId,</span><br><span class="line">                args-&gt;pointerCount, args-&gt;pointerProperties, args-&gt;pointerCoords, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        needWake = enqueueInboundEventLocked(newEntry); </span><br><span class="line">        mLock.unlock();</span><br><span class="line">    &#125; <span class="comment">// release lock</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (needWake) &#123;</span><br><span class="line">        mLooper-&gt;wake();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意这里 ，mPolicy-&gt;filterInputEvent 直接 return了，也就是说这里如果返回 false，那么就直接 return 了， 不继续执行下面的步骤。</p><p>继续看 mPolicy-&gt;filterInputEvent</p><p>frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">NativeInputManager::filterInputEvent</span><span class="params">(<span class="keyword">const</span> InputEvent* inputEvent, <span class="keyword">uint32_t</span> policyFlags)</span> </span>&#123;</span><br><span class="line">    ATRACE_CALL();</span><br><span class="line">    jobject inputEventObj;</span><br><span class="line"></span><br><span class="line">    JNIEnv* env = jniEnv();</span><br><span class="line">    <span class="keyword">switch</span> (inputEvent-&gt;getType()) &#123;</span><br><span class="line">    <span class="keyword">case</span> AINPUT_EVENT_TYPE_KEY:</span><br><span class="line">        inputEventObj = android_view_KeyEvent_fromNative(env,</span><br><span class="line">                <span class="keyword">static_cast</span>&lt;<span class="keyword">const</span> KeyEvent*&gt;(inputEvent));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> AINPUT_EVENT_TYPE_MOTION:</span><br><span class="line">        inputEventObj = android_view_MotionEvent_obtainAsCopy(env,</span><br><span class="line">                <span class="keyword">static_cast</span>&lt;<span class="keyword">const</span> MotionEvent*&gt;(inputEvent));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// dispatch the event normally</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// The callee is responsible for recycling the event.</span></span><br><span class="line">    jboolean pass = env-&gt;CallBooleanMethod(mServiceObj, gServiceClassInfo.filterInputEvent,</span><br><span class="line">            inputEventObj, policyFlags);</span><br><span class="line">    <span class="keyword">if</span> (checkAndClearExceptionFromCallback(env, <span class="string">&quot;filterInputEvent&quot;</span>)) &#123;</span><br><span class="line">        pass = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    env-&gt;DeleteLocalRef(inputEventObj);</span><br><span class="line">    <span class="keyword">return</span> pass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里从 jni 调回到 java 层， 也就是 InputManagerService 的 filterInputEvent 方法。</p><p>com/android/server/input/InputManagerService.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Native callback.</span><br><span class="line">final boolean filterInputEvent(InputEvent event, int policyFlags) &#123;</span><br><span class="line">    synchronized (mInputFilterLock) &#123;</span><br><span class="line">        if (mInputFilter !&#x3D; null) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                mInputFilter.filterInputEvent(event, policyFlags);</span><br><span class="line">            &#125; catch (RemoteException e) &#123;</span><br><span class="line">                &#x2F;* ignore *&#x2F;</span><br><span class="line">            &#125;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    event.recycle();</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟代码流程发现, 这个 mInputFilter 是 AccessibilityInputFilter 的一个实例, 在 辅助功能里面打开开关的时候,会调用 AccessibilityManagerService 的 updateInputFilter 方法来设置 InputFilter.</p><p>android/view/InputFilter.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filterInputEvent</span><span class="params">(InputEvent event, <span class="keyword">int</span> policyFlags)</span> </span>&#123;</span><br><span class="line">    mH.obtainMessage(MSG_INPUT_EVENT, policyFlags, <span class="number">0</span>, event).sendToTarget();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> MSG_INPUT_EVENT: &#123;</span><br><span class="line">    <span class="keyword">final</span> InputEvent event = (InputEvent)msg.obj;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mInboundInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mInboundInputEventConsistencyVerifier.onInputEvent(event, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        onInputEvent(event, msg.arg1);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        event.recycle();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续看 onInputEvent(event, msg.arg1);<br>com/android/server/accessibility/AccessibilityInputFilter.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInputEvent</span><span class="params">(InputEvent event, <span class="keyword">int</span> policyFlags)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mEventHandler == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (DEBUG) Slog.d(TAG, <span class="string">&quot;mEventHandler == null for event &quot;</span> + event);</span><br><span class="line">        <span class="keyword">super</span>.onInputEvent(event, policyFlags);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    EventStreamState state = getEventStreamState(event);</span><br><span class="line">    <span class="keyword">if</span> (state == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onInputEvent(event, policyFlags);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> eventSource = event.getSource();</span><br><span class="line">    <span class="keyword">if</span> ((policyFlags &amp; WindowManagerPolicy.FLAG_PASS_TO_USER) == <span class="number">0</span>) &#123;</span><br><span class="line">        state.reset();</span><br><span class="line">        mEventHandler.clearEvents(eventSource);</span><br><span class="line">        <span class="keyword">super</span>.onInputEvent(event, policyFlags);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state.updateDeviceId(event.getDeviceId())) &#123;</span><br><span class="line">        mEventHandler.clearEvents(eventSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!state.deviceIdValid()) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onInputEvent(event, policyFlags);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (event <span class="keyword">instanceof</span> MotionEvent) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((mEnabledFeatures &amp; FEATURES_AFFECTING_MOTION_EVENTS) != <span class="number">0</span>) &#123;</span><br><span class="line">            MotionEvent motionEvent = (MotionEvent) event;</span><br><span class="line">            processMotionEvent(state, motionEvent, policyFlags);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">super</span>.onInputEvent(event, policyFlags);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event <span class="keyword">instanceof</span> KeyEvent) &#123;</span><br><span class="line">        KeyEvent keyEvent = (KeyEvent) event;</span><br><span class="line">        processKeyEvent(state, keyEvent, policyFlags);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续看 processMotionEvent</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">private void processMotionEvent(EventStreamState state, MotionEvent event, int policyFlags) &#123;</span><br><span class="line">    if (!state.shouldProcessScroll() &amp;&amp; event.getActionMasked() &#x3D;&#x3D; MotionEvent.ACTION_SCROLL) &#123;</span><br><span class="line">        super.onInputEvent(event, policyFlags);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!state.shouldProcessMotionEvent(event)) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    batchMotionEvent(event, policyFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续看 batchMotionEvent</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">batchMotionEvent</span><span class="params">(MotionEvent event, <span class="keyword">int</span> policyFlags)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;Batching event: &quot;</span> + event + <span class="string">&quot;, policyFlags: &quot;</span> + policyFlags);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mEventQueue == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mEventQueue = MotionEventHolder.obtain(event, policyFlags);</span><br><span class="line">        scheduleProcessBatchedEvents();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mEventQueue.event.addBatch(event)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    MotionEventHolder holder = MotionEventHolder.obtain(event, policyFlags);</span><br><span class="line">    holder.next = mEventQueue;</span><br><span class="line">    mEventQueue.previous = holder;</span><br><span class="line">    mEventQueue = holder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续看 scheduleProcessBatchedEvents</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">scheduleProcessBatchedEvents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mChoreographer.postCallback(Choreographer.CALLBACK_INPUT,</span><br><span class="line">            mProcessBatchedEventsRunnable, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会在下一个 Vsync 周期的时候执行 mProcessBatchedEventsRunnable , 也就是 Choreographer.CALLBACK_INPUT ， 熟悉 Choregrapher 的同学应该知道这里在做什么。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Runnable mProcessBatchedEventsRunnable = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> frameTimeNanos = mChoreographer.getFrameTimeNanos();</span><br><span class="line">        &#125;</span><br><span class="line">        processBatchedEvents(frameTimeNanos);</span><br><span class="line">        <span class="keyword">if</span> (mEventQueue != <span class="keyword">null</span>) &#123;</span><br><span class="line">            scheduleProcessBatchedEvents();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>那么代码在这里就比较清晰了， 是因为存在 AccessibilityInputFilter 导致 InputDIspatcher 线程没有被唤醒，而是把事件处理放到了下一个 Vsync 里面去处理。<br>结论</p><p>问题就在这个 Runnable 里面, 正常情况下, 如果没有打开 AccessibilityInputFilter , 那么上层不会对 Input 事件做任何的拦截, 一旦有 AccessibilityInputFilter , 那么就会走上面的逻辑, 这时候 InputDispatcher 不会跟着 InputReader 的节奏来走 , 而是跟着 Vsync 的节奏来走, 从 Trace 上也可看到这点;</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482437370372.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482437370372.jpg" alt="img"></a></p><p>那么这个 AccessibilityInputFilter 是从哪里来的呢？答案就是 Accessibility 服务，也就是常说的无障碍服务。</p><h1 id="罪魁祸首"><a href="#罪魁祸首" class="headerlink" title="罪魁祸首"></a>罪魁祸首</h1><p>经过上面的分析我们知道问题的原因是无障碍服务 ，无障碍服务的本质是为了服务哪些盲人之类的不方便操作的用户，但是某些 App 为了实现特定的功能，也加入了自己的 Accessibility 服务， 比如各大手机市场的“一键安装”功能，用户是方便了，但是用不好，也会有负面的作用，比如这一例，导致用户手机整机卡顿，不知道的用户，我估计都要退机了。</p><p>那么罪魁祸首是谁呢？目前发现有两个，一个讯飞输入法，一个是应用宝。打开 设置-系统-无障碍服务，可以看到里面的各种软件都有参与到，不过这个默认是关闭的，很多应用会引导用户去开启，许多用户不明所以，就稀里糊涂打开了。</p><p>无障碍服务页面如下：<br><a href="https://www.androidperformance.com/images/media/performancecase/15482437928005.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482437928005.jpg" alt="img"></a></p><p>关于无障碍服务有多NB，大家可以自己看看下面的弹框，这东西可以检测你的信用卡号和密码，至于短信内容、微信聊天内容那都是小 Case。</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482438028084.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482438028084.jpg" alt="img"></a></p><p>至于在这个例子里面引起整机卡顿的，就是下面这个 监听 ”执行手势“ 这个，一旦有应用监听这个的话， InputDIspatcher 线程就会走 Vsync 的周期，导致报点处理不及时，从而让滑动的对象以为这一帧没有事件进入，所以也没有内容的变更，就不会进行页面的更新，从而导致卡顿。<br><a href="https://www.androidperformance.com/images/media/performancecase/15482438143185.jpg"><img src="https://www.androidperformance.com/images/media/performancecase/15482438143185.jpg" alt="img"></a></p><h1 id="自检"><a href="#自检" class="headerlink" title="自检"></a>自检</h1><p>如果你使用的是 Android 手机，强烈建议你关掉所有的无障碍服务（如果你不需要的话），像自动安装应用这种功能，不值得你为此付出这么大的风险。这个是 Android 原生的问题，我们在 Pixle 和 其他三方手机上都有发现这个问题。</p><ol><li>关闭路径：设置-系统-无障碍服务 ， 进去后把你已经打开的都关上。</li><li>强烈建议 <strong>应用宝、讯飞输入法</strong> ，不要监听手势事件。</li></ol><h1 id="本文知乎地址"><a href="#本文知乎地址" class="headerlink" title="本文知乎地址"></a>本文知乎地址</h1><p>由于博客留言交流不方便，点赞或者交流，可以移步本文的知乎界面<br><a href="https://zhuanlan.zhihu.com/p/55585722">知乎 - Android 平台应用宝和讯飞输入法无障碍服务导致的全局卡顿分析</a></p><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>小厂系统研发工程师 , 更多信息可以点击 <a href="https://www.androidperformance.com/about/">关于我</a> , 非常希望和大家一起交流 , 共同进步 .</p><blockquote><p><strong>一个人可以走的更快 , 一群人可以走的更远</strong></p></blockquote><p>原文作者：<a href="https://androidperformance.com/">Gracker</a></p><p>原文链接：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/">https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/</a></p><p>发表日期：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/">一月 21日 2019, 12:22:22 凌晨</a></p><p>更新日期：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/">November 4th 2019, 10:42:51 pm</a></p><p>版权声明：本文采用<a href="http://creativecommons.org/licenses/by-nc/4.0/">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;文章转载自魅族系统性能优化工程师，对于某些要求开启无障碍的应用，不开源，不盈利又掌握着你系统的“最高权限”&lt;/p&gt;</summary>
    
    
    
    
    <category term="转载" scheme="http://ecalose.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="Android" scheme="http://ecalose.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 新增友链页面</title>
    <link href="http://ecalose.github.io/posts/f909dd9a.html"/>
    <id>http://ecalose.github.io/posts/f909dd9a.html</id>
    <published>2020-02-13T06:18:22.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>NexT 本身的友链放在侧栏，不能显示头像简介，只有链接，而且友链多了之后就显得非常乱，于是乎，我没可以新建一个页面来存放友链</p><a id="more"></a><h3 id="新建友链界面"><a href="#新建友链界面" class="headerlink" title="新建友链界面"></a>新建友链界面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page links</span><br></pre></td></tr></table></figure><p>这样会在 <code>/source/</code> 下创建 <code>links/index.md</code>。在文档的 <code>front matter</code> 添加 <code>type: links</code>，编辑好自己需要的友链页面内容。<br>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Friends Links</span><br><span class="line">type: links</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-heart&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;span&gt;留言添加友链&lt;/span&gt;</span></span><br><span class="line"><span class="code">  &lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">------</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">## 友链格式</span></span><br><span class="line"><span class="code">- 网站名称：Royce</span></span><br><span class="line"><span class="code">- 网站地址：https://royce2003.top</span></span><br><span class="line"><span class="code">- 网站描述：OI小白</span></span><br><span class="line"><span class="code">- 网站Logo/头像：https://royce2003.top/img/avatar.jpg</span></span><br></pre></td></tr></table></figure><h3 id="新建友链渲染文件"><a href="#新建友链渲染文件" class="headerlink" title="新建友链渲染文件"></a>新建友链渲染文件</h3><p>在 <code>/themes/next/layout/_scripts/pages/</code> 目录下建一个 <code>link.swig</code> 文件，写入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &lt;div id&#x3D;&quot;links&quot;&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            .container .main-inner &#123;</span><br><span class="line">                width: 1100px;</span><br><span class="line">            &#125;</span><br><span class="line">            .links-content&#123;</span><br><span class="line">                margin-top:1rem;</span><br><span class="line">            &#125;</span><br><span class="line">            .link-navigation::after &#123;</span><br><span class="line">                content: &quot; &quot;;</span><br><span class="line">                display: block;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br><span class="line">            .card &#123;</span><br><span class="line">                width: 45%;</span><br><span class="line">                font-size: 1rem;</span><br><span class="line">                padding: 10px 20px;</span><br><span class="line">                border-radius: 4px;</span><br><span class="line">                transition-duration: 0.15s;</span><br><span class="line">                margin-bottom: 1rem;</span><br><span class="line">                display:flex;</span><br><span class="line">            &#125;</span><br><span class="line">            @media(max-width: 1400px)&#123;</span><br><span class="line">                .card&#123;</span><br><span class="line">                    width: 40% !important;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(odd) &#123;</span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(even) &#123;</span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:hover &#123;</span><br><span class="line">                transform: scale(1.1);</span><br><span class="line">                box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);</span><br><span class="line">            &#125;</span><br><span class="line">            .card a &#123;</span><br><span class="line">                border:none; </span><br><span class="line">            &#125;</span><br><span class="line">            .card .ava &#123;</span><br><span class="line">                width: 3rem!important;</span><br><span class="line">                height: 3rem!important;</span><br><span class="line">                margin:0!important;</span><br><span class="line">                margin-right: 1em!important;</span><br><span class="line">                border-radius:4px;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header &#123;</span><br><span class="line">                font-style: italic;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                width: 100%;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a &#123;</span><br><span class="line">                font-style: normal;</span><br><span class="line">                color: #2bbc8a;</span><br><span class="line">                font-weight: bold;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a:hover &#123;</span><br><span class="line">                color: #d480aa;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header .info &#123;</span><br><span class="line">                font-style:normal;</span><br><span class="line">                color:#a3a3a3;</span><br><span class="line">                font-size:14px;</span><br><span class="line">                min-width: 0;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                white-space: nowrap;</span><br><span class="line">            &#125;</span><br><span class="line">            span.focus-links &#123;</span><br><span class="line">                font-style: normal;</span><br><span class="line">                margin-left: 10px;</span><br><span class="line">                position: unset;</span><br><span class="line">                left: 0;</span><br><span class="line">                padding: 0 7px 0 5px;</span><br><span class="line">                font-size: 11px;</span><br><span class="line">                border-color: #42c02e;</span><br><span class="line">                border-radius: 40px;</span><br><span class="line">                line-height: 24px;</span><br><span class="line">                height: 22px;</span><br><span class="line">                color: #fff !important;</span><br><span class="line">                background-color: #42c02e;</span><br><span class="line">                display: inline-block;</span><br><span class="line">            &#125;</span><br><span class="line">            span.focus-links:hover&#123;</span><br><span class="line">                background-color: #318024;</span><br><span class="line">            &#125;</span><br><span class="line">            .friends-btn&#123;</span><br><span class="line">                text-align: center;</span><br><span class="line">                color: #555!important;</span><br><span class="line">                background-color: #fff;</span><br><span class="line">                border-radius: 3px;</span><br><span class="line">                font-size: 15px;</span><br><span class="line">                box-shadow: inset 0 0 10px 0 rgba(0,0,0,.35);</span><br><span class="line">                border: none!important;</span><br><span class="line">                transition-property: unset;</span><br><span class="line">                padding: 0 15px;</span><br><span class="line">                margin: inherit;</span><br><span class="line">            &#125;</span><br><span class="line">            .friends-btn:hover&#123;</span><br><span class="line">                color: rgb(255, 255, 255) !important;</span><br><span class="line">                border-radius: 3px;</span><br><span class="line">                font-size: 15px;</span><br><span class="line">                box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);</span><br><span class="line">                background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);</span><br><span class="line">                margin: inherit;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;&#x2F;style&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;links-content&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;link-navigation&quot;&gt;</span><br><span class="line">                &#123;% for link in theme.mylinks %&#125;</span><br><span class="line">                    &lt;div class&#x3D;&quot;card&quot;&gt;</span><br><span class="line">                        &lt;img class&#x3D;&quot;ava&quot; src&#x3D;&quot;&#123;&#123; link.avatar &#125;&#125;&quot;&#x2F;&gt;</span><br><span class="line">                        &lt;div class&#x3D;&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;div&gt;&lt;a href&#x3D;&quot;&#123;&#123; link.site &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt; &#123;&#123; link.nickname &#125;&#125;&lt;&#x2F;a&gt; &lt;a href&#x3D;&quot;&#123;&#123; link.site &#125;&#125;&quot;&gt;&lt;span class&#x3D;&quot;focus-links&quot;&gt;关注&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">                        &lt;div class&#x3D;&quot;info&quot;&gt;&#123;&#123; link.info &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                        &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &#123;&#123; page.content &#125;&#125;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="修改渲染文件"><a href="#修改渲染文件" class="headerlink" title="修改渲染文件"></a>修改渲染文件</h3><p>然后修改 <code>/themems/next/layout/page.swig</code> 文件，</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;</span><br><span class="line">    &#123;%- set page_title_suffix = &#x27; | &#x27; + title %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;%- if page.type <span class="comment">=== &#x27;categories&#x27; and not page.title %&#125;</span></span><br><span class="line">      &#123;&#123;- __(&#x27;title.category&#x27;) + page_title_suffix &#125;&#125;</span><br><span class="line">    &#123;%- elif page.type <span class="comment">=== &#x27;tags&#x27; and not page.title %&#125;</span></span><br><span class="line">      &#123;&#123;- __(&#x27;title.tag&#x27;) + page_title_suffix &#125;&#125;</span><br><span class="line">      </span><br><span class="line"><span class="addition">+   &lt;!-- 友情链接--&gt;</span></span><br><span class="line"><span class="addition">+   &#123;% elif page.type === &#x27;links&#x27; and not page.title %&#125;</span></span><br><span class="line"><span class="addition">+   &#123;&#123; __(&#x27;title.links&#x27;) + page_title_suffix &#125;&#125;</span></span><br><span class="line">    </span><br><span class="line">    &#123;%- elif page.type <span class="comment">=== &#x27;schedule&#x27; and not page.title %&#125;</span></span><br><span class="line">      &#123;&#123;- __(&#x27;title.schedule&#x27;) + page_title_suffix &#125;&#125;</span><br><span class="line">    &#123;%- else %&#125;</span><br><span class="line">      &#123;&#123;- page.title + page_title_suffix &#125;&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>然后还是在这个 <code>page.swig</code> 文件中，引入刚才新建的 <code>swig</code> 页面：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elif page.type <span class="comment">=== &#x27;categories&#x27; %&#125;</span></span><br><span class="line">          &lt;div class=&quot;category-all-page&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;category-all-title&quot;&gt;</span><br><span class="line">              &#123;&#123; _p(&#x27;counter.categories&#x27;, site.categories.length) &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;category-all&quot;&gt;</span><br><span class="line">              &#123;&#123; list_categories() &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line"><span class="addition">+           &lt;!-- 友情链接--&gt;</span></span><br><span class="line"><span class="addition">+          &#123;% elif page.type === &#x27;links&#x27; %&#125;</span></span><br><span class="line"><span class="addition">+              &#123;% include &#x27;_scripts/pages/links.swig&#x27; %&#125;</span></span><br><span class="line">        &#123;% elif page.type <span class="comment">=== &#x27;schedule&#x27; %&#125;</span></span><br><span class="line">          &lt;div class=&quot;event-list&quot;&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &#123;% include &#x27;_scripts/pages/schedule.swig&#x27; %&#125;</span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">          &#123;&#123; page.content &#125;&#125;</span><br><span class="line">        &#123;%- endif %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="配置-config文件"><a href="#配置-config文件" class="headerlink" title="配置_config文件"></a>配置<code>_config</code>文件</h3><h4 id="增加友链"><a href="#增加友链" class="headerlink" title="增加友链"></a>增加友链</h4><p>最后，添加友链的话，需要在<code>主题配置文件</code>文件末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">defaultlinks:</span> <span class="comment"># 跟着身边的大佬走，努力成为小大佬</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">Neworld2002</span>     <span class="comment"># 昵称</span></span><br><span class="line">    <span class="attr">site:</span> <span class="string">https://neworld2002.github.io/</span> <span class="comment"># 友链地址</span></span><br><span class="line">    <span class="attr">info:</span> <span class="string">OI大佬</span>  <span class="comment"># 描述</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2019/03/17/5c8dff0100f07.jpg</span>    <span class="comment"># 头像地址</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">newsheep</span></span><br><span class="line">    <span class="attr">site:</span> <span class="string">http://newsheep2003.github.io/</span></span><br><span class="line">    <span class="attr">info:</span> <span class="string">社长大大</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://newsheep2003.github.io/images/apple-touch-icon.png?v=5.1.3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">friendslinks:</span> <span class="comment"># 五湖四海的朋友们</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">维他入我心</span></span><br><span class="line">    <span class="attr">site:</span> <span class="string">https://wtrwx.top</span></span><br><span class="line">    <span class="attr">info:</span> <span class="string">科技/生活日常～</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://wtrwx.top/img/avatar.png</span></span><br></pre></td></tr></table></figure><p><code>defaultlinks</code>: 对应的是 link.swig 文件中 👨‍🎓 跟着身边的大佬走，努力成为小大佬<br><code>friendslinks</code>:呼应的是 link.swig 文件中 🍭 五湖四海的朋友们<br>此处内容可以根据自己需要自行修改</p><h4 id="开启显示"><a href="#开启显示" class="headerlink" title="开启显示"></a>开启显示</h4><p>同时我们还需要在主题配置文件中开启 Links</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  # top: /top/ || signal</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  # categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line"><span class="deletion">- # links: /links/ || link</span></span><br><span class="line"><span class="addition">+ links: /links/ || link</span></span><br><span class="line">  # schedule: /schedule/ || calendar</span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br><span class="line">  about: /about/ || user</span><br></pre></td></tr></table></figure><p>然后就可以使用了！</p><hr><p><a href="https://bestzuo.cn/posts/2016690040.html">参考文章</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;NexT 本身的友链放在侧栏，不能显示头像简介，只有链接，而且友链多了之后就显得非常乱，于是乎，我没可以新建一个页面来存放友链&lt;/p&gt;</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="NexT" scheme="http://ecalose.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub 静态博客搭建教程</title>
    <link href="http://ecalose.github.io/posts/d5003dee.html"/>
    <id>http://ecalose.github.io/posts/d5003dee.html</id>
    <published>2020-02-12T04:16:55.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/02/12/kPWqXHzFxO7Tgvh.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2019 年 11 月 CSP Day1 当晚，发现身边大佬都在写游记，我也因此心血来潮，咕咕咕，几天之后我才开始写。同时又碰巧学长退役，看见了巨佬的博客，我的天哪，这完善程度，这流畅度，这内容的深度 emmm 不愧是巨佬，厚着脸皮求教程，要来一个链接，在教程的帮助下，折腾了好久终于有了自己的博客。现在距离建站已经过去了差不多 3,4 个月，博客越来越完善了 <del>(就差内容了)</del><a id="more"></a></p><p>故写下此教程，记录搭建过程和自己踩过的坑</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://hexo.io/zh-cn/">Hexo</a>是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 或 Coding 上，是搭建博客的首选框架。这里我们选用的是 <a href="https://github.com/">GitHub</a>，你没看错，<del>全球最大的同性恋交友网站</del>。Hexo 同时也是 GitHub 上的开源项目，参见： <a href="https://github.com/hexojs/hexo">hexojs/hexo</a> 如果想要更加全面的了解 Hexo，可以到其官网 <a href="https://hexo.io/zh-cn/">Hexo</a> 了解更多的细节，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><p>前面说过 Hexo 是一个静态博客框架，基于 Node.js，它将 Markdown 文章通过渲染引擎，在几秒内，即可利用靓丽的主题生成静态网页，再结合 Git 命令进行部署。这使其成为一个快速、简洁且高效的博客框架。</p><p> <del>(前面都在扯淡)</del></p><p>这是我的个人博客效果: <a href="https://royce2003.github.io/">Royce</a></p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="在Github创建仓库"><a href="#在Github创建仓库" class="headerlink" title="在Github创建仓库"></a>在Github创建仓库</h2><p>登录 <a href="https://github.com/">GitHub</a>，如果没有 GitHub 帐号，使用你的邮箱注册注册</p><p>点击 GitHub 中的右上角的 + 创建新仓库（new repository），仓库名应该为：yourname.github.io 这里的 yourname 使用你的 GitHub 帐号名称代替，这是固定写法 <strong>（文章接下来出现的yourname皆为你的GitHub账号名）</strong><br><img src="https://i.loli.net/2020/02/12/d9Ua8O1yk2AfelX.png" alt="Snipaste_2020-02-12_13-31-25.png"></p><h2 id="安装所需软件并连接-GitHub"><a href="#安装所需软件并连接-GitHub" class="headerlink" title="安装所需软件并连接 GitHub"></a>安装所需软件并连接 GitHub</h2><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/f7246b600c338744a9591cd7530fd9f9d62aa0f8.png" alt="Git"></p><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>在 <a href="https://git-scm.com/">官网</a>下载安装，安装时一路继续就好了。</p><p>安装完成后在命令行内输入 <code>git</code> 查看是否成功<br>若提示 <code>‘git’是内部或外部命令，也不是可运行的程序或批处理文件。</code> 就说明失败了。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo 基于 Node.js，Node 官网地址：<a href="https://nodejs.org/zh-cn/">Download</a> 在官网下载安装包，注意安装 Node.js 会包含环境变量及 npm 的安装<br>安装后检测 Node.js 和 npm 是否安装成功，在命令行中输入 <code>node -v</code> 和 <code>npm -v</code>:<br>（显示版本号即安装成功）<br><img src="https://i.loli.net/2020/02/12/DPsrECaUHhL6elb.png" alt="Snipaste_02-12_14-19-06.png"></p><h2 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h2><p>成功安装后在桌面右键点击 <code>Git Bash Here</code><br><img src="https://i.loli.net/2020/02/12/E5D8AtoN7FYVTkm.png" alt="Snipaste_2020-02-12_14-09-11.png"></p><p>设置user.name和user.email配置信息，<br>在弹出界面中输入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后创建 <code>SSH</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，即不设置密码</p><p>然后在 <code>C:\Users\Username\.ssh</code> 路径下找到名为 <code>id_rsa.pub</code> 的文件，就是你刚刚创建的密钥，右键用记事本打开然后复制全部内容</p><p>然后进入 GitHub 添加密钥<br><img src="https://i.loli.net/2020/02/12/vF19hOiTDaEGdWL.png" alt="Snipaste_2020-02-12_14-30-04.png"><br>将复制的内容粘贴至 Key 中，title 随便填然后点击 <code>Add SSH key</code><br><img src="https://i.loli.net/2020/02/12/lFQmqtGL51CzrT6.png" alt="Snipaste_02-12_14-31-56.png"><br>在 Git Bash 中检测 GitHub 公钥设置是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>当出现 <code>Hi,yourname! You&#39;ve successfully......</code> 则已经成功<br>这里之所以设置 GitHub 密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在 GitHub 上，私钥放置在自己的电脑里。GitHub 要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了 <strong>省去每次输入密码的步骤</strong> ，采用了 ssh，当你推送的时候，git 就会匹配你的私钥跟 GitHub 上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo 就是我们的个人博客网站的框架，我们需要在电脑里创建一个文件夹（称之为博客根目录），用来存放 Hexo 的相关文件以及博客文章，文件夹名字随意（建议不要出现中文），我文件夹名字为 <code>Hexo-Blog</code>。创建好后，__进入文件夹中__，右键进入 <code>Git Bash Here</code></p><p>（注意，之后有关操作都需要在博客根目录进入 <code>Git Bash Here</code>）</p><p>输入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="初始化博客："><a href="#初始化博客：" class="headerlink" title="初始化博客："></a>初始化博客：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>文件夹中大致如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Hexo-Bolg</span><br><span class="line">|----node_modules</span><br><span class="line">|----public</span><br><span class="line">|----scaffolds</span><br><span class="line">|---- source</span><br><span class="line">    |---- _post</span><br><span class="line">|---- themes</span><br><span class="line">|---- _config.yaml</span><br></pre></td></tr></table></figure><ol><li><code>node_modules</code> 是 <code>node.js</code> 各种库的目录，</li><li><code>public</code> 是生成的网页文件目录（一开始可能没有）</li><li><code>scaffolds</code> 里面就三个文件，存储着新文章和新页面的初始设置</li><li><code>source</code> 是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件</li><li><code>themes</code> 存放着主题文件</li><li><code>_config.yaml</code> 站点配置文件</li></ol><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>按顺序输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>Hexo命令后面会作介绍，完成后，会看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>Hexo 正在 <a href="http://localhost:4000/">http://localhost:4000</a> 运行，按 Ctrl+C 可停止</p><p>可以按住 Ctrl 用鼠标直接点链接，也可以在浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到你生成的博客了<br><img src="https://i.loli.net/2020/02/12/rZVgGTtFyXUEs43.png" alt="Snipaste_02-12_15-27-32.png"><br>但是目前只能本地预览，所以还需部署到 GitHub</p><h2 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h2><p>我们需要将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开站点配置文件 _config.yml（博客根目录中），划到最后,将 deploy 中的内容修改成下面的样子（yourname改成你GitHub的用户名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Royce2019&#x2F;Royce2019.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后我们还需要安装部署所需插件 <code>deploy-git</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后按顺序输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>全部完成后访问，恭喜，你的博客已经搭建完成，当然，只是一个雏形</p><p>博客地址： <a href="http://yourname.github.io/">http://yourname.github.io</a></p><h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><p>下面会介绍常用的Hexo命令（若有<code>==&gt;</code>则右边为简写）</p><ol><li>npm install hexo -g # 安装 Hexo</li><li>npm update hexo -g  # 升级</li><li>hexo init # 初始化博客</li><li>hexo new “mypost” ==&gt; hexo n “mypost”   # 新建文章（在 <code>/source/_posts</code> 文件夹中创建 <code>mypost.md</code> 文件）</li><li>hexo generate ==&gt; hexo g # 生成页面(页面在 public 文件夹中)</li><li>hexo server ==&gt; hexo s # 本地预览</li><li>hexo deploy ==&gt; hexo d # 部署</li><li>hexo clean # 清除缓存</li><li>hexo server # Hexo 会监视文件变动并自动更新，无须重启服务器</li><li>hexo server -s # 静态模式</li><li>hexo server -p 5000 # 更改端口</li><li>hexo server -i 192.168.1.1 # 自定义 IP</li></ol><p>配置修改后需 <code>hexo g</code> 重新生成界面，<code>hexo s</code> 本地预览过程中若对某些配置文件（好像主题配置文件可以）修改，可直接刷新本地预览页面，按 Ctrl+C 可停止本地预览</p><p>命令之间可用 <code>&amp;&amp;</code> 相连接<br>如 <code>hexo g &amp;&amp; hexo s</code> 和 <code>hexo g &amp;&amp; hexo d</code> 等等<br>当然 对于上面两种常用的命令，hexo提供了简写 <code>hexo s -g</code>（生成界面并本地预览） 和 <code>hexo g -d</code>（生成界面并部署）</p><p>对博客修改之后只有进行了部署才会发布到网上</p><h2 id="完善配置文件-config-yaml"><a href="#完善配置文件-config-yaml" class="headerlink" title="完善配置文件 _config.yaml"></a>完善配置文件 <code>_config.yaml</code></h2><p>只提供主要配置的中文<br>按 <code>Ctrl+F</code> 可进行搜索<br>(#后为注释)</p><p>首先修改网站基本信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span>          <span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span>    <span class="comment"># 网站描述</span></span><br><span class="line"><span class="attr">keywords:</span>       <span class="comment"># 网站关键词</span></span><br><span class="line"><span class="attr">author:</span>         <span class="comment"># 博客作者名字</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>将链接改为你博客域名（yourname.github.io）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br></pre></td></tr></table></figure><p>你博客文章的地址，默认为 yourname.github.io/year/mouth/day/title<br>，可自行修改<br>例如你的一篇文章叫 post，如果按照默认设置则文章地址是 xxxxxxx/2020/02/10/post<br>如果是我图片上的设置则地址是 xxxxxxx/2020/post</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br></pre></td></tr></table></figure><p>每页的文章数量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>你选择的主题，默认即为<code>landscape</code>，接下来会介绍</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><h2 id="文章编写"><a href="#文章编写" class="headerlink" title="文章编写"></a>文章编写</h2><h3 id="初识Markdown"><a href="#初识Markdown" class="headerlink" title="初识Markdown"></a>初识Markdown</h3><p>Hexo 文章使用 markdown 语法</p><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p><p>Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。</p></blockquote><p>推荐一个Markdown教程：<a href="https://segmentfault.com/markdown">教程</a></p><p>初始化的时候，已经自动帮我们创建了一个名为 <code>hello-world.md</code> 的文件 <code>.md</code> 即为markdown文章的后缀名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">---</span><br><span class="line">Welcome to [<span class="string">Hexo</span>](<span class="link">https://hexo.io/</span>)! This is your very first post. Check [<span class="string">documentation</span>](<span class="link">https://hexo.io/docs/</span>) for more info. If you get any problems when using Hexo, you can find the answer in [<span class="string">troubleshooting</span>](<span class="link">https://hexo.io/docs/troubleshooting.html</span>) or you can ask me on [<span class="string">GitHub</span>](<span class="link">https://github.com/hexojs/hexo/issues</span>).</span><br><span class="line">............</span><br><span class="line">............</span><br></pre></td></tr></table></figure><p>两个 <code>---</code> 中间的部分我们称之为 <code>Front-matter</code> ，即文章的属性，该部分来自 <code>\scaffolds\post.md</code> ,这个md文件中放着一份模板，之后用 <code>hexo n “xxx”</code> 命令新建的文件的 <code>Front-matter</code> 都来自这，我们可以自己修改该文件。  </p><p>title 标题，date 建立日期，updated 更新日期，tags 标签，categories 分类 </p><p>除了使用命令新建文章还可以自己在 <code>_post</code> 文件夹中创建 <code>.md</code> 文件，需要注意的是，使用命令创建的文章会自动帮我们写好 <code>Front-matter</code>，而手动创建的需要我们自己写。</p><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>图床一般是指储存图片的服务器，就是专门用来存放图片，同时允许你把图片对外连接的网上空间，不少图床都是免费的。<br>就是将图片传到网站上，然后在写文章时通过该网站提供的图片链接插入图片，markdown 教程中应该会提到</p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>可访问 <a href="https://hexo.io/themes/">hexo主题商店</a>挑选喜欢的主题<br>，接下来的演示采用 <a href="https://github.com/theme-next/hexo-theme-next">NexT主题</a></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>不同主题不同方式，可以查看对应主题网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>此时 <code>/themes</code> 下多了一个 <code>next</code> 文件夹，该文件夹内存放该主题文件<br>你会发现文件夹中也有一个 <code>_config.yaml</code> ，我们称之为 <code>主题配置文件</code> 。另一个是 <code>站点配置文件</code> 。这个 <code>主题配置文件</code> 以后再讲<br>安装完成之后在 <code>站点配置文件</code> 中更改主题即可</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>至此博客已经基本搭建完成，关于主题配置的详细内容下篇文章再写。<br>接下来还会写 绑定自已域名，Github+Coding 国内外双线部署，主题美化，网站SEO，搭建自己的图床等内容，虽然很多我自己带还没搞，不过已经在计划之中了，希望不要咕咕咕咕咕咕咕</p><hr><p><a href="https://zhuanlan.zhihu.com/p/80140564">参考文章</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/02/12/kPWqXHzFxO7Tgvh.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2019 年 11 月 CSP Day1 当晚，发现身边大佬都在写游记，我也因此心血来潮，咕咕咕，几天之后我才开始写。同时又碰巧学长退役，看见了巨佬的博客，我的天哪，这完善程度，这流畅度，这内容的深度 emmm 不愧是巨佬，厚着脸皮求教程，要来一个链接，在教程的帮助下，折腾了好久终于有了自己的博客。现在距离建站已经过去了差不多 3,4 个月，博客越来越完善了 &lt;del&gt;(就差内容了)&lt;/del&gt;</summary>
    
    
    
    
    <category term="教程" scheme="http://ecalose.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Hexo" scheme="http://ecalose.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>最大公约数算法之横向评测</title>
    <link href="http://ecalose.github.io/posts/aa07c4d0.html"/>
    <id>http://ecalose.github.io/posts/aa07c4d0.html</id>
    <published>2020-02-09T15:43:12.000Z</published>
    <updated>2020-08-25T08:50:13.359Z</updated>
    
    <content type="html"><![CDATA[<p>最大公约数<br>简称 <code>Gcd</code><br>当然还有一个简称 <code>hcf</code> 嘿嘿嘿<br>（可我不敢用 hcf QAQ）</p><p>求法有好多种</p><ul><li>穷举法</li><li>碾转相除法</li><li><ul><li>欧几里得算法</li></ul></li><li><ul><li>扩展欧几里得算法</li></ul></li><li>Stein 算法</li><li>碾转相减法</li><li>利用位运算（不知道叫什么，非常快就对了）</li></ul><a id="more"></a><h1 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h1><h2 id="1-穷举法"><a href="#1-穷举法" class="headerlink" title="1. 穷举法"></a>1. 穷举法</h2><p>没什么说的</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Gcd = <span class="number">1</span>, minn = min(a, b);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=minn; i++)</span><br><span class="line">        <span class="keyword">if</span> (!a%i &amp;&amp; !b%i)</span><br><span class="line">            Gcd = i;</span><br><span class="line"><span class="keyword">return</span> Gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-辗转相除法"><a href="#2-辗转相除法" class="headerlink" title="2. 辗转相除法"></a>2. 辗转相除法</h2><p>又称为 <code>欧几里得算法</code></p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$$<br>Gcd(a,;b) = Gcd(b,;a;mod;b)<br>$$</p><p>其中，a <code>mod</code> b是a除以b所得的余数。</p><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><blockquote><ol><li><p>充分性：<br> 设 g 是 a,b 的公约数，则 a,b 可由 g 来表示：<br> a = xg, b = yg (x,y为整数)<br> 又，a 可由 b 表示（任意一个数都可以由另一个数来表示）：<br> a = kb + r (k 为整数，r 为 a 除以 b 所得余数)<br> =&gt; r = a - kb = xg - kyg = (x - ky)g<br> 即，g 也是 r 的约数。<br> 这样，g 就是 (b, r) 即 (b, a mod b) 的公约数。</p></li><li><p>必要性：<br> 设g是 (b, a mod b) 的公约数，类似于 1.，同样可以推出 g 也是 (a, b) 的公约数。</p></li></ol><p>综合 1.2.可得 (a, b) 和 (b, a mod b) 的公约数是一样的，当然最大公约数也是一样的。</p></blockquote><p>代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 碾转相除(递归写法)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> Gcd2(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//碾转相除(迭代写法)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd3</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = b;</span><br><span class="line">        b = a % b;</span><br><span class="line">        a = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充:<br>（看大佬博客发现的，以下内容均来自 <a href="https://baike.baidu.com/item/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/2029414?fromtitle=%60%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E7%AE%97%E6%B3%95%60&fromid=1053275">百度百科</a>和 <a href="https://www.cnblogs.com/drizzlecrj/archive/2007/09/14/892340.html">大佬博客</a>）<br><code>扩展欧几里得算法</code>（英语：Extended Euclidean algorithm）是<code>欧几里得算法</code>（又叫辗转相除法）的扩展。<br>已知整数 a、b，<code>扩展欧几里得算法</code>可以在求得a、b的最大公约数的同时，能找到整数 x、y （其中一个很可能是负数），使它们满足<code>贝祖等式</code>，即<br>$$<br>ax + by = Gcd(a,;b)<br>$$</p><p>如果 a 是负数，可以把问题转化成<br>$$<br>| a | ( -x )     + by = Gcd(| a |,;b)<br>$$<br>然后令x’ = (-x)。</p><p>通常谈到最大公约数时，我们都会提到一个非常基本的事实：给予二个整数 a、b，必存在整数 x、y 使得 ax + by = Gcd(a,b)。<br>有两个数 a,b，对它们进行辗转相除法，可得它们的最大公约数——这是众所周知的。然后，收集辗转相除法中产生的式子，倒回去，可以得到 ax+by=Gcd (a,b) 的整数解。<br>扩展欧几里得算法可以用来计算模反元素(也叫模逆元)，而模反元素在 <code>RSA</code> 加密算法中有举足轻重的地位。</p><p>代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exGcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) &#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r = exGcd(b, a % b, x, y);</span><br><span class="line">    <span class="keyword">int</span> t = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = t - a / b * y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把这个实现和 Gcd 的递归实现相比，发现多了下面的 x,y 赋值过程，这就是扩展欧几里德算法的精髓。<br>可以这样思考:<br>对于<br>$$<br>a’ = b, b’ = a % b<br>$$<br>而言，我们求得 x, y使得<br>$$<br>a’x + b’y = Gcd(a’, b’)<br>$$<br>由于<br>$$<br>b’ = a % b = a - a / b * b<br>$$<br>(注：这里的/是程序设计语言中的除法)<br>那么可以得到:<br>$$<br>a’x + b’y = Gcd(a’, b’)\⟹<br>bx + (a - a / b * b)y = Gcd(a’, b’) = Gcd(a, b)\⟹<br>ay +b(x - a / b<em>y) = Gcd(a, b)<br>$$<br>因此对于 a 和 b 而言，他们的相对应的 p，q 分别是 y 和 (x-a/b</em>y)</p><h2 id="3-Stein-算法"><a href="#3-Stein-算法" class="headerlink" title="3. Stein 算法"></a>3. Stein 算法</h2><p>（以下内容参考 <a href="https://www.cnblogs.com/drizzlecrj/archive/2007/09/14/892340.html">大佬博客</a>）</p><h3 id="欧几里得算法缺陷"><a href="#欧几里得算法缺陷" class="headerlink" title="欧几里得算法缺陷"></a>欧几里得算法缺陷</h3><p>欧几里德算法是计算两个数最大公约数的传统算法，他无论从理论还是从效率上都是很好的。但是他有一个致命的缺陷，这个缺陷只有在大素数时才会显现出来。 </p><p>考虑现在的硬件平台，一般整数最多也就是 64 位，对于这样的整数，计算两个数之间的模是很简单的。对于字长为 32 位的平台，计算两个不超过32位的整数的模，只需要一个指令周期，而计算 64 位以下的整数模，也不过几个周期而已。但是对于更大的素数，这样的计算过程就不得不由用户来设计，为了计算两个超过 64 位的整数的模，用户也许不得不采用类似于多位数除法手算过程中的试商法，这个过程不但复杂，而且消耗了很多 CPU 时间。对于现代密码算法，要求计算 128 位以上的素数的情况比比皆是，设计这样的程序迫切希望能够<font color="red">抛弃除法和取模</font>。 （注：说到抛弃除法和取模，其实辗转相除法可以写成减法的形式）</p><h3 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h3><p>Stein 算法由 J. Stein 1961 年提出，这个方法也是计算两个数的最大公约数。和欧几里德算法 算法不同的是，Stein 算法只有整数的移位和加减法，这对于程序设计者是一个福音。 </p><p>为了说明 Stein 算法的正确性，首先必须注意到以下结论： </p><p>Gcd(a,a) = a，也就是一个数和他自身的公约数是其自身<br>Gcd(ka,kb) = k Gcd(a,b)，也就是最大公约数运算和倍乘运算可以交换，特殊的，当 k=2 时，说明两个偶数的最大公约数必然能被 2 整除。</p><h3 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h3><p>1、如果 An=Bn,那么 An(或Bn)<em>Cn 是最大公约数,算法结束<br>2、如果 An=0，Bn 是最大公约数，算法结束<br>3、如果 Bn=0，An 是最大公约数，算法结束<br>4、设置 A1=A、B1=B 和 C1=1<br>5、如果 An 和 Bn 都是偶数，则 An+1=An/2，Bn+1=Bn/2，Cn+1=Cn</em>2 (注意，乘 2 只要把整数左移一位即可，除 2 只要把整数右移一位即可)<br>6、如果 An 是偶数，Bn 不是偶数，则 An+1=An/2，Bn+1=Bn，Cn+1=Cn(很显然啦，2 不是奇数的约数)<br>7、如果 Bn 是偶数，An 不是偶数，则 Bn+1=Bn/2，An+1=An，Cn+1=Cn(很显然啦，2 不是奇数的约数)<br>8、如果 An 和 Bn 都不是偶数，则 An+1=|An-Bn|/2，Bn+1=min(An,Bn)，Cn+1=Cn<br>9、n 加 1，转 1</p><h3 id="C-的实现"><a href="#C-的实现" class="headerlink" title="C++的实现:"></a>C++的实现:</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd4</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">0</span>) <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; b % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span> * Gcd4(a &gt;&gt; <span class="number">1</span>, b &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>)  <span class="keyword">return</span> Gcd4(a &gt;&gt; <span class="number">1</span>, b);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> Gcd4(a, b &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> Gcd4(<span class="built_in">abs</span>(a - b), min(a, b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考虑欧几里德算法，最恶劣的情况是，每次迭代 a = 2b -1,这样，迭代后，r= b-1。如果 a 小于 2N，这样大约需要 4N 次迭代。而考虑 Stein 算法，每次迭代后，显然 AN+1BN+1≤ ANBN/2，最大迭代次数也不超过 4N 次。也就是说，迭代次数几乎是相等的。但是，需要注意的是，对于大素数，试商法将使每次迭代都更复杂，因此<font color="red">对于大素数 Stein 将更有优势</font></p><h2 id="4-辗转相减法"><a href="#4-辗转相减法" class="headerlink" title="4. 辗转相减法"></a>4. 辗转相减法</h2><p>即尼考曼彻斯法</p><p>若 a &gt; b，则 a = a - b<br>若 b &gt; a，则 b = b - a<br>若 a == b，则 a(或b) 即为最大公约数<br>若 a != b，则回到 1</p><h3 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h3><blockquote><p>设<br>a = bq1 + r1 (0 &lt; r1 &lt; b)<br>b = r1q2 + r2 (0 &lt; r2 &lt; r1)<br>r1 = r2q3 + r3 (0 &lt; r3 &lt; r2)<br>……<br>只要 r1, r2, r3…… 不是 0 就可以继续写下去<br>我们看到：<br>b &gt; r1 &gt; r2 &gt; r3 &gt; …… &gt; 0<br>b 是有限的 r1, r2, r3 是整数<br>所以至多 b 步后，必有 rn = 0<br>rn - 2 = rn - 1qn + rn<br>rn - 1 = rn * qn + 1 + 0<br>由此可以得到 (a, b) = rn<br>(来自百度百科)</p></blockquote><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 辗转相减法（递归写法）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd5</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? Gcd5(a-b, b) : Gcd5(a, b-a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 辗转相减法（迭代写法）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd6</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(a != b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b)</span><br><span class="line">            a = a - b;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            b = b - a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-利用位运算"><a href="#5-利用位运算" class="headerlink" title="5.利用位运算"></a>5.利用位运算</h2><p>不会证明，也没找到证明，直接上代码</p><h3 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd7</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">　　<span class="keyword">while</span>(b^=a^=b^=a%=b);</span><br><span class="line">　　<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是不是超短，但是非常快</p><h1 id="运行时间对比"><a href="#运行时间对比" class="headerlink" title="运行时间对比"></a>运行时间对比</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试代码</span></span><br><span class="line"><span class="comment">// 对于同种算法仅测试递归写法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 穷举法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Gcd1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> Gcd = <span class="number">1</span>, minn = <span class="built_in">std</span>::min(a, b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>; i&lt;=minn; i++)</span><br><span class="line">        <span class="keyword">if</span> (!a%i &amp;&amp; !b%i)</span><br><span class="line">            Gcd = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 碾转相除(递归写法)</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> Gcd2(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd4</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">0</span>) <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; b % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span> * Gcd4(a &gt;&gt; <span class="number">1</span>, b &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>)  <span class="keyword">return</span> Gcd4(a &gt;&gt; <span class="number">1</span>, b);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> Gcd4(a, b &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> Gcd4(<span class="built_in">abs</span>(a - b), <span class="built_in">std</span>::min(a, b));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 辗转相减法（递归写法）</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd5</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? Gcd5(a-b, b) : Gcd5(a, b-a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd7</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(b^=a^=b^=a%=b);</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> time=<span class="number">0</span>;</span><br><span class="line">    LARGE_INTEGER nFreq;</span><br><span class="line">    LARGE_INTEGER nBeginTime;</span><br><span class="line">    LARGE_INTEGER nEndTime;</span><br><span class="line">    QueryPerformanceFrequency(&amp;nFreq);</span><br><span class="line">    QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">77353649739</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> b = <span class="number">2147483647</span>;</span><br><span class="line">    Gcd1(a, b);</span><br><span class="line"></span><br><span class="line">    QueryPerformanceCounter(&amp;nEndTime);</span><br><span class="line">    time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;运行时间：&quot;</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">&quot;ms\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><blockquote><p>Gcd1(a, b) 运行时间：14641.3 ms<br>Gcd2(a, b) 运行时间：0.0007 ms<br>Gcd4(a, b) 运行时间：0.0051 ms<br>Gcd5(a, b) 运行时间：0.0057 ms<br>Gcd6(a, b) 运行时间：0.0017 ms<br>Gcd7(a, b) 运行时间：0.0007 ms</p></blockquote><p>可见<code>辗转相除法</code>与<code>利用位运算</code>的两个算法最快。</p><p>那么加大数据，再次比较这两种算法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">18446344013706551617</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b = <span class="number">12416744005372551613</span>;</span><br></pre></td></tr></table></figure><p>多次运行结果：</p><blockquote><p>Gcd2(a, b) 运行时间：0.0007~0.0008 ms</p><p>Gcd7(a, b) 运行时间：0.0002~0.0005 ms</p></blockquote><p>可见利用位运算的算法是最快的，<del>又短又快</del> 嘿嘿嘿</p><h1 id="2-20更新"><a href="#2-20更新" class="headerlink" title="2.20更新"></a>2.20更新</h1><p>加大数据，并用 Linux 内置 time 测试时间</p><p>数据越加越大</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;辗转相除</span><br><span class="line">real    0m0.014s</span><br><span class="line">user    0m0.000s</span><br><span class="line">sys     0m0.016s</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;位运算</span><br><span class="line">real    0m0.013s</span><br><span class="line">user    0m0.000s</span><br><span class="line">sys     0m0.016s</span><br></pre></td></tr></table></figure><p>好像也没差多少啊？</p><p>还是我测的方法不对</p><p>测试方法如下：</p><p>两个方法分两个文件写</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> Gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">1844674407370955143</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b = <span class="number">1844674407370955137</span>;</span><br><span class="line">    Gcd(a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(b^=a^=b^=a%=b);</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">1844674407370955143</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b = <span class="number">1844674407370955137</span>;</span><br><span class="line">    Gcd(a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后命令行 <code>g++ test1.cpp -o test1</code> 和 <code>g++ test2.cpp -o test2</code></p><p>然后 <code>time ./test1</code> 和 <code>time ./test2</code></p><p>（应该没错啊）</p><hr><ol><li>部分介绍内容来源<a href="https://baike.baidu.com/">百度百科</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;最大公约数&lt;br&gt;简称 &lt;code&gt;Gcd&lt;/code&gt;&lt;br&gt;当然还有一个简称 &lt;code&gt;hcf&lt;/code&gt; 嘿嘿嘿&lt;br&gt;（可我不敢用 hcf QAQ）&lt;/p&gt;
&lt;p&gt;求法有好多种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;穷举法&lt;/li&gt;
&lt;li&gt;碾转相除法&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;欧几里得算法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;扩展欧几里得算法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stein 算法&lt;/li&gt;
&lt;li&gt;碾转相减法&lt;/li&gt;
&lt;li&gt;利用位运算（不知道叫什么，非常快就对了）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
    <category term="横向评测" scheme="http://ecalose.github.io/tags/%E6%A8%AA%E5%90%91%E8%AF%84%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>再见 2019，你好 2020</title>
    <link href="http://ecalose.github.io/posts/ac33bbfd.html"/>
    <id>http://ecalose.github.io/posts/ac33bbfd.html</id>
    <published>2019-12-31T15:59:59.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="上"><a href="#上" class="headerlink" title="上"></a>上</h3><p>19 年的上半年，备战中考。<br>初三了，能明显感觉到大家都开始认真了。初三上学期感觉自己一直不在状态，没考好，慢慢紧张起来。<br>在学校天天听老师念叨<br>下学期状态慢慢调整回来了，也不再那么紧张，每天两点一线的生活已经习惯了，班级里也不再像以前一样。</p><p>记得考前几个星期，好朋友出现<del>感情问题</del>，放学后在车站帮他疏导疏导，之后便聊起了人生，他中考之后就要去加拿大了，或许再也见不到。当时约定他努力学习考进多伦多大学，我也努力进多伦多，这样就又可以做同学了。现在再看，这或许是对离别的安慰，但又或许是前进的动力。他送了我个高达，我送了他个火石挂件，他的高达我还在，但不知道我的火石挂件如何了。</p><p>不知不觉便到了中考前夕，记得那个晚上和一个学姐一个学长聊了很多，也对高中生活有了更多的了解。虽说讲的大部分是关于高中的阴暗面，但我心中仍满怀对高中生活的憧憬</p><p>第二天中考，到学校，居然买了可乐棒棒糖给我们！！不过好像是等到考完才发给我们，后面才知道是班主任自己掏的钱。</p><p>中考那几天，除了第一科的时候比较紧张，后面都还好，时间很快，转眼就考完了，之后便开始玩了。后面不怎么记得了，貌似当天下午就几个人出去玩了。</p><p>毕业典礼在光华大礼堂举行，听着校长的唠叨，但却不觉得烦，老师们还精心录制了视频，也为我们做了视频，很尴尬的是2班的集体照和我们班的弄个错了，不过还是很感动。结束之后回到班级，班级里开了一个小 party，请来了各科老师，拍了合照，成功与各科老师合了影！</p><p>到了出成绩那天，早一起来我爸就来问我成绩出了没，查成绩的时候手都在抖，703，感觉和预期差不多，再问了下其他同学，感觉考的还不错，接着就开始等通知书。</p><h3 id="下"><a href="#下" class="headerlink" title="下"></a>下</h3><p>记得那时候进了几个二中新生群，有人预测报送班分数线 700，也有人说更高，对此我也抱着随缘的态度，进了那就运气好，没进也没什么关系。之后又在群里看到信息社的人，加了好友了解了一番，便加入了信息社。</p><p>7 月 10 号，独自一人去学校机房面基<del>（害怕）</del></p><p>由于没去过，不认识路，群里一个叫李乐禛的人在校门口等我。</p><p>那是我第一次见到乐禛，一见面好尴尬哦，之后就被他带到了 6 楼，在机房门口看见了老师和另外几个人，进去之后随便找了个地方坐下，在乐禛的指导下成了一名 <code>OIer</code> ？</p><p><img src="https://cos.royce2003.top/ac33bbfd/01.webp-default"></p><p>过了没几天收到了通知书，然后去学校报到，然后就开始衔接课了。陆陆续续信息社的人也多了起来。没想到还有小学同学，双胞胎姐姐妹妹，完了小学分的清清楚楚，现在完全分不清了。</p><p>之后是一个三天的军训，第一天身体原因咕了，军训完也认识了班里许多人。没去基地可惜了。</p><p>之后便正式上课了。</p><p>九月初因为考试放学早，一起同校的许多人商量着回去看老师。回到了 M1，那熟悉的校门，熟悉的教学楼，熟悉的操场，勾起了我心底的伤感。走上熟悉的楼梯，走过熟悉的走廊，透过窗户，看到了我们和蔼的廖老师，挺着大肚子还在坚持工作，她在监考也就没交她出来了。然后去了秀珠办公室，听他吐槽这一届的差劲，回想起她原来对我们说的话：“你是我们带过最差的一届。”，xswl。几个月没见，就感觉已经老了好多，或许是因为更操心了吧。</p><p>九月十号再回母校看老师，秀珠带学生去军训了，没见到。这次和我们美丽的前段长和可爱年轻的小黄妈一起体验了下学校的高级会议室（据说校长单独找人谈话用的）。还见到了永远年轻的晓晶，我们一起在里面聊了许多，时而吐槽其他老师时而聊聊现在。</p><p>还是 M1 好啊！</p><p><img src="https://cos.royce2003.top/ac33bbfd/02.webp-default"><br><img src="https://cos.royce2003.top/ac33bbfd/03.webp-default"><br><img src="https://cos.royce2003.top/ac33bbfd/04.webp-default"><br><img src="https://cos.royce2003.top/ac33bbfd/05.webp-default"><br><img src="https://cos.royce2003.top/ac33bbfd/06.webp-default"></p><p>11 月中旬参加了 CSP，没考好但收获很大。</p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这一年失去了很多，同时也收获了很多。</p><p>人生就是这样吧，有了失去才会有收获。 有得必有失，有失必有得。 得到了成熟，就失去了天真；得到知识，就失去了汗水；得到了城市的喧嚣，就失去了乡村的宁静。</p><p>但失去也意味着得到：磨练换来成长，勤奋带来收获。</p><blockquote><p>我一向在思考，一向在挣扎，我不明白，人为什么一向在追求，却又一向在失去，这样的得与失之间，我们究竟得到了什么，又失去了多少，得与失之间我们又该怎样去权衡，我们是否该为了不失去而不追求，为了多得到而少给予，这一切纠结的思绪在我为自我的理想而追求时得到了理清，我的经历告诉我：追求是对人生最好的诠释，我们在追求时应对得失，在得失之间收获一切。所以此刻，我很坦然，我明白，在一次次的得失较量之间，我将学会一些东西，一些会在我的前进之路上为我披荆斩棘的东西，它们将是我人生中最宝贵的财富。 –《得失之间》</p></blockquote><p>新的一年，朝着自己的理想，努力奋斗!</p><p>祝大家在新的一年里心想事成</p><p><img src="https://cos.royce2003.top/ac33bbfd/07.webp-default"></p>]]></content>
    
    
    <summary type="html">再见 2019，你好 2020</summary>
    
    
    
    
    <category term="Royce" scheme="http://ecalose.github.io/tags/Royce/"/>
    
    <category term="总结" scheme="http://ecalose.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>P1346 电车</title>
    <link href="http://ecalose.github.io/posts/1e08804e.html"/>
    <id>http://ecalose.github.io/posts/1e08804e.html</id>
    <published>2019-12-10T14:00:50.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>在一个神奇的小镇上有着一个特别的电车网络，它由一些路口和轨道组成，每个路口都连接着若干个轨道，每个轨道都通向一个路口（不排除有的观光轨道转一圈后返回路口的可能）。在每个路口，都有一个开关决定着出去的轨道，每个开关都有一个默认的状态，每辆电车行驶到路口之后，只能从开关所指向的轨道出去，如果电车司机想走另一个轨道，他就必须下车切换开关的状态。</p><p>为了行驶向目标地点，电车司机不得不经常下车来切换开关，于是，他们想请你写一个程序，计算一辆从路口 A 路口 B 最少需要下车切换几次开关。</p><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行有 3 个整数 2&lt;=N&lt;=100，1&lt;=A，B&lt;=N，分别表示路口的数量，和电车的起点，终点。</p><p>接下来有 N 行，每行的开头有一个数字 Ki(0&lt;=Ki&lt;=N-1)，表示这个路口与 Ki 条轨道相连，接下来有 Ki 个数字表示每条轨道所通向的路口，开关默认指向第一个数字表示的轨道。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出文件只有一个数字，表示从 A 到 B 所需的最少的切换开关次数，若无法从 A 前往 B，输出 -1。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 2 1</span><br><span class="line">2 2 3</span><br><span class="line">2 3 1</span><br><span class="line">2 1 2</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>其实非常简单啦，只需将开关默认指向的轨道的边权赋值为 0，其他为 1。</p><p>然后跑一边 <code>spfa</code> 就好了。</p><p><code>spfa</code> 没死！！！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 500010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483647</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[MAXM];</span><br><span class="line"><span class="keyword">int</span> n,m,s,ki,cnt,A,B;</span><br><span class="line"><span class="keyword">int</span> head[MAXN],vis[MAXN],dis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">q.push(A);</span><br><span class="line">dis[A] = <span class="number">0</span>;</span><br><span class="line">vis[A] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">vis[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=edge[i].next) &#123;</span><br><span class="line"><span class="keyword">int</span> v = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;</span><br><span class="line">dis[v] = dis[u] + edge[i].w;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">vis[v] = <span class="number">1</span>;</span><br><span class="line">q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dis[B]==INF ? <span class="number">-1</span> : dis[B];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">edge_add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">cnt++;</span><br><span class="line">edge[cnt].next = head[u];</span><br><span class="line">edge[cnt].to = v;</span><br><span class="line">edge[cnt].w = w;</span><br><span class="line">head[u] = cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; A &gt;&gt; B;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ki;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=ki;j++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">edge_add(i,m,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">edge_add(i,m,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; spfa();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>黄题++</p><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1346">P1346 电车 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;在一个神奇的小镇上有着一个特别的电车网络，它由一些路口和轨道组成，每个路口都连接着若干个轨道，每个轨道都通向一个路口（不排除有的观光轨道转一圈后返回路口的可能）。在每个路口，都有一个开关决定着出去的轨道，每个开关都有一个默认的状态，每辆电车行驶到路口之后，只能从开关所指向的轨道出去，如果电车司机想走另一个轨道，他就必须下车切换开关的状态。&lt;/p&gt;
&lt;p&gt;为了行驶向目标地点，电车司机不得不经常下车来切换开关，于是，他们想请你写一个程序，计算一辆从路口 A 路口 B 最少需要下车切换几次开关。&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>P1194 买礼物</title>
    <link href="http://ecalose.github.io/posts/55a00e88.html"/>
    <id>http://ecalose.github.io/posts/55a00e88.html</id>
    <published>2019-12-07T11:37:02.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>又到了一年一度的明明生日了，明明想要买 B 样东西，巧的是，这 B 样东西价格都是 A 元。</p><p>但是，商店老板说最近有促销活动，也就是：</p><a id="more"></a><p>如果你买了第 I 样东西，再买第 J 样，那么就可以只花 $K_{I,J}$ 元，更巧的是，$K_{I,J}$ 竟然等于 $K_{J,I}$。</p><p>现在明明想知道，他最少要花多少钱。</p><!--more--><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行两个整数，A,B。</p><p>接下来B行，每行 B 个数，第 I 行第 J 个为 $K_{I,J}$。</p><p>我们保证 $K_{I,J}=K_{J,I}$,并且 $K_{I,I}=0$。</p><p>特别的，如果 $K_{I,J}=0$，那么表示这两样东西之间不会导致优惠。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，为最小要花的钱数。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>输入 #2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">0 2 4</span><br><span class="line">2 0 2</span><br><span class="line">4 2 0</span><br></pre></td></tr></table></figure><p><strong>输出 #2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>样例解释 22</p><p>先买第 22 样东西，花费 33 元，接下来因为优惠，买 1,31,3 样都只要 22 元，共 77 元。</p><p>（同时满足多个“优惠”的时候，聪明的明明当然不会选择用 44 元买剩下那件，而选择用 22 元。）</p><p>数据规模</p><p>对于$30%$的数据,$1 \le B \le 10$。</p><p>对于$100%$的数据,$1 \le B \le 500,0 \le A,K_{I,J} \le 1000$。</p><p>2018.7.25 新添数据一组</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><del>典型阅读理解题</del></p><p>B 个商品，都是 A ……….</p><p>一道最小生成树题，非常佩服出题者的思想%%%</p><p>谁能把买东西和最小生成树结合起来呢（最短路写 a+b 的大佬除外）</p><p>好题啊，在机房写的时候，几位巨佬都说是好题</p><p>认真读题发现 <code>x-y</code> 的边权其实就是买了之后再买 y 的价格</p><p>或者买了 y 之后再买 x 的价格</p><p>那这样就很好做了</p><p>不过这题的输入和普通的题不一样，普通题给的是一组一组的边，而这题给了个邻接矩阵 ，为了方便我在输入的时候转成了用结构体来存</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,w;</span><br><span class="line">&#125;edge[MAXM];</span><br><span class="line"><span class="comment">// B 为邻接矩阵的边长 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=B;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=B;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">            <span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">            ++cnt;</span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">0</span>) edge[cnt].w = A;</span><br><span class="line">            <span class="keyword">else</span> edge[cnt].w = t;</span><br><span class="line">            edge[cnt].u = i;</span><br><span class="line">            edge[cnt].v = j;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>存图完成，接下来跑一遍 <code>kruskal</code> 就 ok 了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x] = find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=B;i++)</span><br><span class="line">f[i] = i;</span><br><span class="line">sort(edge+<span class="number">1</span>,edge+cnt+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(sum+<span class="number">1</span>==B)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">int</span> x = find(edge[i].u);</span><br><span class="line">    <span class="keyword">int</span> y = find(edge[i].v);</span><br><span class="line">    <span class="keyword">if</span>(x!=y) &#123;</span><br><span class="line">        f[x] = y;</span><br><span class="line">        sum++;</span><br><span class="line">        ans += edge[i].w;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这么简单？当然不可能，这时候再认真思考下 <code>ans</code> 存的是什么？</p><p>边的权值相加，那权值表示商品的价格，可总共 B 个商品，但我们直连了 B-1 条边，所以最后还要加上一个商品的原价 A。</p><p>那么让 <code>ans</code> 的初值为 A 即可</p><p>综上，把代码合起来，整理下就 ok 了。</p><p>然后我就 90 分了 QAQ</p><p>最后一个点 wa 了？</p><p>下个测试点</p><blockquote><p>输入数据</p><p>3 3<br>0 4 4<br>4 0 4<br>4 4 0</p><p>输出数据</p><p>9</p></blockquote><p>问题马上就出来了，商品原价 3 元，可买了某一个再买另一个居然还要 4 块？<del>促销不应该更便宜吗</del></p><p>那既然这样，当权值大于 A 的时候就把 A 作权值，修改下存图的代码就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=B;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=B;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">            <span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">0</span> || t&gt;A) edge[cnt].w = A;</span><br><span class="line">            <span class="keyword">else</span> edge[cnt].w = t;</span><br><span class="line">            edge[cnt].u = i;</span><br><span class="line">            edge[cnt].v = j;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>最后附上 AC 代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 25000000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,A,B,cnt,ans,sum;</span><br><span class="line"><span class="keyword">int</span> f[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,w;</span><br><span class="line">&#125;edge[MAXM];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x] = find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=B;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=B;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">            <span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">0</span> || t&gt;A)<span class="comment">// 注意 t&gt;A 则存入 A</span></span><br><span class="line">                edge[cnt].w = A;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                edge[cnt].w = t;</span><br><span class="line">            edge[cnt].u = i;</span><br><span class="line">            edge[cnt].v = j;</span><br><span class="line">        &#125;</span><br><span class="line">    ans += A;<span class="comment">// 注意 ans 的初值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=B;i++)</span><br><span class="line">        f[i] = i;</span><br><span class="line">    sort(edge+<span class="number">1</span>,edge+cnt+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum+<span class="number">1</span>==B)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> x = find(edge[i].u);</span><br><span class="line">        <span class="keyword">int</span> y = find(edge[i].v);</span><br><span class="line">        <span class="keyword">if</span>(x!=y) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            f[x] = y;</span><br><span class="line">            ans += edge[i].w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1194">P1194 买礼物 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;又到了一年一度的明明生日了，明明想要买 B 样东西，巧的是，这 B 样东西价格都是 A 元。&lt;/p&gt;
&lt;p&gt;但是，商店老板说最近有促销活动，也就是：&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>P3385【模板】负环</title>
    <link href="http://ecalose.github.io/posts/fd36a626.html"/>
    <id>http://ecalose.github.io/posts/fd36a626.html</id>
    <published>2019-11-28T16:00:00.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[^1]</p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>暴力枚举 / SPFA / Bellman-ford / 奇怪的贪心 / 超神搜索</p><p>寻找一个从顶点 11 所能到达的负环，负环定义为：一个边权之和为负的环。</p><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p><strong>本题有多组数据</strong></p><p>第一行一个正整数 T 表示数据组数，对于每组数据：</p><p>第一行两个正整数 N, M，表示图有 N 个顶点，M 条边</p><p>接下来 M 行，每行三个整数 $a, b, w$，表示 $a \rightarrow b$ 有一条权值为 w 的边（若 w&lt;0 则为单向，否则双向）。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 T 行。对于每组数据，存在负环则输出一行 <code>YE5</code>(不含引号)，否则输出一行 <code>N0</code>(不含引号)。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3 4</span><br><span class="line">1 2 2</span><br><span class="line">1 3 4</span><br><span class="line">2 3 1</span><br><span class="line">3 1 -3</span><br><span class="line">3 3</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">3 1 -8</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">N0</span><br><span class="line">YE5</span><br></pre></td></tr></table></figure><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>$n\le 2000，m\le 3000，-10000\le w \le 10000，T\le 10$。</p><p>建议复制输出格式中的字符串。</p><p>本题数据感谢 @<a href="https://www.luogu.com.cn/user/5643">negiizhao</a> 的精心构造，请不要使用玄学算法。</p><p>本题数据有更新。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>方法很简单，我用的 <code>SPFA</code>，新增一个数组存每个点的入队次数，当某点的入队次数超过点的总数 n，即说明存在负环。</p><!--more--><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 500010</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,u,v,w,cnt,T;</span><br><span class="line"><span class="keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;edge[MAXM&lt;&lt;<span class="number">1</span>];<span class="comment">//相当于MAXM*2</span></span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fill(dis+<span class="number">1</span>,dis+n+<span class="number">1</span>,INF);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line"></span><br><span class="line">q.push(<span class="number">1</span>);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">vis[u] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=edge[i].next) &#123;</span><br><span class="line"><span class="keyword">int</span> v = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;</span><br><span class="line">dis[v] = dis[u] + edge[i].w;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">q.push(v);</span><br><span class="line">vis[v] = <span class="number">1</span>;</span><br><span class="line">num[v]++;</span><br><span class="line"><span class="keyword">if</span>(num[v]&gt;n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">edge[++cnt].to=v;</span><br><span class="line">edge[cnt].w=w;</span><br><span class="line">edge[cnt].next=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(T--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">0</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line"><span class="keyword">if</span>(w&gt;=<span class="number">0</span>) add(v,u,w);</span><br><span class="line">add(u,v,w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(spfa())</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;YE5&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;N0&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是<strong>若w&lt;0则为单向，否则双向</strong>。所以 w 为 0 时为<code>双向边</code>。当时被卡了半天 emm</p><p><a href="/posts/4d5decec.html">例题传送门</a></p><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3385">P3385 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;[^1]&lt;/p&gt;
&lt;h4 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h4&gt;&lt;p&gt;暴力枚举 / SPFA / Bellman-ford / 奇怪的贪心 / 超神搜索&lt;/p&gt;
&lt;p&gt;寻找一个从顶点 11 所能到达的负环，负环定义为：一个边权之和为负的环。&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>P2136 拉近距离</title>
    <link href="http://ecalose.github.io/posts/4d5decec.html"/>
    <id>http://ecalose.github.io/posts/4d5decec.html</id>
    <published>2019-11-27T16:00:00.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote><p>我是源点，你是终点。我们之间有负权环。 ——小明 </p></blockquote><a id="more"></a><p>负环的 <del>经验题</del> and <del>语文阅读理解？</del></p><p>此题中的 w 为减少的距离，与正常的不同。</p><p>结合输入输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入样例</span><br><span class="line">3 3</span><br><span class="line">1 2 3</span><br><span class="line">2 3 -1</span><br><span class="line">3 1 -10</span><br><span class="line">输出</span><br><span class="line">-2</span><br></pre></td></tr></table></figure><p>再画两张图<br><img src="https://cos.royce2003.top/4d5decec/01.webp-default"></p><p><img src="https://cos.royce2003.top/4d5decec/02.webp-default"></p><p>这时你就会发现只需将 <code>-w</code> 当作权值进行最短路运算即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 50010</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,u,v,w,cnt,T;</span><br><span class="line"><span class="keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;edge[MAXM&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fill(dis+<span class="number">1</span>,dis+n+<span class="number">1</span>,INF);</span><br><span class="line">q.push(<span class="number">1</span>);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">vis[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=edge[i].next) &#123;</span><br><span class="line"><span class="keyword">int</span> v = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;</span><br><span class="line">dis[v] = dis[u] + edge[i].w;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">q.push(v);</span><br><span class="line">vis[v] = <span class="number">1</span>;</span><br><span class="line">num[v]++;</span><br><span class="line"><span class="keyword">if</span>(num[v]&gt;n) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Forever love&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; dis[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">edge[++cnt].to=v;</span><br><span class="line">edge[cnt].w=w;</span><br><span class="line">edge[cnt].next=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">add(u,v,-w);</span><br><span class="line">&#125;</span><br><span class="line">spfa();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后你就 wa 一个点。<br>让我们再认真看看题目，只能小明主动吗？小红也可以主动点啊，所以再从 n 开始跑一次就可以 ac 了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 50010</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,u,v,w,cnt,T;</span><br><span class="line"><span class="keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;edge[MAXM&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">fill(dis+<span class="number">1</span>,dis+n+<span class="number">1</span>,INF);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">q.push(s);</span><br><span class="line">vis[s] = <span class="number">1</span>;</span><br><span class="line">dis[s] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">vis[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=edge[i].next) &#123;</span><br><span class="line"><span class="keyword">int</span> v = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;</span><br><span class="line">dis[v] = dis[u] + edge[i].w;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">q.push(v);</span><br><span class="line">vis[v] = <span class="number">1</span>;</span><br><span class="line">num[v]++;</span><br><span class="line"><span class="keyword">if</span>(num[v]&gt;n) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Forever love&quot;</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">edge[++cnt].to=v;</span><br><span class="line">edge[cnt].w=w;</span><br><span class="line">edge[cnt].next=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">add(u,v,-w);</span><br><span class="line">&#125;</span><br><span class="line">spfa(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> mi=dis[n];</span><br><span class="line">    spfa(n);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;min(mi,dis[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此绿题++</p><p><a href="/posts/fd36a626.html">模板传送门</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我是源点，你是终点。我们之间有负权环。 ——小明 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="http://ecalose.github.io/tags/OI/"/>
    
    <category term="c++" scheme="http://ecalose.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://ecalose.github.io/posts/helloworld.html"/>
    <id>http://ecalose.github.io/posts/helloworld.html</id>
    <published>2019-11-24T07:43:27.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>2019 年 11 月 24 日，用 Hexo 搭建了我的第一个博客，并写下了第一篇文章</p><p>$$<br>Hello; World<br>$$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;你好世界&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">庆祝我的 Hexo 博客诞生😃</summary>
    
    
    
    
    <category term="Royce" scheme="http://ecalose.github.io/tags/Royce/"/>
    
  </entry>
  
  <entry>
    <title>2019 CSP 游记</title>
    <link href="http://ecalose.github.io/posts/d66957d.html"/>
    <id>http://ecalose.github.io/posts/d66957d.html</id>
    <published>2019-11-23T16:00:00.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>OI第一年，不忘初心砥砺前行！</p><a id="more"></a><h3 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h3><p>第一次参加 CSP，贼激动。</p><p>早上七点多前往二路做 k108 去动车站（我貌似是最迟到的….）动车上左边 cjl 右边 zy（小声bb：看cjl调他那个游戏手柄半天搞不好有点好笑）在车上写了会儿模板，途中加林突然好心指了个错误<del>（吓到我了）</del>。很快“前方到站—-福州！”　</p><p>途中拍了几段超治愈的视频，强迫症极度舒适。<br>之后便坐公交到了酒店。</p><p>上车前</p><blockquote><p>lz：“带零钱了吗”（手里拿着好几个硬币掂啊掂）<br>我们：“嗯嗯嗯”</p></blockquote><p>马上上车时</p><blockquote><p>lz：“带零钱了吗”x2<br>（手里掂硬币）x2<br>我们：“嗯嗯嗯”x2</p></blockquote><p>lz超级贴心哇！！不过大家貌似都带了</p><p>吐槽酒店前台，我和 zyy 的身份证应该是第二个递过去的，结果倒数第三个办好入住<del>cao</del>，被安排在了 801（七（八）人的聚集地 我 zyy ljj czx hjj hyy cxyu （ljz））。</p><p>中午在酒店门口一个转角的饭店随便吃了点（烧麦贼坑人，我 zyy czx hjj都被坑到了 czyu 貌似也有，当然还有 ljj 被皮蛋瘦肉粥坑到了）此处也成了之后几天吃早饭的地方（酒店早餐真的真的没东西吃）。</p><p>和服务员的对话</p><blockquote><p>“我的烧麦能先拿过来吗”<br>“好的马上”<br>…….几分钟过去了<br>“<del>在？</del>我的烧麦能先拿过来吗”<br>“好的马上”<br>…….几分钟过去了<br>“我的烧麦还没拿过来吗？”<br>“马上来了”<br>“（大声起来）前面问了几遍了都说马上，怎么还没来？”<br>…..10s 后烧麦到了….</p></blockquote><hr><p>下午貌似打了会儿电竞就去三中试机了（测试电脑能不能编译运行程序之类的），不会高精 a+b，就只好打个普通 a+b 和并查集练手（几分钟就结束了），之后还剩很多时间，xzt 还教了我高精 a+b，感谢！感谢！<br>还见到了 zzq 大神的照片%%%</p><p><img src="https://cos.royce2003.top/d66957d/01.webp-default"></p><p>回到酒店，由于蓝咕咕是学仔，还没来，于是乎我们又开始电竞了，801 再次聚集一大批人（貌似每天都很多人）<br>时间飞快，晚上就到了，在美团点了份外卖（送的好慢啊）。。。。<br>然后忘记干了什么。。。。</p><p>很快蓝咕咕和朱先生到了，于是乎，和列东中学的一起开了个小会（考前注意），蓝咕咕讲师。电脑莫名被征用（蓝鸟电脑貌似没法连电视，<del>然后为什么不征用 lz 电脑？（求解答）</del>）中途蓝鸟按 f11 想编译运行，然后没反应，再按，还是没反应，我终于忍不住伸出手想去先按下 Fn，结果。。。朱先生的奶茶被我打翻了。。啊啊啊啊我的电脑。。。不过貌似并没有撒电脑上。。差一点点。。。还好。接着讲了fc的用法。。<del>又翻车了</del>。。这次我的锅，配 vscode 的时候乱搞了环境变量，然后就出现诡异问题了（终于在 11 月 19 号解决了，时隔4天<del>咕咕咕</del>）<br>　　<br><img src="https://cos.royce2003.top/d66957d/02.webp-default"><br>　<br><img src="https://cos.royce2003.top/d66957d/03.webp-default"></p><p>大概十点多结束了（应该是）<br>貌似是社长上的最后一节课了难过呜伤心呜呜呜X﹏x</p><p>几个人又一起回了 801 开始了深夜学习！！</p><p><img src="https://cos.royce2003.top/d66957d/04.webp-default"></p><p>十一点多蓝鸟来了（以为来<del>扫黄</del>查房）<del>没想到</del>端了个电脑来一起学习（忘记lz有没有来了）吐槽下酒店的床，真的真的太轻了吧，我们两人坐地上靠着床都靠不住 emmmm 不过地上垫个毯子坐在确实舒服，快十二点蓝鸟回去睡觉了，又剩下了我们几个。。。<br>然后开始尝试拍⭐⭐（福州污染大，几乎没有⭐）</p><p><img src="https://cos.royce2003.top/d66957d/05.webp-default"></p><p><img src="https://cos.royce2003.top/d66957d/06.webp-default"><br>　　<br>那个晚上，板子刷了一遍，最短路弱化打了好几遍，普通版的也打了好几遍（因此上蓝）</p><p><img src="https://cos.royce2003.top/d66957d/07.webp-default"></p><p>重载那部分真的不理解啊，只好背下来咯</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pos,dis;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a.dis&lt;dis;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;node&gt; q;</span><br></pre></td></tr></table></figure><p>默了五六遍终于记住了 emmm</p><p>接下来的事记不大清楚了。依稀记得<br>czx 床上躺了一会儿，起来吐槽固体传音快（貌似是这样）<br>然后 hjj 也睡了会儿<br>hyy 在我和 zyy 下棋的时候睡了一小会儿<br>czyu 早就睡了，可能睡到十二点多 or 一点多<br>ljj 也躺了会儿，估计没睡<br>zyy 没躺也没睡（好像）<br>我躺了会儿没睡</p><p>三点多不行了，我和 zyy 去隔壁房价睡觉了，说好四点十分叫我两，然后我醒来？？？zyy 呢？一看 4:20 了，记得四点 5 6分 的时候还在和 zyy 讲话啊。。。。房间莫名多出 cxyu，问 hyy：“咋不叫我？”“看你睡着了就没叫”。。好暖心啊。<br>再回到 801，linjj 还在学，hjj 睡着了，于是乎我和 zyy 又开始学，突然莫人手机开始响。。。。hjj 的闹钟。。。貌似她自己并没有听到（带耳机的缘故？）<br>cao 本以为一下就停了。。。。一直不停<br>啊，这 hjj 对自己太狠了吧（虽说没什么用），然后 cxyu 和 hyy 赶来拿走了她的手机，可还有闹钟咋办<del>砸了</del>关机√顺便取消关机闹钟。hjj 就这样<del>再也没醒了</del></p><p>大概四点左右催完 ljj 去睡觉，我 zyy czx来到了 6 楼，准备睡觉，然后莫名开始学 and 玩？准备结束了，cxyu 发来图片说天花板有东西闪？？？<del>吓到我了</del>其实是个报警器</p><p><img src="https://cos.royce2003.top/d66957d/08.webp-default"></p><p>好吧，去楼上康康，又溜到八楼，一翻沟通，最终觉得她也先去6楼，想顺便去 801 拿个电脑去学，然后房卡在 zyy 那，cxyu 去拿我在楼上等。。。。她跑 7 楼去了。。。，后面我自己下去拿了，然后<del>潜入</del> 801 <del>偷</del>电脑。尴尬的事来了，桌面 上<del>zyy</del> 和 hjj 的和 luojj 的电脑（luojj 12:30 送电脑来给我们用，大好人！感谢！前面忘记说了实名举报 hjj 玩了 luojj 的电脑游戏<del>不得不说那声音太好听了</del>），然后发现两台电脑都关了，没有密码 emmmm，cxyu 瞄了一眼 hjj，看她睡得那么香嘻嘻嘻，偷来 hjj 的电脑走到床边，<del>一脸奸笑</del>把<del>邪恶的</del>手伸向hjj…..（脑补画面）（其实就是拿 hjj 手指解锁emmm）受不鸟了，我溜到走廊静静等等……然后她空手出来了……什么都没偷到，空手去了 6 楼（第二天发现 luojj 电脑根本没锁 emmmm）</p><p>到了 610，然后我貌似还学了一会，cxyu 说要学，我：“五分钟就好”……十分钟之后我还在看…..貌似又过了几分钟，啊终于结束了，上床睡觉。可怜的 czx 只好和我挤一张了（我睡着之前看他貌似是睡了，不知道后面怎么了）。<br>（12点之后是不是要写到 Day1 哇）</p><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h3><p>早上六点多手机突然想起来，一看，我妈？？？接电话之后才知道昨天给 lz 留电话叫起床的时候留成我妈的了。。。。好尴尬呀。去了昨天中午吃饭的地方买了烧麦。<br>临走前写了个 <code>DFS</code></p><p><img src="https://cos.royce2003.top/d66957d/09.webp-default"></p><p>前往福州三中。　一进去，哇好大呀，这教学楼太有排面了。<br><img src="https://cos.royce2003.top/d66957d/10.webp-default"><br><img src="https://cos.royce2003.top/d66957d/11.webp-default"><br>but 机房要爬 6 楼差评。进去之前开始失忆 <code>priority</code> ？<code>prio</code>？？<code>pr</code>？等等怎么读？？<br>完了完了。。。。。完全忘记，然后进考场，priority，瞬间又记起来了……</p><p>进去第一件事 整理桌面<br>建个文件夹，桌面上能放进去的都塞了进去，留个考试文件</p><p>拿到解压密码，开始猜特殊含义 emmmm 貌似没有<br>开始看 t1 <a href="https://www.luogu.org/problem/P5657">格雷码</a>。。看不懂题目，放弃 。<br>t2 <a href="https://www.luogu.org/problem/P5658">括号树</a>，看懂题目了，<code>括号匹配+子串</code> 还在 <code>树</code> 上？？括号匹配的题做过，子串也做过类似的，可搞在一起不会写啊，关键是还在树上，告辞。等等，这数据范围妙啊，是条 <code>链</code>，嘻嘻，那貌似可做。。。。四十分钟过去了。。。写崩了，放弃<br>开始 t3 <a href="https://www.luogu.org/problem/P5659">树上的树</a>。。。题目也看懂了，不会写。。wait？？？又有 <code>链</code> ，再次开始骗分。。。40 分钟过去了。。崩了（甚至想些冒泡排序）<br>过去差不多一个半小时了，什么都还没写出来，逐渐炸毛。。重回t1看题目，终于看懂题目了，貌似可做，先是想到递推，尝试写了下。。。又崩了，然后开始写递归，大概四十分钟写了部分分的，然后突然想到题目的顺序逆序（我以为要排序。。）然后觉得刚刚都写错了，删删删。。。开始怀疑人生，周围大佬们都在猛烈地敲打键盘，就我一个蒟蒻。。。<br>然后开始准备找规律，找啊找找啊，貌似快推出来了，开始激动，然后。。没然后了。。剩差不多一小时，一题没写出来，万般无奈下开始 <code>打表</code> ，然后瞄了一眼数据范围，前 50 分 2^10？？？1024。。再加上 2^9 2^8…….两千多行了吧。。。思索一会后觉得程序打表，把刚刚的模拟稍微改了改，完成！！15 分钟后终于好了，两千多行！第一次打这么多啊（应该也是最后一次），吐出一口<del>浊气</del>全身轻松。<br>差不多半小时后结束，出去听巨佬们的谈话，貌似大家都觉得不简单。</p><p>考完后还参观了三中，挺漂亮的（肚子咕咕咕）<br>中午随便点了个外卖吃，下午在电竞中度过<del>4399 真好玩</del>，晚上邹哥在醉得意请吃饭,吃的超好！！</p><p><img src="https://cos.royce2003.top/d66957d/12.webp-default"></p><p><img src="https://cos.royce2003.top/d66957d/13.webp-default"></p><p>回酒店的路上，cxyu <del>可能脑袋坏了</del>体验盲人走路（邹哥还跟着我们，其他人先走了）快到酒店时邹哥：“有研究说……(忘了邹哥怎么说的了)”。。。。。开始地理？？电梯里还问 cxyu 有什么感受？？<br>晚上在蓝鸟的主持下完了场狼人杀，我第二轮就挂了，全程摸鱼。。。</p><p>狼人杀结束后知道回收的程序发出来了，luogu 也有题目了，赶紧去测，结果提示<code>代码过长</code>，放弃了。</p><p>之后鸟和 lz 开始<del>捉</del>找人谈话（害怕）我和 zyy 第一个被叫下去，问了些 CSP 有个的问题，很快就结束了。最后<del>全部</del>大部分人结束后，我又被交了下去，还有 ljj xzt tfh <del>czx 由于睡着了就没叫去</del> 房间里还有 cx zzl 然后<del>秘密</del>谈话一波<br>回到 801，有点困就爬床上想休息几分钟，再次睁开眼？？？早上了？？</p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h3><p>lz 的敲门声叫醒了迷迷糊糊的我和 zyy<br>？zyy 怎么和我同张床，后面才知道另一张床被某个恶人占了（强烈谴责），随便吃了早饭又出发前往福州三中。</p><p><img src="https://cos.royce2003.top/d66957d/14.webp-default"></p><p>走到六楼，进考场。</p><p><del>进去第一件事 整理桌面<br>建个文件夹，桌面上能放进去的都塞了进去，留个考试文件</del><br>拿到解压密码，好像完全乱打的<br>开始t1 <a href="https://www.luogu.org/problem/P5664">Emiya 家今天的饭</a>？？看不懂输入？？什么鬼<br>放弃下一题，又看不懂，下一题<br>t2 <a href="https://www.luogu.org/problem/P5665">划分</a>贪心？赶紧可做，先过<br>t3 <a href="https://www.luogu.org/problem/P5666">树的重心</a><br>以前听说过重心的概念，想不到居然在 ccf 的试卷上知道了什么是重心，可有什么用，不会啊。。。。<br>返回 t2，写了快一小时，结果样例都没过。又调了半小时，还是毫无进展。<br>再回到t1认真看题目，终于搞懂了输入，dp？？可还是不会。开始暴力。。又是不过样例。开始思考人生，算了 t1 打表吧。<br>打完 t1 的表还剩好久，不想做 t2t3 了，主要是不会，然后开始研究 ccf 的少年机，每个盘翻了一遍过去，然后开始找游戏<br>扫雷，嘿嘿嘿。。。30 分钟过去了<br>才 11:25，于是乎，蜘蛛纸牌，嘿嘿嘿<br>玩到不想玩了，11:55，差不多结束了，检查了下文件输入输出，文件夹名称，文件名称，等待考试结束。</p><p>出考场后看大家貌似都挺不高兴的。</p><p>也没怎么说话，慢慢走回酒店。<br>点了个外卖，开始收行李，下午 2:30 的车，比较赶，外卖 1:30 才到，抓紧吃了点开始收行李，到了集合时间还没吃完，只好边走边吃，在出发前终于吃完了</p><p>走到公交车站，车来的很快<br>lz 又开始问：“带零钱了吗？”<br>…………<br>再夸次 lz 贴心！！<br>到动车站xzt的身份证找不到了 emmm 办了临时的，没有错过车</p><p>坐在车上好困，都在睡觉<br>中途 zyy 叫我下棋，经常过隧道网不好也就没下了，然后又我睡了<br>hjj 手机放在窗户那拍视频，然后睡着了，拍了快一小时，哈哈哈哈哈哈。<br>之后也就没发生什么事了</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>2019年，我参加竞赛的第一年，noip 也改名成了 csp（博客域名也加了 2019，以此纪念这意义重大的一年）</p><p>不知道是幸运还是不幸运，参加了第一届的 csp，6题里没一题写出来，day2 的难度在 luogu 的评级和 noi 一样？（欣慰）<br>当然，我也应该自我反思，接下来的时间继续努力，明年 csp 加油考个好成绩</p><p>蓝鸟退役了，朱先生也退役了，高三的也都退役了，高二可能也还有人退役<br>朱先生第一次认识是在机房写代码的时候，突然走过来说：“给我看看”，有点害怕，然后乖乖交出鼠标，他点到新手村看了看问了下我名字然后就走了…之后再见到我又问了我名字…<br>貌似还问了好几次<br>第一轮第二轮都和他一个考场（沾巨气啊）。<br>人很好，不过看着有点凶，很强，希望他能考上好大学，<del>貌似不需要我希望</del>，因为本身就年段前几的存在…祝 18 虽生日快乐🎂</p><p>蓝鸟，可爱的社长，人很好，声音好听，在机房经常拿着根棍子，不舍得，不过既然是蓝咕咕自己的选择，那一定深思熟虑过，祝考上好大学（是不是有点早了）<br>好伤心 QAQ</p><p>想到三年后自己退役，会伤心很久，也肯定会哭。因为不舍的信竞的小伙伴，也不舍的 OI，不过那都是后话了。<br>这次 csp 没考好，期中考也没考好<br>接下来的时间，继续努力</p><p>and某人还欠我顿饭！！！</p><hr><p>官方发了公告说是明年继续举办 NOIP ？<br>迷惑行为<br>算是幸运吧，参加了唯一的一届 CSP，不知道以后还会不会重新改成 CSP…</p><hr><p>一学期过去了，因为整理图床，再次看了这篇文章<br>或许只有我们这些因为能和队友们一起去住宾馆，才有这些欢乐吧…<br>然后发现自己原来写的真的…都想重写一遍了…</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;OI第一年，不忘初心砥砺前行！&lt;/p&gt;</summary>
    
    
    
    
    <category term="Royce" scheme="http://ecalose.github.io/tags/Royce/"/>
    
    <category term="游记" scheme="http://ecalose.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【转载】2019信息社十月推送</title>
    <link href="http://ecalose.github.io/posts/1cc325d4.html"/>
    <id>http://ecalose.github.io/posts/1cc325d4.html</id>
    <published>2019-10-30T13:53:00.000Z</published>
    <updated>2020-08-25T08:50:13.355Z</updated>
    
    <content type="html"><![CDATA[<p>十月推送：科普向<br>逻辑真假与电路有什么关系？如何利用布尔表达式优化电路？<br>感谢来自中国人民警察大学的前二中学长来稿！</p><a id="more"></a><p><img src="https://cos.royce2003.top/1cc325d4/01.webp-default"><br><img src="https://cos.royce2003.top/1cc325d4/02.webp-default"><br><img src="https://cos.royce2003.top/1cc325d4/03.webp-default"><br><img src="https://cos.royce2003.top/1cc325d4/04.webp-default"><br><img src="https://cos.royce2003.top/1cc325d4/05.webp-default"></p><p><a href="https://user.qzone.qq.com/2567446457/mood/b91f0899a575b95d401d0a00">原文链接</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;十月推送：科普向&lt;br&gt;逻辑真假与电路有什么关系？如何利用布尔表达式优化电路？&lt;br&gt;感谢来自中国人民警察大学的前二中学长来稿！&lt;/p&gt;</summary>
    
    
    
    
    <category term="转载" scheme="http://ecalose.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
